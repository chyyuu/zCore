var searchIndex = JSON.parse('{\
"kernel_hal":{"doc":"Hardware Abstraction Layer","i":[[0,"defs","kernel_hal","",null,null],[3,"MMUFlags","kernel_hal::defs","",null,null],[18,"CACHE_1","","",0,null],[18,"CACHE_2","","",0,null],[18,"READ","","",0,null],[18,"WRITE","","",0,null],[18,"EXECUTE","","",0,null],[18,"USER","","",0,null],[18,"RXW","","",0,null],[11,"empty","","Returns an empty set of flags",0,[[],["mmuflags",3]]],[11,"all","","Returns the set containing all flags.",0,[[],["mmuflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",0,[[],["usize",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",0,[[["usize",15]],[["mmuflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",0,[[["usize",15]],["mmuflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",0,[[["usize",15]],["mmuflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",0,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",0,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",0,[[["mmuflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",0,[[["mmuflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",0,[[["mmuflags",3]]]],[11,"remove","","Removes the specified flags in-place.",0,[[["mmuflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",0,[[["mmuflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",0,[[["bool",15],["mmuflags",3]]]],[4,"CachePolicy","","",null,null],[13,"Cached","","",1,null],[13,"Uncached","","",1,null],[13,"UncachedDevice","","",1,null],[13,"WriteCombining","","",1,null],[17,"CACHE_POLICY_MASK","","",null,null],[6,"PhysAddr","","",null,null],[6,"VirtAddr","","",null,null],[6,"DevVAddr","","",null,null],[17,"PAGE_SIZE","","",null,null],[0,"user","kernel_hal","",null,null],[3,"UserPtr","kernel_hal::user","",null,null],[8,"Policy","","",null,null],[8,"Read","","",null,null],[8,"Write","","",null,null],[4,"In","","",null,null],[4,"Out","","",null,null],[4,"InOut","","",null,null],[6,"UserInPtr","","",null,null],[6,"UserOutPtr","","",null,null],[6,"UserInOutPtr","","",null,null],[4,"Error","","The error type which is returned from user pointer.",null,null],[13,"InvalidUtf8","","",2,null],[13,"InvalidPointer","","",2,null],[13,"BufferTooSmall","","",2,null],[13,"InvalidLength","","",2,null],[13,"InvalidVectorAddress","","",2,null],[11,"from_addr_size","","",3,[[["usize",15]],[["result",4],["error",4]]]],[11,"is_null","","",3,[[],["bool",15]]],[11,"add","","",3,[[["usize",15]]]],[11,"as_ptr","","",3,[[]]],[11,"check","","",3,[[],[["result",4],["error",4]]]],[11,"as_ref","","",3,[[],[["error",4],["result",4]]]],[11,"read","","",3,[[],[["error",4],["result",4]]]],[11,"read_if_not_null","","",3,[[],[["option",4],["result",4],["error",4]]]],[11,"read_array","","",3,[[["usize",15]],[["result",4],["vec",3],["error",4]]]],[11,"read_string","","",3,[[["usize",15]],[["string",3],["error",4],["result",4]]]],[11,"read_cstring","","",3,[[],[["string",3],["error",4],["result",4]]]],[11,"read_cstring_array","","",3,[[],[["result",4],["vec",3],["error",4]]]],[11,"write","","",3,[[],[["result",4],["error",4]]]],[11,"write_if_not_null","","",3,[[],[["result",4],["error",4]]]],[11,"write_array","","",3,[[],[["result",4],["error",4]]]],[11,"write_cstring","","",3,[[["str",15]],[["result",4],["error",4]]]],[3,"IoVec","","",null,null],[6,"IoVecIn","","",null,null],[6,"IoVecOut","","",null,null],[3,"IoVecs","","A valid IoVecs request from user",null,null],[11,"read_iovecs","","",3,[[["usize",15]],[["result",4],["error",4],["iovecs",3]]]],[11,"read_iovecs","","",4,[[["usize",15]],[["result",4],["error",4],["iovecs",3]]]],[11,"total_len","","",5,[[],["usize",15]]],[11,"read_to_vec","","",5,[[],[["result",4],["error",4],["vec",3]]]],[11,"write_from_buf","","",5,[[],[["result",4],["usize",15],["error",4]]]],[11,"is_null","","",6,[[],["bool",15]]],[11,"len","","",6,[[],["usize",15]]],[11,"is_empty","","",6,[[],["bool",15]]],[11,"check","","",6,[[],[["result",4],["error",4]]]],[11,"as_slice","","",6,[[],[["result",4],["error",4]]]],[11,"as_mut_slice","","",6,[[],[["result",4],["error",4]]]],[0,"vdso","kernel_hal","",null,null],[3,"VdsoConstants","kernel_hal::vdso","This struct contains constants that are initialized by …",null,null],[12,"max_num_cpus","","Maximum number of CPUs that might be online during the …",7,null],[12,"features","","Bit map indicating features.",7,null],[12,"dcache_line_size","","Number of bytes in a data cache line.",7,null],[12,"icache_line_size","","Number of bytes in an instruction cache line.",7,null],[12,"ticks_per_second","","Conversion factor for zx_ticks_get return values to …",7,null],[12,"ticks_to_mono_numerator","","Ratio which relates ticks (zx_ticks_get) to clock …",7,null],[12,"ticks_to_mono_denominator","","",7,null],[12,"physmem","","Total amount of physical memory in the system, in bytes.",7,null],[12,"version_string_len","","Actual length of <code>version_string</code>, not including the NUL …",7,null],[12,"version_string","","A NUL-terminated UTF-8 string returned by …",7,null],[3,"Features","","Bit map indicating features.",null,null],[12,"cpu","","",8,null],[12,"hw_breakpoint_count","","Total amount of debug registers available in the system.",8,null],[12,"hw_watchpoint_count","","",8,null],[11,"set_version_string","","Set version string.",7,[[["str",15]]]],[3,"VersionString","","",null,null],[3,"VectorRegs","kernel_hal","",null,null],[12,"fcw","","",9,null],[12,"fsw","","",9,null],[12,"ftw","","",9,null],[12,"_pad0","","",9,null],[12,"fop","","",9,null],[12,"fip","","",9,null],[12,"fcs","","",9,null],[12,"_pad1","","",9,null],[12,"fdp","","",9,null],[12,"fds","","",9,null],[12,"_pad2","","",9,null],[12,"mxcsr","","",9,null],[12,"mxcsr_mask","","",9,null],[12,"mm","","",9,null],[12,"xmm","","",9,null],[12,"reserved","","",9,null],[12,"available","","",9,null],[3,"U128","","",null,null],[12,"0","","",10,null],[3,"HalError","","The error type which is returned from HAL functions.",null,null],[6,"Result","","The result type returned by HAL functions.",null,null],[3,"Thread","","",null,null],[5,"context_run","","",null,[[["usercontext",3]]]],[8,"PageTableTrait","","",null,null],[10,"map","","Map the page of <code>vaddr</code> to the frame of <code>paddr</code> with <code>flags</code>.",11,[[["virtaddr",6],["physaddr",6],["mmuflags",3]],["result",6]]],[10,"unmap","","Unmap the page of <code>vaddr</code>.",11,[[["virtaddr",6]],["result",6]]],[10,"protect","","Change the <code>flags</code> of the page of <code>vaddr</code>.",11,[[["virtaddr",6],["mmuflags",3]],["result",6]]],[10,"query","","Query the physical address which the page of <code>vaddr</code> maps …",11,[[["virtaddr",6]],[["result",6],["physaddr",6]]]],[10,"table_phys","","Get the physical address of root page table.",11,[[],["physaddr",6]]],[11,"map_many","","",11,[[["virtaddr",6],["mmuflags",3]],["result",6]]],[11,"map_cont","","",11,[[["usize",15],["virtaddr",6],["physaddr",6],["mmuflags",3]],["result",6]]],[11,"unmap_cont","","",11,[[["usize",15],["virtaddr",6]],["result",6]]],[3,"PageTable","","Page Table",null,null],[3,"PhysFrame","","",null,null],[5,"pmem_read","","Read physical memory from <code>paddr</code> to <code>buf</code>.",null,[[["physaddr",6]]]],[5,"pmem_write","","Write physical memory to <code>paddr</code> from <code>buf</code>.",null,[[["physaddr",6]]]],[5,"pmem_zero","","Zero physical memory at <code>[paddr, paddr + len)</code>",null,[[["usize",15],["physaddr",6]]]],[5,"frame_copy","","Copy content of <code>src</code> frame to <code>target</code> frame.",null,[[["physaddr",6]]]],[5,"frame_flush","","Flush the physical frame.",null,[[["physaddr",6]]]],[5,"serial_set_callback","","Register a callback of serial readable event.",null,[[["box",3],["fn",8]]]],[5,"serial_read","","Read a string from console.",null,[[],["usize",15]]],[5,"serial_write","","Output a string to console.",null,[[["str",15]]]],[5,"timer_now","","Get current time.",null,[[],["duration",3]]],[5,"timer_set","","Set a new timer. After <code>deadline</code>, the <code>callback</code> will be …",null,[[["fnonce",8],["box",3],["duration",3]]]],[5,"timer_tick","","Check timers, call when timer interrupt happened.",null,[[]]],[3,"InterruptManager","","",null,null],[5,"vdso_constants","","Get platform specific information.",null,[[],["vdsoconstants",3]]],[5,"fetch_fault_vaddr","","Get fault address of the last page fault.",null,[[],["virtaddr",6]]],[5,"pc_firmware_tables","","Get physical address of <code>acpi_rsdp</code> and <code>smbios</code> on x86_64.",null,[[]]],[5,"get_acpi_table","","Get ACPI Table",null,[[],[["acpi",3],["option",4]]]],[5,"outpd","","IO Ports access on x86 platform",null,[[["u32",15],["u16",15]]]],[5,"inpd","","",null,[[["u16",15]],["u32",15]]],[5,"apic_local_id","","Get local APIC ID",null,[[],["u8",15]]],[5,"fill_random","","Fill random bytes to the buffer",null,[[]]],[5,"yield_now","","Yields execution back to the async runtime.",null,[[]]],[5,"sleep_until","","Sleeps until the specified of time.",null,[[["duration",3]]]],[3,"SleepFuture","","",null,null],[5,"serial_getchar","","Get a char from serial.",null,[[]]],[3,"SerialFuture","","",null,null],[3,"GeneralRegs","","General registers",null,null],[12,"rax","","",12,null],[12,"rbx","","",12,null],[12,"rcx","","",12,null],[12,"rdx","","",12,null],[12,"rsi","","",12,null],[12,"rdi","","",12,null],[12,"rbp","","",12,null],[12,"rsp","","",12,null],[12,"r8","","",12,null],[12,"r9","","",12,null],[12,"r10","","",12,null],[12,"r11","","",12,null],[12,"r12","","",12,null],[12,"r13","","",12,null],[12,"r14","","",12,null],[12,"r15","","",12,null],[12,"rip","","",12,null],[12,"rflags","","",12,null],[12,"fsbase","","",12,null],[12,"gsbase","","",12,null],[3,"UserContext","","User space context",null,null],[12,"general","","",13,null],[12,"trap_num","","",13,null],[12,"error_code","","",13,null],[11,"borrow","kernel_hal::defs","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","kernel_hal","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_future","","",19,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"into_future","","",20,[[]]],[11,"borrow","kernel_hal::user","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"borrow","kernel_hal::vdso","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"borrow","kernel_hal","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"clone","","",13,[[],["usercontext",3]]],[11,"clone","","",12,[[],["generalregs",3]]],[11,"default","","",12,[[],["generalregs",3]]],[11,"default","","",13,[[],["usercontext",3]]],[11,"eq","","",12,[[["generalregs",3]],["bool",15]]],[11,"ne","","",12,[[["generalregs",3]],["bool",15]]],[11,"eq","","",13,[[["usercontext",3]],["bool",15]]],[11,"ne","","",13,[[["usercontext",3]],["bool",15]]],[11,"fmt","","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",13,[[["formatter",3]],[["result",4],["error",3]]]],[11,"map","","Map the page of <code>vaddr</code> to the frame of <code>paddr</code> with <code>flags</code>.",16,[[["virtaddr",6],["physaddr",6],["mmuflags",3]],["result",6]]],[11,"unmap","","Unmap the page of <code>vaddr</code>.",16,[[["virtaddr",6]],["result",6]]],[11,"protect","","Change the <code>flags</code> of the page of <code>vaddr</code>.",16,[[["virtaddr",6],["mmuflags",3]],["result",6]]],[11,"query","","Query the physical address which the page of <code>vaddr</code> maps …",16,[[["virtaddr",6]],[["result",6],["physaddr",6]]]],[11,"table_phys","","Get the physical address of root page table.",16,[[],["physaddr",6]]],[11,"unmap_cont","","",16,[[["usize",15],["virtaddr",6]],["result",6]]],[11,"deref","kernel_hal::user","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"fmt","kernel_hal::defs","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","kernel_hal","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","kernel_hal::user","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","kernel_hal::vdso","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub","kernel_hal::defs","Returns the set difference of the two sets of flags.",0,[[["mmuflags",3]],["mmuflags",3]]],[11,"eq","","",0,[[["mmuflags",3]],["bool",15]]],[11,"ne","","",0,[[["mmuflags",3]],["bool",15]]],[11,"eq","","",1,[[["cachepolicy",4]],["bool",15]]],[11,"eq","kernel_hal::user","",2,[[["error",4]],["bool",15]]],[11,"cmp","kernel_hal::defs","",0,[[["mmuflags",3]],["ordering",4]]],[11,"partial_cmp","","",0,[[["mmuflags",3]],[["ordering",4],["option",4]]]],[11,"sub_assign","","Disables all flags enabled in the set.",0,[[["mmuflags",3]]]],[11,"not","","Returns the complement of this set of flags.",0,[[],["mmuflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",0,[[["mmuflags",3]],["mmuflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",0,[[["mmuflags",3]],["mmuflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",0,[[["mmuflags",3]],["mmuflags",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",0,[[["mmuflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",0,[[["mmuflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",0,[[["mmuflags",3]]]],[11,"drop","kernel_hal","",17,[[]]],[11,"hash","kernel_hal::defs","",0,[[]]],[11,"try_from","","",1,[[["u32",15]],[["result",4],["u32",15]]]],[11,"from_iter","","",0,[[["intoiterator",8]],["mmuflags",3]]],[11,"from","kernel_hal::user","",3,[[["usize",15]]]],[11,"fmt","kernel_hal::defs","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"clone","","",0,[[],["mmuflags",3]]],[11,"clone","","",1,[[],["cachepolicy",4]]],[11,"clone","kernel_hal","",9,[[],["vectorregs",3]]],[11,"clone","","",10,[[],["u128",3]]],[11,"clone","kernel_hal::user","",2,[[],["error",4]]],[11,"default","kernel_hal","",9,[[]]],[11,"default","","",10,[[],["u128",3]]],[11,"default","kernel_hal::vdso","",24,[[]]],[11,"poll","kernel_hal","",19,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",20,[[["context",3],["pin",3]],["poll",4]]],[11,"spawn","","Spawn a new thread.",15,[[["box",3],["usize",15],["pin",3]]]],[11,"set_tid","","Set tid and pid of current task.",15,[[["u64",15]]]],[11,"get_tid","","Get tid and pid of current task.",15,[[]]],[11,"map_many","","",11,[[["virtaddr",6],["mmuflags",3]],["result",6]]],[11,"map_cont","","",11,[[["usize",15],["virtaddr",6],["physaddr",6],["mmuflags",3]],["result",6]]],[11,"unmap_cont","","",11,[[["usize",15],["virtaddr",6]],["result",6]]],[11,"current","","Get current page table",16,[[]]],[11,"new","","Create a new <code>PageTable</code>.",16,[[]]],[11,"alloc","","",17,[[],["option",4]]],[11,"alloc_contiguous_base","","",17,[[["usize",15]],[["physaddr",6],["option",4]]]],[11,"alloc_contiguous","","",17,[[["usize",15]],["vec",3]]],[11,"addr","","",17,[[],["physaddr",6]]],[11,"zero_frame_addr","","",17,[[],["physaddr",6]]],[11,"handle","","Handle IRQ.",18,[[["u8",15]]]],[11,"set_ioapic_handle","","",18,[[["u32",15],["box",3],["fn",8]],[["option",4],["u8",15]]]],[11,"add_handle","","Add an interrupt handle to an irq",18,[[["fn",8],["box",3],["u8",15]],[["option",4],["u8",15]]]],[11,"reset_ioapic_handle","","",18,[[["u32",15]],["bool",15]]],[11,"remove_handle","","Remove the interrupt handle of an irq",18,[[["u8",15]],["bool",15]]],[11,"allocate_block","","Allocate contiguous positions for irq",18,[[["u32",15]],["option",4]]],[11,"free_block","","",18,[[["u32",15]]]],[11,"overwrite_handler","","",18,[[["u32",15],["box",3],["fn",8]],["bool",15]]],[11,"enable","","Enable IRQ.",18,[[["u32",15]]]],[11,"disable","","Disable IRQ.",18,[[["u32",15]]]],[11,"maxinstr","","Get IO APIC maxinstr",18,[[["u32",15]],[["option",4],["u8",15]]]],[11,"configure","","",18,[[["u32",15],["u8",15],["bool",15]],["bool",15]]],[11,"is_valid","","",18,[[["u32",15]],["bool",15]]],[11,"run_fncall","","Go to user context by function return, within the same …",13,[[]]],[11,"get_syscall_num","","Get number of syscall",13,[[],["usize",15]]],[11,"get_syscall_ret","","Get return value of syscall",13,[[],["usize",15]]],[11,"set_syscall_ret","","Set return value of syscall",13,[[["usize",15]]]],[11,"get_syscall_args","","Get syscall args",13,[[]]],[11,"set_ip","","Set instruction pointer",13,[[["usize",15]]]],[11,"set_sp","","Set stack pointer",13,[[["usize",15]]]],[11,"get_sp","","Get stack pointer",13,[[],["usize",15]]],[11,"set_tls","","Set tls pointer",13,[[["usize",15]]]]],"p":[[3,"MMUFlags"],[4,"CachePolicy"],[4,"Error"],[3,"UserPtr"],[6,"UserInPtr"],[3,"IoVecs"],[3,"IoVec"],[3,"VdsoConstants"],[3,"Features"],[3,"VectorRegs"],[3,"U128"],[8,"PageTableTrait"],[3,"GeneralRegs"],[3,"UserContext"],[3,"HalError"],[3,"Thread"],[3,"PageTable"],[3,"PhysFrame"],[3,"InterruptManager"],[3,"SleepFuture"],[3,"SerialFuture"],[4,"In"],[4,"Out"],[4,"InOut"],[3,"VersionString"]]},\
"kernel_hal_unix":{"doc":"","i":[[3,"MMUFlags","kernel_hal_unix","",null,null],[4,"CachePolicy","","",null,null],[13,"Cached","","",0,null],[13,"Uncached","","",0,null],[13,"UncachedDevice","","",0,null],[13,"WriteCombining","","",0,null],[17,"CACHE_POLICY_MASK","","",null,null],[6,"PhysAddr","","",null,null],[6,"VirtAddr","","",null,null],[6,"DevVAddr","","",null,null],[17,"PAGE_SIZE","","",null,null],[0,"defs","","",null,null],[3,"MMUFlags","kernel_hal_unix::defs","",null,null],[4,"CachePolicy","","",null,null],[13,"Cached","","",0,null],[13,"Uncached","","",0,null],[13,"UncachedDevice","","",0,null],[13,"WriteCombining","","",0,null],[17,"CACHE_POLICY_MASK","","",null,null],[6,"PhysAddr","","",null,null],[6,"VirtAddr","","",null,null],[6,"DevVAddr","","",null,null],[17,"PAGE_SIZE","","",null,null],[0,"user","kernel_hal_unix","",null,null],[3,"UserPtr","kernel_hal_unix::user","",null,null],[8,"Policy","","",null,null],[8,"Read","","",null,null],[8,"Write","","",null,null],[4,"In","","",null,null],[4,"Out","","",null,null],[4,"InOut","","",null,null],[6,"UserInPtr","","",null,null],[6,"UserOutPtr","","",null,null],[6,"UserInOutPtr","","",null,null],[4,"Error","","The error type which is returned from user pointer.",null,null],[13,"InvalidUtf8","","",1,null],[13,"InvalidPointer","","",1,null],[13,"BufferTooSmall","","",1,null],[13,"InvalidLength","","",1,null],[13,"InvalidVectorAddress","","",1,null],[3,"IoVec","","",null,null],[6,"IoVecIn","","",null,null],[6,"IoVecOut","","",null,null],[3,"IoVecs","","A valid IoVecs request from user",null,null],[0,"vdso","kernel_hal_unix","",null,null],[3,"VdsoConstants","kernel_hal_unix::vdso","This struct contains constants that are initialized by …",null,null],[12,"max_num_cpus","","Maximum number of CPUs that might be online during the …",2,null],[12,"features","","Bit map indicating features.",2,null],[12,"dcache_line_size","","Number of bytes in a data cache line.",2,null],[12,"icache_line_size","","Number of bytes in an instruction cache line.",2,null],[12,"ticks_per_second","","Conversion factor for zx_ticks_get return values to …",2,null],[12,"ticks_to_mono_numerator","","Ratio which relates ticks (zx_ticks_get) to clock …",2,null],[12,"ticks_to_mono_denominator","","",2,null],[12,"physmem","","Total amount of physical memory in the system, in bytes.",2,null],[12,"version_string_len","","Actual length of <code>version_string</code>, not including the NUL …",2,null],[12,"version_string","","A NUL-terminated UTF-8 string returned by …",2,null],[3,"Features","","Bit map indicating features.",null,null],[12,"cpu","","",3,null],[12,"hw_breakpoint_count","","Total amount of debug registers available in the system.",3,null],[12,"hw_watchpoint_count","","",3,null],[3,"VersionString","","",null,null],[3,"GeneralRegs","kernel_hal_unix","General registers",null,null],[12,"rax","","",4,null],[12,"rbx","","",4,null],[12,"rcx","","",4,null],[12,"rdx","","",4,null],[12,"rsi","","",4,null],[12,"rdi","","",4,null],[12,"rbp","","",4,null],[12,"rsp","","",4,null],[12,"r8","","",4,null],[12,"r9","","",4,null],[12,"r10","","",4,null],[12,"r11","","",4,null],[12,"r12","","",4,null],[12,"r13","","",4,null],[12,"r14","","",4,null],[12,"r15","","",4,null],[12,"rip","","",4,null],[12,"rflags","","",4,null],[12,"fsbase","","",4,null],[12,"gsbase","","",4,null],[3,"UserContext","","User space context",null,null],[12,"general","","",5,null],[12,"trap_num","","",5,null],[12,"error_code","","",5,null],[5,"timer_now","","Get current time.",null,[[],["duration",3]]],[17,"CACHE_POLICY_MASK","","",null,null],[6,"PhysAddr","","",null,null],[6,"VirtAddr","","",null,null],[6,"DevVAddr","","",null,null],[17,"PAGE_SIZE","","",null,null],[6,"Result","","The result type returned by HAL functions.",null,null],[3,"Thread","","",null,null],[5,"context_run","","",null,[[["usercontext",3]]]],[8,"PageTableTrait","","",null,null],[10,"map","","Map the page of <code>vaddr</code> to the frame of <code>paddr</code> with <code>flags</code>.",6,[[["usize",15],["mmuflags",3]],[["result",4],["halerror",3]]]],[10,"unmap","","Unmap the page of <code>vaddr</code>.",6,[[["usize",15]],[["result",4],["halerror",3]]]],[10,"protect","","Change the <code>flags</code> of the page of <code>vaddr</code>.",6,[[["usize",15],["mmuflags",3]],[["result",4],["halerror",3]]]],[10,"query","","Query the physical address which the page of <code>vaddr</code> maps …",6,[[["usize",15]],[["usize",15],["halerror",3],["result",4]]]],[10,"table_phys","","Get the physical address of root page table.",6,[[],["usize",15]]],[11,"map_many","","",6,[[["usize",15],["mmuflags",3]],[["result",4],["halerror",3]]]],[11,"map_cont","","",6,[[["usize",15],["mmuflags",3]],[["result",4],["halerror",3]]]],[11,"unmap_cont","","",6,[[["usize",15]],[["result",4],["halerror",3]]]],[3,"PageTable","","Page Table",null,null],[3,"PhysFrame","","",null,null],[5,"pmem_read","","Read physical memory from <code>paddr</code> to <code>buf</code>.",null,[[["usize",15]]]],[5,"pmem_write","","Write physical memory to <code>paddr</code> from <code>buf</code>.",null,[[["usize",15]]]],[5,"pmem_zero","","Zero physical memory at <code>[paddr, paddr + len)</code>",null,[[["usize",15]]]],[5,"frame_copy","","Copy content of <code>src</code> frame to <code>target</code> frame.",null,[[["usize",15]]]],[5,"frame_flush","","Flush the physical frame.",null,[[["usize",15]]]],[5,"serial_set_callback","","Register a callback of serial readable event.",null,[[["box",3],["fn",8],["global",3]]]],[5,"serial_read","","Read a string from console.",null,[[],["usize",15]]],[5,"serial_write","","Output a string to console.",null,[[["str",15]]]],[5,"timer_set","","Set a new timer. After <code>deadline</code>, the <code>callback</code> will be …",null,[[["duration",3],["global",3],["fnonce",8],["box",3]]]],[5,"timer_tick","","Check timers, call when timer interrupt happened.",null,[[]]],[3,"InterruptManager","","",null,null],[5,"vdso_constants","","Get platform specific information.",null,[[],["vdsoconstants",3]]],[5,"fetch_fault_vaddr","","Get fault address of the last page fault.",null,[[],["usize",15]]],[5,"pc_firmware_tables","","Get physical address of <code>acpi_rsdp</code> and <code>smbios</code> on x86_64.",null,[[]]],[5,"get_acpi_table","","Get ACPI Table",null,[[],[["acpi",3],["option",4]]]],[5,"outpd","","IO Ports access on x86 platform",null,[[["u32",15],["u16",15]]]],[5,"inpd","","",null,[[["u16",15]],["u32",15]]],[5,"apic_local_id","","Get local APIC ID",null,[[],["u8",15]]],[5,"fill_random","","Fill random bytes to the buffer",null,[[]]],[5,"yield_now","","Yields execution back to the async runtime.",null,[[]]],[5,"sleep_until","","Sleeps until the specified of time.",null,[[["duration",3]]]],[3,"SleepFuture","","",null,null],[5,"serial_getchar","","Get a char from serial.",null,[[]]],[3,"SerialFuture","","",null,null],[3,"MMUFlags","","",null,null],[4,"CachePolicy","","",null,null],[13,"Cached","","",0,null],[13,"Uncached","","",0,null],[13,"UncachedDevice","","",0,null],[13,"WriteCombining","","",0,null],[3,"VectorRegs","","",null,null],[12,"fcw","","",7,null],[12,"fsw","","",7,null],[12,"ftw","","",7,null],[12,"_pad0","","",7,null],[12,"fop","","",7,null],[12,"fip","","",7,null],[12,"fcs","","",7,null],[12,"_pad1","","",7,null],[12,"fdp","","",7,null],[12,"fds","","",7,null],[12,"_pad2","","",7,null],[12,"mxcsr","","",7,null],[12,"mxcsr_mask","","",7,null],[12,"mm","","",7,null],[12,"xmm","","",7,null],[12,"reserved","","",7,null],[12,"available","","",7,null],[3,"U128","","",null,null],[12,"0","","",8,null],[3,"HalError","","The error type which is returned from HAL functions.",null,null],[5,"syscall_entry","","The syscall entry of function call.",null,[[]]],[3,"Thread","","",null,null],[11,"spawn","","",9,[[["usize",15],["box",3],["pin",3]]]],[11,"set_tid","","",9,[[["u64",15]]]],[11,"get_tid","","",9,[[]]],[3,"PageTable","","Page Table",null,null],[11,"new","","Create a new <code>PageTable</code>.",10,[[]]],[3,"PhysFrame","","",null,null],[11,"alloc","","",11,[[],["option",4]]],[11,"zero_frame_addr","","",11,[[],["physaddr",6]]],[5,"pmem_read","","Read physical memory from <code>paddr</code> to <code>buf</code>.",null,[[["physaddr",6]]]],[5,"pmem_write","","Write physical memory to <code>paddr</code> from <code>buf</code>.",null,[[["physaddr",6]]]],[5,"pmem_zero","","Zero physical memory at <code>[paddr, paddr + len)</code>",null,[[["usize",15],["physaddr",6]]]],[5,"frame_copy","","Copy content of <code>src</code> frame to <code>target</code> frame",null,[[["physaddr",6]]]],[5,"frame_flush","","Flush the physical frame.",null,[[["physaddr",6]]]],[5,"serial_set_callback","","",null,[[["fn",8],["box",3]]]],[5,"serial_read","","",null,[[],["usize",15]]],[5,"serial_write","","Output a char to console.",null,[[["str",15]]]],[5,"timer_now","","Get current time.",null,[[],["duration",3]]],[5,"timer_set","","Set a new timer.",null,[[["box",3],["duration",3],["fnonce",8]]]],[5,"vdso_constants","","",null,[[],["vdsoconstants",3]]],[5,"init","","Initialize the HAL.",null,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","kernel_hal_unix::user","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","kernel_hal_unix::vdso","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","kernel_hal_unix","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"into_future","","",24,[[]]],[11,"into_future","","",24,[[]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"into_future","","",25,[[]]],[11,"into_future","","",25,[[]]],[11,"vzip","","",25,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"clone","","",12,[[],["mmuflags",3]]],[11,"clone","","",0,[[],["cachepolicy",4]]],[11,"clone","kernel_hal_unix::user","",1,[[],["error",4]]],[11,"clone","kernel_hal_unix","",8,[[],["u128",3]]],[11,"clone","","",7,[[],["vectorregs",3]]],[11,"deref","kernel_hal_unix::user","",18,[[]]],[11,"drop","kernel_hal_unix","",22,[[]]],[11,"fmt","","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"deref_mut","kernel_hal_unix::user","",18,[[]]],[11,"fmt","kernel_hal_unix","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"bitor_assign","","Adds the set of flags.",12,[[["mmuflags",3]]]],[11,"sub","","Returns the set difference of the two sets of flags.",12,[[["mmuflags",3]],["mmuflags",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",12,[[["mmuflags",3]]]],[11,"try_from","","",0,[[["u32",15]],[["cachepolicy",4],["u32",15],["result",4]]]],[11,"bitor","","Returns the union of the two sets of flags.",12,[[["mmuflags",3]],["mmuflags",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",12,[[["mmuflags",3]]]],[11,"eq","kernel_hal_unix::user","",1,[[["error",4]],["bool",15]]],[11,"eq","kernel_hal_unix","",12,[[["mmuflags",3]],["bool",15]]],[11,"ne","","",12,[[["mmuflags",3]],["bool",15]]],[11,"eq","","",0,[[["cachepolicy",4]],["bool",15]]],[11,"fmt","","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",12,[[["mmuflags",3]]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",12,[[["mmuflags",3]],["mmuflags",3]]],[11,"hash","","",12,[[]]],[11,"default","","",7,[[],["vectorregs",3]]],[11,"default","kernel_hal_unix::vdso","",19,[[],["versionstring",3]]],[11,"default","kernel_hal_unix","",8,[[],["u128",3]]],[11,"not","","Returns the complement of this set of flags.",12,[[],["mmuflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",12,[[["mmuflags",3]],["mmuflags",3]]],[11,"extend","","",12,[[]]],[11,"map","","Map the page of <code>vaddr</code> to the frame of <code>paddr</code> with <code>flags</code>.",21,[[["usize",15],["mmuflags",3]],[["result",4],["halerror",3]]]],[11,"unmap","","Unmap the page of <code>vaddr</code>.",21,[[["usize",15]],[["result",4],["halerror",3]]]],[11,"protect","","Change the <code>flags</code> of the page of <code>vaddr</code>.",21,[[["usize",15],["mmuflags",3]],[["result",4],["halerror",3]]]],[11,"query","","Query the physical address which the page of <code>vaddr</code> maps …",21,[[["usize",15]],[["usize",15],["halerror",3],["result",4]]]],[11,"table_phys","","Get the physical address of root page table.",21,[[],["usize",15]]],[11,"unmap_cont","","",21,[[["usize",15]],[["result",4],["halerror",3]]]],[11,"from_iter","","",12,[[],["mmuflags",3]]],[11,"poll","","",25,[[["context",3],["pin",3],["serialfuture",3]],["poll",4]]],[11,"poll","","",24,[[["pin",3],["context",3],["sleepfuture",3]],["poll",4]]],[11,"from","kernel_hal_unix::user","",13,[[["usize",15]],["userptr",3]]],[11,"partial_cmp","kernel_hal_unix","",12,[[["mmuflags",3]],[["option",4],["ordering",4]]]],[11,"cmp","","",12,[[["mmuflags",3]],["ordering",4]]],[11,"fmt","kernel_hal_unix::vdso","",3,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix::vdso","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",19,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix::user","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix","",26,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix::user","",13,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix::user","",18,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",17,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","kernel_hal_unix","",5,[[],["usercontext",3]]],[11,"clone","","",4,[[],["generalregs",3]]],[11,"default","","",4,[[],["generalregs",3]]],[11,"default","","",5,[[],["usercontext",3]]],[11,"eq","","",4,[[["generalregs",3]],["bool",15]]],[11,"ne","","",4,[[["generalregs",3]],["bool",15]]],[11,"eq","","",5,[[["usercontext",3]],["bool",15]]],[11,"ne","","",5,[[["usercontext",3]],["bool",15]]],[11,"fmt","","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"drop","","",11,[[]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"map","","Map the page of <code>vaddr</code> to the frame of <code>paddr</code> with <code>flags</code>.",10,[[["virtaddr",6],["physaddr",6],["mmuflags",3]],["result",6]]],[11,"unmap","","Unmap the page of <code>vaddr</code>.",10,[[["virtaddr",6]],["result",6]]],[11,"protect","","Change the <code>flags</code> of the page of <code>vaddr</code>.",10,[[["virtaddr",6],["mmuflags",3]],["result",6]]],[11,"query","","Query the physical address which the page of <code>vaddr</code> maps …",10,[[["virtaddr",6]],[["result",6],["physaddr",6]]]],[11,"table_phys","","Get the physical address of root page table.",10,[[],["physaddr",6]]],[11,"unmap_cont","","",10,[[["virtaddr",6],["usize",15]],["result",6]]],[18,"CACHE_1","","",12,null],[18,"CACHE_2","","",12,null],[18,"READ","","",12,null],[18,"WRITE","","",12,null],[18,"EXECUTE","","",12,null],[18,"USER","","",12,null],[18,"RXW","","",12,null],[11,"empty","","Returns an empty set of flags",12,[[],["mmuflags",3]]],[11,"all","","Returns the set containing all flags.",12,[[],["mmuflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",12,[[],["usize",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",12,[[["usize",15]],[["option",4],["mmuflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",12,[[["usize",15]],["mmuflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",12,[[["usize",15]],["mmuflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",12,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",12,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",12,[[["mmuflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",12,[[["mmuflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",12,[[["mmuflags",3]]]],[11,"remove","","Removes the specified flags in-place.",12,[[["mmuflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",12,[[["mmuflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",12,[[["bool",15],["mmuflags",3]]]],[11,"from_addr_size","kernel_hal_unix::user","",13,[[["usize",15]],[["result",4],["error",4],["userptr",3]]]],[11,"is_null","","",13,[[],["bool",15]]],[11,"add","","",13,[[["usize",15]],["userptr",3]]],[11,"as_ptr","","",13,[[]]],[11,"check","","",13,[[],[["error",4],["result",4]]]],[11,"as_ref","","",13,[[],[["error",4],["result",4]]]],[11,"read","","",13,[[],[["error",4],["result",4]]]],[11,"read_if_not_null","","",13,[[],[["result",4],["option",4],["error",4]]]],[11,"read_array","","",13,[[["usize",15]],[["result",4],["error",4],["vec",3]]]],[11,"read_string","","",13,[[["usize",15]],[["string",3],["result",4],["error",4]]]],[11,"read_cstring","","",13,[[],[["string",3],["result",4],["error",4]]]],[11,"read_cstring_array","","",13,[[],[["vec",3],["result",4],["error",4]]]],[11,"write","","",13,[[],[["error",4],["result",4]]]],[11,"write_if_not_null","","",13,[[],[["error",4],["result",4]]]],[11,"write_array","","",13,[[],[["error",4],["result",4]]]],[11,"write_cstring","","",13,[[["str",15]],[["error",4],["result",4]]]],[11,"read_iovecs","","",13,[[["usize",15]],[["iovecs",3],["error",4],["result",4]]]],[11,"is_null","","",17,[[],["bool",15]]],[11,"len","","",17,[[],["usize",15]]],[11,"is_empty","","",17,[[],["bool",15]]],[11,"check","","",17,[[],[["error",4],["result",4]]]],[11,"as_slice","","",17,[[],[["error",4],["result",4]]]],[11,"as_mut_slice","","",17,[[],[["error",4],["result",4]]]],[11,"total_len","","",18,[[],["usize",15]]],[11,"read_to_vec","","",18,[[],[["result",4],["vec",3],["error",4]]]],[11,"write_from_buf","","",18,[[],[["usize",15],["error",4],["result",4]]]],[11,"set_version_string","kernel_hal_unix::vdso","Set version string.",2,[[["str",15]]]],[11,"run_fncall","kernel_hal_unix","Go to user context by function return, within the same …",5,[[]]],[11,"get_syscall_num","","Get number of syscall",5,[[],["usize",15]]],[11,"get_syscall_ret","","Get return value of syscall",5,[[],["usize",15]]],[11,"set_syscall_ret","","Set return value of syscall",5,[[["usize",15]]]],[11,"get_syscall_args","","Get syscall args",5,[[]]],[11,"set_ip","","Set instruction pointer",5,[[["usize",15]]]],[11,"set_sp","","Set stack pointer",5,[[["usize",15]]]],[11,"get_sp","","Get stack pointer",5,[[],["usize",15]]],[11,"set_tls","","Set tls pointer",5,[[["usize",15]]]],[11,"spawn","","Spawn a new thread.",20,[[["pin",3],["box",3],["usize",15]],["thread",3]]],[11,"set_tid","","Set tid and pid of current task.",20,[[["u64",15]]]],[11,"get_tid","","Get tid and pid of current task.",20,[[]]],[11,"current","","Get current page table",21,[[],["pagetable",3]]],[11,"new","","Create a new <code>PageTable</code>.",21,[[],["pagetable",3]]],[11,"alloc","","",22,[[],[["option",4],["physframe",3]]]],[11,"alloc_contiguous_base","","",22,[[["usize",15]],[["usize",15],["option",4]]]],[11,"alloc_contiguous","","",22,[[["usize",15]],[["physframe",3],["vec",3],["global",3]]]],[11,"addr","","",22,[[],["usize",15]]],[11,"zero_frame_addr","","",22,[[],["usize",15]]],[11,"handle","","Handle IRQ.",23,[[["u8",15]]]],[11,"set_ioapic_handle","","",23,[[["u32",15],["box",3],["global",3],["fn",8]],[["option",4],["u8",15]]]],[11,"add_handle","","Add an interrupt handle to an irq",23,[[["box",3],["u8",15],["fn",8],["global",3]],[["option",4],["u8",15]]]],[11,"reset_ioapic_handle","","",23,[[["u32",15]],["bool",15]]],[11,"remove_handle","","Remove the interrupt handle of an irq",23,[[["u8",15]],["bool",15]]],[11,"allocate_block","","Allocate contiguous positions for irq",23,[[["u32",15]],["option",4]]],[11,"free_block","","",23,[[["u32",15]]]],[11,"overwrite_handler","","",23,[[["u32",15],["box",3],["global",3],["fn",8]],["bool",15]]],[11,"enable","","Enable IRQ.",23,[[["u32",15]]]],[11,"disable","","Disable IRQ.",23,[[["u32",15]]]],[11,"maxinstr","","Get IO APIC maxinstr",23,[[["u32",15]],[["option",4],["u8",15]]]],[11,"configure","","",23,[[["u32",15],["u8",15],["bool",15]],["bool",15]]],[11,"is_valid","","",23,[[["u32",15]],["bool",15]]]],"p":[[4,"CachePolicy"],[4,"Error"],[3,"VdsoConstants"],[3,"Features"],[3,"GeneralRegs"],[3,"UserContext"],[8,"PageTableTrait"],[3,"VectorRegs"],[3,"U128"],[3,"Thread"],[3,"PageTable"],[3,"PhysFrame"],[3,"MMUFlags"],[3,"UserPtr"],[4,"In"],[4,"Out"],[4,"InOut"],[3,"IoVec"],[3,"IoVecs"],[3,"VersionString"],[3,"Thread"],[3,"PageTable"],[3,"PhysFrame"],[3,"InterruptManager"],[3,"SleepFuture"],[3,"SerialFuture"],[3,"HalError"]]},\
"linux_loader":{"doc":"Linux LibOS","i":[[5,"run","linux_loader","Create and run main Linux process",null,[[["string",3],["filesystem",8],["arc",3],["vec",3]],[["process",3],["arc",3]]]]],"p":[]},\
"linux_object":{"doc":"Linux kernel objects","i":[[0,"error","linux_object","Linux error codes",null,null],[6,"LxResult","linux_object::error","Linux Result defination",null,null],[6,"SysResult","","SysResult Result defination (same as Linux Result)",null,null],[4,"LxError","","Linux error codes defination",null,null],[13,"EUNDEF","","Undefined",0,null],[13,"EPERM","","Operation not permitted",0,null],[13,"ENOENT","","No such file or directory",0,null],[13,"ESRCH","","No such process",0,null],[13,"EINTR","","Interrupted system call",0,null],[13,"EIO","","I/O error",0,null],[13,"ENXIO","","No such device or address",0,null],[13,"E2BIG","","Arg list too long",0,null],[13,"ENOEXEC","","Exec format error",0,null],[13,"EBADF","","Bad file number",0,null],[13,"ECHILD","","No child processes",0,null],[13,"EAGAIN","","Try again",0,null],[13,"ENOMEM","","Out of memory",0,null],[13,"EACCES","","Permission denied",0,null],[13,"EFAULT","","Bad address",0,null],[13,"ENOTBLK","","Block device required",0,null],[13,"EBUSY","","Device or resource busy",0,null],[13,"EEXIST","","File exists",0,null],[13,"EXDEV","","Cross-device link",0,null],[13,"ENODEV","","No such device",0,null],[13,"ENOTDIR","","Not a directory",0,null],[13,"EISDIR","","Is a directory",0,null],[13,"EINVAL","","Invalid argument",0,null],[13,"ENFILE","","File table overflow",0,null],[13,"EMFILE","","Too many open files",0,null],[13,"ENOTTY","","Not a tty device",0,null],[13,"ETXTBSY","","Text file busy",0,null],[13,"EFBIG","","File too large",0,null],[13,"ENOSPC","","No space left on device",0,null],[13,"ESPIPE","","Illegal seek",0,null],[13,"EROFS","","Read-only file system",0,null],[13,"EMLINK","","Too many links",0,null],[13,"EPIPE","","Broken pipe",0,null],[13,"EDOM","","Math argument out of domain",0,null],[13,"ERANGE","","Math result not representable",0,null],[13,"EDEADLK","","Resource deadlock would occur",0,null],[13,"ENAMETOOLONG","","Filename too long",0,null],[13,"ENOLCK","","No record locks available",0,null],[13,"ENOSYS","","Function not implemented",0,null],[13,"ENOTEMPTY","","Directory not empty",0,null],[13,"ELOOP","","Too many symbolic links encountered",0,null],[13,"EIDRM","","Identifier removed",0,null],[13,"ENOTSOCK","","Socket operation on non-socket",0,null],[13,"ENOPROTOOPT","","Protocol not available",0,null],[13,"EPFNOSUPPORT","","Protocol family not supported",0,null],[13,"EAFNOSUPPORT","","Address family not supported by protocol",0,null],[13,"ENOBUFS","","No buffer space available",0,null],[13,"EISCONN","","Transport endpoint is already connected",0,null],[13,"ENOTCONN","","Transport endpoint is not connected",0,null],[13,"ECONNREFUSED","","Connection refused",0,null],[0,"fs","linux_object","Linux file objects",null,null],[3,"MemBuf","linux_object::fs","memory buffer for device",null,null],[3,"FcntlFlags","","fcntl flags",null,null],[3,"FileFlags","","file operate flags",null,null],[3,"File","","file implement struct",null,null],[12,"options","","file open options",1,null],[12,"path","","file path",1,null],[3,"OpenOptions","","file open options struct",null,null],[12,"read","","open as readable",2,null],[12,"write","","open as writeable",2,null],[12,"append","","Before each write, the file offset is positioned at the …",2,null],[12,"nonblock","","non block open",2,null],[12,"fd_cloexec","","close on exec",2,null],[4,"SeekFrom","","file seek type",null,null],[13,"Start","","seek from start point",3,null],[13,"End","","seek from end",3,null],[13,"Current","","seek from current",3,null],[4,"PipeEnd","","Pipe end specify",null,null],[13,"Read","","read end",4,null],[13,"Write","","write end",4,null],[3,"PipeData","","Pipe inner data",null,null],[3,"Pipe","","pipe struct",null,null],[3,"Pseudo","","Pseudo INode struct",null,null],[3,"RandomINodeData","","random INode data struct",null,null],[3,"RandomINode","","random INode struct",null,null],[3,"STDIN","","STDIN global reference",null,null],[3,"STDOUT","","STDOUT global reference",null,null],[3,"Stdin","","Stdin struct, for Stdin buffer",null,null],[3,"Stdout","","Stdout struct, empty now",null,null],[0,"vfs","","",null,null],[8,"INode","linux_object::fs::vfs","Abstract file system object such as file or directory.",null,null],[10,"read_at","","Read bytes at <code>offset</code> into <code>buf</code>, return the number of bytes …",5,[[["usize",15]],[["usize",15],["result",4],["fserror",4]]]],[10,"write_at","","Write bytes at <code>offset</code> from <code>buf</code>, return the number of …",5,[[["usize",15]],[["usize",15],["result",4],["fserror",4]]]],[10,"poll","","Poll the events, return a bitmap of events.",5,[[],[["pollstatus",3],["result",4],["fserror",4]]]],[11,"async_poll","","Poll the events, return a bitmap of events, async version.",5,[[],[["box",3],["pin",3]]]],[11,"metadata","","Get metadata of the INode",5,[[],[["result",4],["metadata",3],["fserror",4]]]],[11,"set_metadata","","Set metadata of the INode",5,[[["metadata",3]],[["result",4],["fserror",4]]]],[11,"sync_all","","Sync all data and metadata",5,[[],[["result",4],["fserror",4]]]],[11,"sync_data","","Sync data (not include metadata)",5,[[],[["result",4],["fserror",4]]]],[11,"resize","","Resize the file",5,[[["usize",15]],[["result",4],["fserror",4]]]],[11,"create","","Create a new INode in the directory",5,[[["filetype",4],["u32",15],["str",15]],[["arc",3],["fserror",4],["result",4]]]],[11,"create2","","Create a new INode in the directory, with a data field …",5,[[["u32",15],["usize",15],["filetype",4],["str",15]],[["arc",3],["fserror",4],["result",4]]]],[11,"link","","Create a hard link <code>name</code> to <code>other</code>",5,[[["arc",3],["str",15]],[["result",4],["fserror",4]]]],[11,"unlink","","Delete a hard link <code>name</code>",5,[[["str",15]],[["result",4],["fserror",4]]]],[11,"move_","","Move INode <code>self/old_name</code> to <code>target/new_name</code>. If <code>target</code> …",5,[[["arc",3],["str",15]],[["result",4],["fserror",4]]]],[11,"find","","Find the INode <code>name</code> in the directory",5,[[["str",15]],[["arc",3],["fserror",4],["result",4]]]],[11,"get_entry","","Get the name of directory entry",5,[[["usize",15]],[["result",4],["string",3],["fserror",4]]]],[11,"get_entry_with_metadata","","Get the name of directory entry with metadata",5,[[["usize",15]],[["result",4],["fserror",4]]]],[11,"io_control","","Control device",5,[[["u32",15],["usize",15]],[["usize",15],["result",4],["fserror",4]]]],[11,"mmap","","Map files or devices into memory",5,[[["mmaparea",3]],[["result",4],["fserror",4]]]],[11,"fs","","Get the file system of the INode",5,[[],[["arc",3],["filesystem",8]]]],[10,"as_any_ref","","This is used to implement dynamics cast. Simply return …",5,[[],["any",8]]],[4,"IOCTLError","","",null,null],[13,"NotValidFD","","",6,null],[13,"NotValidMemory","","",6,null],[13,"NotValidParam","","",6,null],[13,"NotCharDevice","","",6,null],[3,"PollStatus","","",null,null],[12,"read","","",7,null],[12,"write","","",7,null],[12,"error","","",7,null],[3,"MMapArea","","",null,null],[12,"start_vaddr","","Start virtual address",8,null],[12,"end_vaddr","","End virtual address",8,null],[12,"prot","","Access permissions",8,null],[12,"flags","","Flags",8,null],[12,"offset","","Offset from the file in bytes",8,null],[3,"Metadata","","Metadata of INode",null,null],[12,"dev","","Device ID",9,null],[12,"inode","","Inode number",9,null],[12,"size","","Size in bytes",9,null],[12,"blk_size","","A file system-specific preferred I/O block size for this …",9,null],[12,"blocks","","Size in blocks",9,null],[12,"atime","","Time of last access",9,null],[12,"mtime","","Time of last modification",9,null],[12,"ctime","","Time of last change",9,null],[12,"type_","","Type of file",9,null],[12,"mode","","Permission",9,null],[12,"nlinks","","Number of hard links",9,null],[12,"uid","","User ID",9,null],[12,"gid","","Group ID",9,null],[12,"rdev","","Raw device id e.g. /dev/null: makedev(0x1, 0x3)",9,null],[3,"Timespec","","",null,null],[12,"sec","","",10,null],[12,"nsec","","",10,null],[4,"FileType","","",null,null],[13,"File","","",11,null],[13,"Dir","","",11,null],[13,"SymLink","","",11,null],[13,"CharDevice","","",11,null],[13,"BlockDevice","","",11,null],[13,"NamedPipe","","",11,null],[13,"Socket","","",11,null],[3,"FsInfo","","Metadata of FileSystem",null,null],[12,"bsize","","File system block size",12,null],[12,"frsize","","Fundamental file system block size",12,null],[12,"blocks","","Total number of blocks on file system in units of <code>frsize</code>",12,null],[12,"bfree","","Total number of free blocks",12,null],[12,"bavail","","Number of free blocks available to non-privileged process",12,null],[12,"files","","Total number of file serial numbers",12,null],[12,"ffree","","Total number of free file serial numbers",12,null],[12,"namemax","","Maximum filename length",12,null],[4,"FsError","","",null,null],[13,"NotSupported","","",13,null],[13,"NotFile","","",13,null],[13,"IsDir","","",13,null],[13,"NotDir","","",13,null],[13,"EntryNotFound","","",13,null],[13,"EntryExist","","",13,null],[13,"NotSameFs","","",13,null],[13,"InvalidParam","","",13,null],[13,"NoDeviceSpace","","",13,null],[13,"DirRemoved","","",13,null],[13,"DirNotEmpty","","",13,null],[13,"WrongFs","","",13,null],[13,"DeviceError","","",13,null],[13,"IOCTLError","","",13,null],[13,"NoDevice","","",13,null],[13,"Again","","",13,null],[13,"SymLoop","","",13,null],[13,"Busy","","",13,null],[13,"Interrupted","","",13,null],[6,"Result","","",null,null],[8,"FileSystem","","Abstract file system",null,null],[10,"sync","","Sync all data to the storage",14,[[],[["result",4],["fserror",4]]]],[10,"root_inode","","Get the root INode of the file system",14,[[],[["inode",8],["arc",3]]]],[10,"info","","Get the file system information",14,[[],["fsinfo",3]]],[5,"make_rdev","","",null,[[["usize",15]],["usize",15]]],[8,"FileLike","linux_object::fs","Generic file interface",null,null],[10,"read","","read to buffer",15,[[],[["box",3],["pin",3]]]],[10,"write","","write from buffer",15,[[],[["usize",15],["lxresult",6]]]],[10,"read_at","","read to buffer at given offset",15,[[["u64",15]],[["box",3],["pin",3]]]],[10,"write_at","","write from buffer at given offset",15,[[["u64",15]],[["usize",15],["lxresult",6]]]],[10,"poll","","wait for some event on a file descriptor",15,[[],[["lxresult",6],["pollstatus",3]]]],[10,"async_poll","","wait for some event on a file descriptor use async",15,[[],[["pin",3],["box",3]]]],[10,"ioctl","","manipulates the underlying device parameters of special …",15,[[["usize",15]],[["usize",15],["lxresult",6]]]],[10,"fcntl","","manipulate file descriptor",15,[[["usize",15]],[["usize",15],["lxresult",6]]]],[11,"is","","Returns true if the trait object wraps an object of type …",15,[[],["bool",15]]],[11,"downcast","","Returns a boxed object from a boxed trait object if the …",15,[[["box",3]],[["box",3],["result",4],["box",3]]]],[11,"downcast_rc","","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …",15,[[["rc",3]],[["result",4],["rc",3],["rc",3]]]],[11,"downcast_ref","","Returns a reference to the object within the trait object …",15,[[],["option",4]]],[11,"downcast_mut","","Returns a mutable reference to the object within the …",15,[[],["option",4]]],[11,"downcast_arc","","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …",15,[[["arc",3]],[["result",4],["arc",3],["arc",3]]]],[3,"FileDesc","","file descriptor wrapper",null,null],[18,"CWD","","Pathname is interpreted relative to the current working …",16,null],[5,"create_root_fs","","create root filesystem, mount DevFS and RamFS",null,[[["filesystem",8],["arc",3]],[["inode",8],["arc",3]]]],[8,"INodeExt","","extension for INode",null,null],[10,"read_as_vec","","similar to read, but return a u8 vector",17,[[],[["result",6],["vec",3]]]],[5,"split_path","","Split a <code>path</code> str to <code>(base_path, file_name)</code>",null,[[["str",15]]]],[0,"ipc","linux_object","Linux Inter-Process Communication",null,null],[3,"SemidDs","linux_object::ipc","semid data structure",null,null],[12,"perm","","Ownership and permissions",18,null],[12,"otime","","Last semop time",18,null],[12,"ctime","","Last change time",18,null],[12,"nsems","","number of semaphores in set",18,null],[3,"SemArray","","A System V semaphore set",null,null],[12,"semid_ds","","semid data structure",19,null],[3,"ShmidDs","","shmid data structure",null,null],[12,"perm","","Ownership and permissions",20,null],[12,"segsz","","Size of segment (bytes)",20,null],[12,"atime","","Last attach time",20,null],[12,"dtime","","Last detach time",20,null],[12,"ctime","","Last change time",20,null],[12,"cpid","","PID of creator",20,null],[12,"lpid","","PID of last shmat(2)/shmdt(2)",20,null],[12,"nattch","","number of current attaches",20,null],[3,"ShmIdentifier","","shared memory Identifier for process",null,null],[12,"addr","","Shared memory address",21,null],[12,"guard","","Shared memory buffer and data",21,null],[3,"ShmGuard","","shared memory buffer and data",null,null],[12,"shared_guard","","shared memory buffer",22,null],[12,"shmid_ds","","shared memory data",22,null],[3,"SemProc","","Semaphore table in a process",null,null],[3,"ShmProc","","Shared_memory table in a process",null,null],[3,"IpcPerm","","structure specifies the access permissions on the …",null,null],[12,"key","","Key supplied to semget(2)",23,null],[12,"uid","","Effective UID of owner",23,null],[12,"gid","","Effective GID of owner",23,null],[12,"cuid","","Effective UID of creator",23,null],[12,"cgid","","Effective GID of creator",23,null],[12,"mode","","Permissions",23,null],[12,"__seq","","Sequence number",23,null],[12,"__pad1","","pad1",23,null],[12,"__pad2","","pad2",23,null],[11,"add","","Insert the <code>array</code> and return its ID",24,[[["arc",3],["semarray",3]],["usize",15]]],[11,"remove","","Remove an <code>array</code> by ID",24,[[["usize",15]]]],[11,"get","","Get an semaphore set by <code>id</code>",24,[[["usize",15]],[["arc",3],["option",4]]]],[11,"add_undo","","Add an undo operation",24,[[["usize",15],["i16",15],["u16",15]]]],[11,"add","","Insert the <code>SharedGuard</code> and return its ID",25,[[["mutex",3],["arc",3]],["usize",15]]],[11,"get","","Get an semaphore set by <code>id</code>",25,[[["usize",15]],[["option",4],["shmidentifier",3]]]],[11,"set","","Used to set Virtual Addr",25,[[["usize",15],["shmidentifier",3]]]],[11,"get_id","","get id from virtaddr",25,[[["usize",15]],[["usize",15],["option",4]]]],[11,"pop","","Pop Shared Area",25,[[["usize",15]]]],[0,"loader","linux_object","Linux ELF Program Loader",null,null],[3,"LinuxElfLoader","linux_object::loader","Linux ELF Program Loader.",null,null],[12,"syscall_entry","","syscall entry",26,null],[12,"stack_pages","","stack page number",26,null],[12,"root_inode","","root inode of LinuxElfLoader",26,null],[11,"load","","load a Linux ElfFile and return a tuple of (entry,sp)",26,[[["vec",3],["arc",3],["string",3]],["lxresult",6]]],[0,"process","linux_object","Linux Process",null,null],[8,"ProcessExt","linux_object::process","Process extension for linux",null,null],[10,"create_linux","","create Linux process",27,[[["arc",3],["filesystem",8],["arc",3]],[["arc",3],["zxresult",6]]]],[10,"linux","","get linux process",27,[[],["linuxprocess",3]]],[10,"fork_from","","fork from current linux process",27,[[["arc",3],["bool",15]],[["arc",3],["zxresult",6]]]],[5,"wait_child","","Wait for state changes in a child of the calling process, …",null,[[["koid",6],["arc",3],["bool",15]]]],[5,"wait_child_any","","Wait for state changes in a child of the calling process.",null,[[["bool",15],["arc",3]]]],[3,"LinuxProcess","","Linux specific process information.",null,null],[3,"RLimit","","resource limit",null,null],[12,"cur","","soft limit",28,null],[12,"max","","hard limit",28,null],[6,"ExitCode","","The type of process exit code.",null,null],[11,"new","","Create a new process.",29,[[["filesystem",8],["arc",3]]]],[11,"get_futex","","Get futex object.",29,[[["virtaddr",6]],[["arc",3],["futex",3]]]],[11,"add_file","","Add a file to the file descriptor table.",29,[[["arc",3],["filelike",8]],[["filedesc",3],["lxresult",6]]]],[11,"add_file_at","","Add a file to the file descriptor table at given <code>fd</code>.",29,[[["filedesc",3],["arc",3],["filelike",8]],[["filedesc",3],["lxresult",6]]]],[11,"file_limit","","get and set file limit number",29,[[["option",4],["rlimit",3]],["rlimit",3]]],[11,"get_file","","Get the <code>File</code> with given <code>fd</code>.",29,[[["filedesc",3]],[["lxresult",6],["arc",3]]]],[11,"get_file_like","","Get the <code>FileLike</code> with given <code>fd</code>.",29,[[["filedesc",3]],[["arc",3],["lxresult",6]]]],[11,"get_files","","get all files",29,[[],[["hashmap",3],["lxresult",6]]]],[11,"close_file","","Close file descriptor <code>fd</code>.",29,[[["filedesc",3]],["lxresult",6]]],[11,"root_inode","","Get root INode of the process.",29,[[],["arc",3]]],[11,"parent","","Get parent process.",29,[[],[["option",4],["arc",3]]]],[11,"current_working_directory","","Get current working directory.",29,[[],["string",3]]],[11,"change_directory","","Change working directory.",29,[[["str",15]]]],[11,"execute_path","","Get execute path.",29,[[],["string",3]]],[11,"set_execute_path","","Set execute path.",29,[[["str",15]]]],[11,"signal_action","","Get signal action.",29,[[["linuxsignal",4]],["signalaction",3]]],[11,"set_signal_action","","Set signal action.",29,[[["signalaction",3],["linuxsignal",4]]]],[11,"remove_cloexec_files","","Close file that FD_CLOEXEC is set",29,[[]]],[11,"semaphores_add","","Insert a <code>SemArray</code> and return its ID",29,[[["arc",3],["semarray",3]],["usize",15]]],[11,"semaphores_get","","Get an semaphore set by <code>id</code>",29,[[["usize",15]],[["arc",3],["option",4]]]],[11,"semaphores_add_undo","","Add an undo operation",29,[[["usize",15],["i16",15],["u16",15]]]],[11,"semaphores_remove","","Remove an <code>SemArray</code> by ID",29,[[["usize",15]]]],[11,"shm_get_id","","get ShmId from Virtual Addr",29,[[["usize",15]],[["usize",15],["option",4]]]],[11,"shm_get","","get the ShmIdentifier from shm_identifiers",29,[[["usize",15]],[["option",4],["shmidentifier",3]]]],[11,"shm_pop","","Delete the ShmIdentifier from shm_identifiers",29,[[["usize",15]]]],[11,"shm_add","","Insert the <code>SharedGuard</code> and return its ID",29,[[["mutex",3],["arc",3]],["usize",15]]],[11,"shm_set","","Set Virtual Addr for shared memory",29,[[["usize",15],["shmidentifier",3]]]],[0,"signal","linux_object","Linux signals",null,null],[17,"SIG_ERR","linux_object::signal","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[3,"Sigset","","Linux struct sigset_t",null,null],[3,"SignalAction","","Linux struct sigaction",null,null],[12,"handler","","",30,null],[12,"flags","","",30,null],[12,"restorer","","",30,null],[12,"mask","","",30,null],[19,"SiginfoFields","","",null,null],[3,"SigInfo","","",null,null],[12,"signo","","",31,null],[12,"errno","","",31,null],[12,"code","","",31,null],[12,"field","","",31,null],[4,"SignalCode","","A code identifying the cause of the signal.",null,null],[13,"ASYNCNL","","",32,null],[13,"TKILL","","",32,null],[13,"SIGIO","","",32,null],[13,"ASYNCIO","","",32,null],[13,"MESGQ","","",32,null],[13,"TIMER","","",32,null],[13,"QUEUE","","",32,null],[13,"USER","","from user",32,null],[13,"KERNEL","","from kernel",32,null],[3,"SignalActionFlags","","",null,null],[3,"MachineContext","","struct mcontext",null,null],[12,"r8","","",33,null],[12,"r9","","",33,null],[12,"r10","","",33,null],[12,"r11","","",33,null],[12,"r12","","",33,null],[12,"r13","","",33,null],[12,"r14","","",33,null],[12,"r15","","",33,null],[12,"rdi","","",33,null],[12,"rsi","","",33,null],[12,"rbp","","",33,null],[12,"rbx","","",33,null],[12,"rdx","","",33,null],[12,"rax","","",33,null],[12,"rcx","","",33,null],[12,"rsp","","",33,null],[12,"rip","","",33,null],[12,"eflags","","",33,null],[12,"cs","","",33,null],[12,"gs","","",33,null],[12,"fs","","",33,null],[12,"_pad","","",33,null],[12,"err","","",33,null],[12,"trapno","","",33,null],[12,"oldmask","","",33,null],[12,"cr2","","",33,null],[12,"fpstate","","",33,null],[12,"_reserved1","","",33,null],[4,"Signal","","",null,null],[13,"SIGHUP","","",34,null],[13,"SIGINT","","",34,null],[13,"SIGQUIT","","",34,null],[13,"SIGILL","","",34,null],[13,"SIGTRAP","","",34,null],[13,"SIGABRT","","",34,null],[13,"SIGBUS","","",34,null],[13,"SIGFPE","","",34,null],[13,"SIGKILL","","",34,null],[13,"SIGUSR1","","",34,null],[13,"SIGSEGV","","",34,null],[13,"SIGUSR2","","",34,null],[13,"SIGPIPE","","",34,null],[13,"SIGALRM","","",34,null],[13,"SIGTERM","","",34,null],[13,"SIGSTKFLT","","",34,null],[13,"SIGCHLD","","",34,null],[13,"SIGCONT","","",34,null],[13,"SIGSTOP","","",34,null],[13,"SIGTSTP","","",34,null],[13,"SIGTTIN","","",34,null],[13,"SIGTTOU","","",34,null],[13,"SIGURG","","",34,null],[13,"SIGXCPU","","",34,null],[13,"SIGXFSZ","","",34,null],[13,"SIGVTALRM","","",34,null],[13,"SIGPROF","","",34,null],[13,"SIGWINCH","","",34,null],[13,"SIGIO","","",34,null],[13,"SIGPWR","","",34,null],[13,"SIGSYS","","",34,null],[13,"SIGRT32","","",34,null],[13,"SIGRT33","","",34,null],[13,"SIGRT34","","",34,null],[13,"SIGRT35","","",34,null],[13,"SIGRT36","","",34,null],[13,"SIGRT37","","",34,null],[13,"SIGRT38","","",34,null],[13,"SIGRT39","","",34,null],[13,"SIGRT40","","",34,null],[13,"SIGRT41","","",34,null],[13,"SIGRT42","","",34,null],[13,"SIGRT43","","",34,null],[13,"SIGRT44","","",34,null],[13,"SIGRT45","","",34,null],[13,"SIGRT46","","",34,null],[13,"SIGRT47","","",34,null],[13,"SIGRT48","","",34,null],[13,"SIGRT49","","",34,null],[13,"SIGRT50","","",34,null],[13,"SIGRT51","","",34,null],[13,"SIGRT52","","",34,null],[13,"SIGRT53","","",34,null],[13,"SIGRT54","","",34,null],[13,"SIGRT55","","",34,null],[13,"SIGRT56","","",34,null],[13,"SIGRT57","","",34,null],[13,"SIGRT58","","",34,null],[13,"SIGRT59","","",34,null],[13,"SIGRT60","","",34,null],[13,"SIGRT61","","",34,null],[13,"SIGRT62","","",34,null],[13,"SIGRT63","","",34,null],[13,"SIGRT64","","",34,null],[18,"RTMIN","","",34,null],[18,"RTMAX","","",34,null],[11,"is_standard","","",34,[[],["bool",15]]],[3,"SignalUserContext","","See musl struct __ucontext",null,null],[12,"flags","","",35,null],[12,"link","","",35,null],[12,"stack","","",35,null],[12,"context","","",35,null],[12,"sig_mask","","",35,null],[3,"SignalFrame","","",null,null],[12,"ret_code_addr","","point to ret_code",36,null],[12,"info","","Signal Frame info",36,null],[12,"ucontext","","adapt interface, a little bit waste",36,null],[12,"ret_code","","call sys_sigreturn",36,null],[3,"SignalStackFlags","","",null,null],[18,"ONSTACK","","",37,null],[18,"DISABLE","","",37,null],[18,"AUTODISARM","","",37,null],[11,"empty","","Returns an empty set of flags",37,[[],["signalstackflags",3]]],[11,"all","","Returns the set containing all flags.",37,[[],["signalstackflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",37,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",37,[[["u32",15]],[["option",4],["signalstackflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",37,[[["u32",15]],["signalstackflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",37,[[["u32",15]],["signalstackflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",37,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",37,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",37,[[["signalstackflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",37,[[["signalstackflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",37,[[["signalstackflags",3]]]],[11,"remove","","Removes the specified flags in-place.",37,[[["signalstackflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",37,[[["signalstackflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",37,[[["bool",15],["signalstackflags",3]]]],[3,"SignalStack","","Linux struct stack_t",null,null],[12,"sp","","",38,null],[12,"flags","","",38,null],[12,"size","","",38,null],[0,"sync","linux_object","Useful synchronization primitives.",null,null],[3,"Event","linux_object::sync","event bus Event flags",null,null],[6,"EventHandler","","handler of event in the event bus",null,null],[3,"EventBus","","event bus struct",null,null],[5,"wait_for_event","","wait for a event async",null,[[["mutex",3],["arc",3],["event",3]]]],[3,"Semaphore","","A counting, blocking, semaphore.",null,null],[3,"SemaphoreGuard","","An RAII guard which will release a resource acquired from …",null,null],[0,"thread","linux_object","Linux Thread",null,null],[8,"ThreadExt","linux_object::thread","Thread extension for linux",null,null],[10,"create_linux","","create linux thread",39,[[["arc",3]],[["arc",3],["zxresult",6]]]],[10,"lock_linux","","lock and get Linux thread",39,[[],[["mutexguard",3],["linuxthread",3]]]],[10,"set_tid_address","","Set pointer to thread ID.",39,[[["useroutptr",6],["i32",15]]]],[8,"CurrentThreadExt","","CurrentThread extension for linux",null,null],[10,"exit_linux","","exit linux thread",40,[[["i32",15]]]],[3,"LinuxThread","","Linux specific thread information.",null,null],[12,"signal_mask","","Signal mask",41,null],[12,"signal_alternate_stack","","signal alternate stack",41,null],[0,"time","linux_object","Linux time objects",null,null],[3,"TimeSpec","linux_object::time","TimeSpec struct for clock_gettime, similar to Timespec",null,null],[12,"sec","","seconds",42,null],[12,"nsec","","nano seconds",42,null],[3,"TimeVal","","TimeVal struct for gettimeofday",null,null],[12,"sec","","seconds",43,null],[12,"usec","","microsecond",43,null],[11,"now","","create TimeVal",43,[[],["timeval",3]]],[11,"to_msec","","to msec",43,[[],["usize",15]]],[11,"now","","create TimeSpec",42,[[],["timespec",3]]],[11,"update","","update TimeSpec for a file inode TODO: more precise; …",42,[[["arc",3]]]],[11,"to_msec","","to msec",42,[[],["usize",15]]],[3,"RUsage","","RUsage for sys_getrusage() ignore other fields for now",null,null],[12,"utime","","user CPU time used",44,null],[12,"stime","","system CPU time used",44,null],[3,"Tms","","Tms for times()",null,null],[12,"tms_utime","","user time",45,null],[12,"tms_stime","","system time",45,null],[12,"tms_cutime","","user time of children",45,null],[12,"tms_cstime","","system time of children",45,null],[11,"borrow","linux_object::error","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_string","","",0,[[],["string",3]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",0,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",0,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"borrow","linux_object::fs","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"into_any_arc","","",46,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",46,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",46,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",46,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",46,[[],["any",8]]],[11,"as_any_mut","","",46,[[],["any",8]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"into_any_arc","","",47,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",47,[[],[["zxerror",4],["result",4]]]],[11,"get_hash","","",47,[[],["u64",15]]],[11,"into_any","","",47,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",47,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",47,[[],["any",8]]],[11,"as_any_mut","","",47,[[],["any",8]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"into_any_arc","","",48,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",48,[[],[["zxerror",4],["result",4]]]],[11,"get_hash","","",48,[[],["u64",15]]],[11,"into_any","","",48,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",48,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",48,[[],["any",8]]],[11,"as_any_mut","","",48,[[],["any",8]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_any_arc","","",1,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",1,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",1,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_any_arc","","",2,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",2,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",2,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_any_arc","","",3,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",3,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",3,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"into_any_arc","","",4,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",4,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",4,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"into_result","","",49,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",49,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",49,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",49,[[],["any",8]]],[11,"as_any_mut","","",49,[[],["any",8]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"into_any_arc","","",50,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",50,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",50,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",50,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",50,[[],["any",8]]],[11,"as_any_mut","","",50,[[],["any",8]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"into_any_arc","","",51,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",51,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",51,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",51,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",51,[[],["any",8]]],[11,"as_any_mut","","",51,[[],["any",8]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"into_any_arc","","",52,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",52,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",52,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",52,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",52,[[],["any",8]]],[11,"as_any_mut","","",52,[[],["any",8]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"into_any_arc","","",53,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",53,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",53,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",53,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",53,[[],["any",8]]],[11,"as_any_mut","","",53,[[],["any",8]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"into_any_arc","","",54,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",54,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",54,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",54,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",54,[[],["any",8]]],[11,"as_any_mut","","",54,[[],["any",8]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"into_any_arc","","",55,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",55,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",55,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",55,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",55,[[],["any",8]]],[11,"as_any_mut","","",55,[[],["any",8]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"into_any_arc","","",56,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",56,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",56,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",56,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",56,[[],["any",8]]],[11,"as_any_mut","","",56,[[],["any",8]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"into_any_arc","","",57,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",57,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",57,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",57,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",57,[[],["any",8]]],[11,"as_any_mut","","",57,[[],["any",8]]],[11,"borrow","linux_object::fs::vfs","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_any_arc","","",6,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",6,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",6,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_any_arc","","",7,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",7,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",7,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_any_arc","","",8,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",8,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",8,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"into_any_arc","","",9,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",9,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",9,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"into_any_arc","","",10,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",10,[[],[["zxerror",4],["result",4]]]],[11,"get_hash","","",10,[[],["u64",15]]],[11,"into_any","","",10,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"into_any_arc","","",11,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",11,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",11,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",11,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_any_arc","","",12,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",12,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",12,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",12,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",12,[[],["any",8]]],[11,"as_any_mut","","",12,[[],["any",8]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"to_string","","",13,[[],["string",3]]],[11,"into_any_arc","","",13,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",13,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",13,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"borrow","linux_object::fs","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"into_any_arc","","",16,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",16,[[],[["zxerror",4],["result",4]]]],[11,"get_hash","","",16,[[],["u64",15]]],[11,"into_any","","",16,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",16,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",16,[[],["any",8]]],[11,"as_any_mut","","",16,[[],["any",8]]],[11,"borrow","linux_object::ipc","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"into_any_arc","","",18,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",18,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",18,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",18,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",18,[[],["any",8]]],[11,"as_any_mut","","",18,[[],["any",8]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_any_arc","","",19,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",19,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",19,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",19,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",19,[[],["any",8]]],[11,"as_any_mut","","",19,[[],["any",8]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"into_any_arc","","",20,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",20,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",20,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",20,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",20,[[],["any",8]]],[11,"as_any_mut","","",20,[[],["any",8]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"into_any_arc","","",21,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",21,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",21,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",21,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",21,[[],["any",8]]],[11,"as_any_mut","","",21,[[],["any",8]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"into_any_arc","","",22,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",22,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",22,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",22,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",22,[[],["any",8]]],[11,"as_any_mut","","",22,[[],["any",8]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"into_any_arc","","",24,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",24,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",24,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",24,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",24,[[],["any",8]]],[11,"as_any_mut","","",24,[[],["any",8]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"into_any_arc","","",25,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",25,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",25,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",25,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",25,[[],["any",8]]],[11,"as_any_mut","","",25,[[],["any",8]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"into_any_arc","","",23,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",23,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",23,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",23,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",23,[[],["any",8]]],[11,"as_any_mut","","",23,[[],["any",8]]],[11,"borrow","linux_object::loader","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"into_any_arc","","",26,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",26,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",26,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",26,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",26,[[],["any",8]]],[11,"as_any_mut","","",26,[[],["any",8]]],[11,"borrow","linux_object::process","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"into_any_arc","","",29,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",29,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",29,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",29,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",29,[[],["any",8]]],[11,"as_any_mut","","",29,[[],["any",8]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"into_any_arc","","",28,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",28,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",28,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",28,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",28,[[],["any",8]]],[11,"as_any_mut","","",28,[[],["any",8]]],[11,"borrow","linux_object::signal","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"into_any_arc","","",58,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",58,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",58,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",58,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",58,[[],["any",8]]],[11,"as_any_mut","","",58,[[],["any",8]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"into_any_arc","","",30,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",30,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",30,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",30,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",30,[[],["any",8]]],[11,"as_any_mut","","",30,[[],["any",8]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"into_any_arc","","",59,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",59,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",59,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",59,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",59,[[],["any",8]]],[11,"as_any_mut","","",59,[[],["any",8]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"into_any_arc","","",31,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",31,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",31,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",31,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",31,[[],["any",8]]],[11,"as_any_mut","","",31,[[],["any",8]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"into_any_arc","","",32,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",32,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",32,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",32,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",32,[[],["any",8]]],[11,"as_any_mut","","",32,[[],["any",8]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"into_any_arc","","",60,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",60,[[],[["zxerror",4],["result",4]]]],[11,"get_hash","","",60,[[],["u64",15]]],[11,"into_any","","",60,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",60,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",60,[[],["any",8]]],[11,"as_any_mut","","",60,[[],["any",8]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"into_any_arc","","",33,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",33,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",33,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",33,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",33,[[],["any",8]]],[11,"as_any_mut","","",33,[[],["any",8]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"into_any_arc","","",34,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",34,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",34,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",34,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",34,[[],["any",8]]],[11,"as_any_mut","","",34,[[],["any",8]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"into_any_arc","","",35,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",35,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",35,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",35,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",35,[[],["any",8]]],[11,"as_any_mut","","",35,[[],["any",8]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"into_any_arc","","",36,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",36,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",36,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",36,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",36,[[],["any",8]]],[11,"as_any_mut","","",36,[[],["any",8]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"into_any_arc","","",37,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",37,[[],[["zxerror",4],["result",4]]]],[11,"get_hash","","",37,[[],["u64",15]]],[11,"into_any","","",37,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",37,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",37,[[],["any",8]]],[11,"as_any_mut","","",37,[[],["any",8]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"into_any_arc","","",38,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",38,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",38,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",38,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",38,[[],["any",8]]],[11,"as_any_mut","","",38,[[],["any",8]]],[11,"borrow","linux_object::sync","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"into_any_arc","","",61,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",61,[[],[["zxerror",4],["result",4]]]],[11,"get_hash","","",61,[[],["u64",15]]],[11,"into_any","","",61,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",61,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",61,[[],["any",8]]],[11,"as_any_mut","","",61,[[],["any",8]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"into_result","","",62,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",62,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",62,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",62,[[],["any",8]]],[11,"as_any_mut","","",62,[[],["any",8]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"into_any_arc","","",63,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",63,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",63,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",63,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",63,[[],["any",8]]],[11,"as_any_mut","","",63,[[],["any",8]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"into_any_arc","","",64,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",64,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",64,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",64,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",64,[[],["any",8]]],[11,"as_any_mut","","",64,[[],["any",8]]],[11,"borrow","linux_object::thread","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"into_any_arc","","",41,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",41,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",41,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",41,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",41,[[],["any",8]]],[11,"as_any_mut","","",41,[[],["any",8]]],[11,"borrow","linux_object::time","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"into_any_arc","","",42,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",42,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",42,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",42,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",42,[[],["any",8]]],[11,"as_any_mut","","",42,[[],["any",8]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"into_any_arc","","",43,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",43,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",43,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",43,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",43,[[],["any",8]]],[11,"as_any_mut","","",43,[[],["any",8]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"into_any_arc","","",44,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",44,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",44,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",44,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",44,[[],["any",8]]],[11,"as_any_mut","","",44,[[],["any",8]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"into_any_arc","","",45,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",45,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",45,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",45,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",45,[[],["any",8]]],[11,"as_any_mut","","",45,[[],["any",8]]],[11,"fmt","linux_object::fs::vfs","",13,[[["formatter",3]],[["result",4],["error",3]]]],[11,"hash","","",10,[[]]],[11,"from","","",13,[[["deverror",3]],["fserror",4]]],[11,"from","","",9,[[["metadata",3]],["metadata",3]]],[11,"from","","",13,[[["error",3]],["fserror",4]]],[11,"partial_cmp","","",10,[[["timespec",3]],[["ordering",4],["option",4]]]],[11,"default","","",7,[[],["pollstatus",3]]],[11,"clone","","",10,[[],["timespec",3]]],[11,"clone","","",11,[[],["filetype",4]]],[11,"clone","","",9,[[],["metadata",3]]],[11,"fmt","","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",10,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",13,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",11,[[["formatter",3]],[["result",4],["error",3]]]],[11,"cmp","","",10,[[["timespec",3]],["ordering",4]]],[11,"eq","","",10,[[["timespec",3]],["bool",15]]],[11,"ne","","",10,[[["timespec",3]],["bool",15]]],[11,"eq","","",9,[[["metadata",3]],["bool",15]]],[11,"ne","","",9,[[["metadata",3]],["bool",15]]],[11,"eq","","",11,[[["filetype",4]],["bool",15]]],[11,"eq","","",13,[[["fserror",4]],["bool",15]]],[11,"from","","",11,[[["filetype",4]],["filetype",4]]],[11,"read_as_vec","","",5,[[],[["result",6],["vec",3]]]],[11,"read","linux_object::fs","",1,[[],[["box",3],["pin",3]]]],[11,"write","","",1,[[],[["usize",15],["lxresult",6]]]],[11,"read_at","","",1,[[["u64",15]],[["box",3],["pin",3]]]],[11,"write_at","","",1,[[["u64",15]],[["usize",15],["lxresult",6]]]],[11,"poll","","",1,[[],[["lxresult",6],["pollstatus",3]]]],[11,"async_poll","","",1,[[],[["pin",3],["box",3]]]],[11,"ioctl","","",1,[[["usize",15]],[["usize",15],["lxresult",6]]]],[11,"fcntl","","",1,[[["usize",15]],[["usize",15],["lxresult",6]]]],[11,"deref","","",54,[[],["arc",3]]],[11,"deref","","",55,[[],["arc",3]]],[11,"deref","linux_object::sync","",64,[[]]],[11,"fmt","linux_object::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::fs","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::ipc","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::process","",28,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::signal","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::sync","",61,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::time","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::error","",0,[[["formatter",3]],["result",6]]],[11,"sub","linux_object::fs","Returns the set difference of the two sets of flags.",47,[[["fcntlflags",3]],["fcntlflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",48,[[["fileflags",3]],["fileflags",3]]],[11,"sub","linux_object::signal","Returns the set difference of the two sets of flags.",60,[[["signalactionflags",3]],["signalactionflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",37,[[["signalstackflags",3]],["signalstackflags",3]]],[11,"sub","linux_object::sync","Returns the set difference of the two sets of flags.",61,[[["event",3]],["event",3]]],[11,"eq","linux_object::fs","",47,[[["fcntlflags",3]],["bool",15]]],[11,"ne","","",47,[[["fcntlflags",3]],["bool",15]]],[11,"eq","","",48,[[["fileflags",3]],["bool",15]]],[11,"ne","","",48,[[["fileflags",3]],["bool",15]]],[11,"eq","","",4,[[["pipeend",4]],["bool",15]]],[11,"eq","","",16,[[["filedesc",3]],["bool",15]]],[11,"ne","","",16,[[["filedesc",3]],["bool",15]]],[11,"eq","linux_object::signal","",60,[[["signalactionflags",3]],["bool",15]]],[11,"ne","","",60,[[["signalactionflags",3]],["bool",15]]],[11,"eq","","",34,[[["signal",4]],["bool",15]]],[11,"eq","","",37,[[["signalstackflags",3]],["bool",15]]],[11,"ne","","",37,[[["signalstackflags",3]],["bool",15]]],[11,"eq","linux_object::sync","",61,[[["event",3]],["bool",15]]],[11,"ne","","",61,[[["event",3]],["bool",15]]],[11,"cmp","linux_object::fs","",47,[[["fcntlflags",3]],["ordering",4]]],[11,"cmp","","",48,[[["fileflags",3]],["ordering",4]]],[11,"cmp","","",16,[[["filedesc",3]],["ordering",4]]],[11,"cmp","linux_object::signal","",60,[[["signalactionflags",3]],["ordering",4]]],[11,"cmp","","",37,[[["signalstackflags",3]],["ordering",4]]],[11,"cmp","linux_object::sync","",61,[[["event",3]],["ordering",4]]],[11,"partial_cmp","linux_object::fs","",47,[[["fcntlflags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",48,[[["fileflags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",16,[[["filedesc",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","linux_object::signal","",60,[[["signalactionflags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",37,[[["signalstackflags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","linux_object::sync","",61,[[["event",3]],[["ordering",4],["option",4]]]],[11,"sub_assign","linux_object::fs","Disables all flags enabled in the set.",47,[[["fcntlflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",48,[[["fileflags",3]]]],[11,"sub_assign","linux_object::signal","Disables all flags enabled in the set.",60,[[["signalactionflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",37,[[["signalstackflags",3]]]],[11,"sub_assign","linux_object::sync","Disables all flags enabled in the set.",61,[[["event",3]]]],[11,"not","linux_object::fs","Returns the complement of this set of flags.",47,[[],["fcntlflags",3]]],[11,"not","","Returns the complement of this set of flags.",48,[[],["fileflags",3]]],[11,"not","linux_object::signal","Returns the complement of this set of flags.",60,[[],["signalactionflags",3]]],[11,"not","","Returns the complement of this set of flags.",37,[[],["signalstackflags",3]]],[11,"not","linux_object::sync","Returns the complement of this set of flags.",61,[[],["event",3]]],[11,"bitand","linux_object::fs","Returns the intersection between the two sets of flags.",47,[[["fcntlflags",3]],["fcntlflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",48,[[["fileflags",3]],["fileflags",3]]],[11,"bitand","linux_object::signal","Returns the intersection between the two sets of flags.",60,[[["signalactionflags",3]],["signalactionflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",37,[[["signalstackflags",3]],["signalstackflags",3]]],[11,"bitand","linux_object::sync","Returns the intersection between the two sets of flags.",61,[[["event",3]],["event",3]]],[11,"bitor","linux_object::fs","Returns the union of the two sets of flags.",47,[[["fcntlflags",3]],["fcntlflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",48,[[["fileflags",3]],["fileflags",3]]],[11,"bitor","linux_object::signal","Returns the union of the two sets of flags.",60,[[["signalactionflags",3]],["signalactionflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",37,[[["signalstackflags",3]],["signalstackflags",3]]],[11,"bitor","linux_object::sync","Returns the union of the two sets of flags.",61,[[["event",3]],["event",3]]],[11,"bitxor","linux_object::fs","Returns the left flags, but with all the right flags …",47,[[["fcntlflags",3]],["fcntlflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",48,[[["fileflags",3]],["fileflags",3]]],[11,"bitxor","linux_object::signal","Returns the left flags, but with all the right flags …",60,[[["signalactionflags",3]],["signalactionflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",37,[[["signalstackflags",3]],["signalstackflags",3]]],[11,"bitxor","linux_object::sync","Returns the left flags, but with all the right flags …",61,[[["event",3]],["event",3]]],[11,"bitand_assign","linux_object::fs","Disables all flags disabled in the set.",47,[[["fcntlflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",48,[[["fileflags",3]]]],[11,"bitand_assign","linux_object::signal","Disables all flags disabled in the set.",60,[[["signalactionflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",37,[[["signalstackflags",3]]]],[11,"bitand_assign","linux_object::sync","Disables all flags disabled in the set.",61,[[["event",3]]]],[11,"bitor_assign","linux_object::fs","Adds the set of flags.",47,[[["fcntlflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",48,[[["fileflags",3]]]],[11,"bitor_assign","linux_object::signal","Adds the set of flags.",60,[[["signalactionflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",37,[[["signalstackflags",3]]]],[11,"bitor_assign","linux_object::sync","Adds the set of flags.",61,[[["event",3]]]],[11,"bitxor_assign","linux_object::fs","Toggles the set of flags.",47,[[["fcntlflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",48,[[["fileflags",3]]]],[11,"bitxor_assign","linux_object::signal","Toggles the set of flags.",60,[[["signalactionflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",37,[[["signalstackflags",3]]]],[11,"bitxor_assign","linux_object::sync","Toggles the set of flags.",61,[[["event",3]]]],[11,"drop","linux_object::fs","",50,[[]]],[11,"drop","linux_object::ipc","",24,[[]]],[11,"drop","linux_object::sync","",64,[[]]],[11,"index","linux_object::ipc","",19,[[["usize",15]],["semaphore",3]]],[11,"hash","linux_object::fs","",47,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",16,[[]]],[11,"hash","linux_object::signal","",60,[[]]],[11,"hash","","",37,[[]]],[11,"hash","linux_object::sync","",61,[[]]],[11,"try_from","linux_object::fs","",16,[[["str",15]],["lxresult",6]]],[11,"try_from","linux_object::signal","",34,[[["u8",15]],[["result",4],["u8",15]]]],[11,"from_iter","linux_object::fs","",47,[[["intoiterator",8]],["fcntlflags",3]]],[11,"from_iter","","",48,[[["intoiterator",8]],["fileflags",3]]],[11,"from_iter","linux_object::signal","",60,[[["intoiterator",8]],["signalactionflags",3]]],[11,"from_iter","","",37,[[["intoiterator",8]],["signalstackflags",3]]],[11,"from_iter","linux_object::sync","",61,[[["intoiterator",8]],["event",3]]],[11,"from","linux_object::error","",0,[[["zxerror",4]]]],[11,"from","","",0,[[["fserror",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","linux_object::fs","",16,[[["usize",15]]]],[11,"from","","",16,[[["i32",15]]]],[11,"from","linux_object::fs::vfs","",10,[[["timespec",3]]]],[11,"from","linux_object::time","",43,[[["timespec",3]]]],[11,"fmt","linux_object::fs","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::signal","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::sync","",61,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::fs","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::signal","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::sync","",61,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::fs","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::signal","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::sync","",61,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::fs","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::signal","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::sync","",61,[[["formatter",3]],["result",6]]],[11,"extend","linux_object::fs","",47,[[["intoiterator",8]]]],[11,"extend","","",48,[[["intoiterator",8]]]],[11,"extend","linux_object::signal","",60,[[["intoiterator",8]]]],[11,"extend","","",37,[[["intoiterator",8]]]],[11,"extend","linux_object::sync","",61,[[["intoiterator",8]]]],[11,"clone","linux_object::fs","",47,[[],["fcntlflags",3]]],[11,"clone","","",48,[[],["fileflags",3]]],[11,"clone","","",4,[[],["pipeend",4]]],[11,"clone","","",50,[[],["pipe",3]]],[11,"clone","","",53,[[],["randominode",3]]],[11,"clone","","",16,[[],["filedesc",3]]],[11,"clone","linux_object::ipc","",18,[[],["semidds",3]]],[11,"clone","","",20,[[],["shmidds",3]]],[11,"clone","","",21,[[],["shmidentifier",3]]],[11,"clone","","",25,[[],["shmproc",3]]],[11,"clone","","",23,[[],["ipcperm",3]]],[11,"clone","","",24,[[]]],[11,"clone","linux_object::process","",28,[[],["rlimit",3]]],[11,"clone","linux_object::signal","",58,[[],["sigset",3]]],[11,"clone","","",30,[[],["signalaction",3]]],[11,"clone","","",59,[[],["siginfofields",19]]],[11,"clone","","",31,[[],["siginfo",3]]],[11,"clone","","",32,[[],["signalcode",4]]],[11,"clone","","",60,[[],["signalactionflags",3]]],[11,"clone","","",33,[[],["machinecontext",3]]],[11,"clone","","",34,[[],["signal",4]]],[11,"clone","","",35,[[],["signalusercontext",3]]],[11,"clone","","",36,[[],["signalframe",3]]],[11,"clone","","",37,[[],["signalstackflags",3]]],[11,"clone","","",38,[[],["signalstack",3]]],[11,"clone","linux_object::sync","",61,[[],["event",3]]],[11,"clone","linux_object::time","",42,[[],["timespec",3]]],[11,"clone","","",43,[[],["timeval",3]]],[11,"clone","","",45,[[],["tms",3]]],[11,"default","linux_object::fs","",56,[[],["stdin",3]]],[11,"default","","",57,[[],["stdout",3]]],[11,"default","linux_object::ipc","",24,[[],["semproc",3]]],[11,"default","","",25,[[],["shmproc",3]]],[11,"default","linux_object::process","",28,[[]]],[11,"default","linux_object::signal","",58,[[],["sigset",3]]],[11,"default","","",30,[[],["signalaction",3]]],[11,"default","","",59,[[]]],[11,"default","","",60,[[],["signalactionflags",3]]],[11,"default","","",38,[[]]],[11,"default","linux_object::sync","",61,[[],["event",3]]],[11,"default","","",62,[[],["eventbus",3]]],[11,"default","linux_object::time","",42,[[],["timespec",3]]],[11,"default","","",43,[[],["timeval",3]]],[11,"read_at","linux_object::fs","",46,[[["usize",15]],[["usize",15],["result",6]]]],[11,"write_at","","",46,[[["usize",15]],[["usize",15],["result",6]]]],[11,"sync","","",46,[[],["result",6]]],[11,"read_at","","read from pipe",50,[[["usize",15]],[["usize",15],["result",6]]]],[11,"write_at","","write to pipe",50,[[["usize",15]],[["usize",15],["result",6]]]],[11,"poll","","monitoring events and determine whether the pipe is …",50,[[],[["pollstatus",3],["result",6]]]],[11,"async_poll","","",50,[[],[["box",3],["pin",3]]]],[11,"as_any_ref","","return the any ref",50,[[],["any",8]]],[11,"read_at","","",51,[[["usize",15]],[["usize",15],["result",6]]]],[11,"write_at","","",51,[[["usize",15]],[["usize",15],["result",6]]]],[11,"poll","","",51,[[],[["pollstatus",3],["result",6]]]],[11,"metadata","","",51,[[],[["metadata",3],["result",6]]]],[11,"as_any_ref","","",51,[[],["any",8]]],[11,"read_at","","",53,[[["usize",15]],[["usize",15],["result",6]]]],[11,"write_at","","",53,[[["usize",15]],[["usize",15],["result",6]]]],[11,"poll","","",53,[[],[["pollstatus",3],["result",6]]]],[11,"metadata","","",53,[[],[["metadata",3],["result",6]]]],[11,"as_any_ref","","",53,[[],["any",8]]],[11,"read_at","","",56,[[["usize",15]],[["usize",15],["result",6]]]],[11,"write_at","","",56,[[["usize",15]],[["usize",15],["result",6]]]],[11,"poll","","",56,[[],[["pollstatus",3],["result",6]]]],[11,"async_poll","","",56,[[],[["box",3],["pin",3]]]],[11,"as_any_ref","","",56,[[],["any",8]]],[11,"read_at","","",57,[[["usize",15]],[["usize",15],["result",6]]]],[11,"write_at","","",57,[[["usize",15]],[["usize",15],["result",6]]]],[11,"poll","","",57,[[],[["pollstatus",3],["result",6]]]],[11,"io_control","","",57,[[["u32",15],["usize",15]],[["usize",15],["result",6]]]],[11,"as_any_ref","","",57,[[],["any",8]]],[11,"id","","",1,[[],["koid",6]]],[11,"type_name","","",1,[[],["str",15]]],[11,"name","","",1,[[],["string",3]]],[11,"set_name","","",1,[[["str",15]]]],[11,"signal","","",1,[[],["signal",3]]],[11,"signal_set","","",1,[[["signal",3]]]],[11,"signal_clear","","",1,[[["signal",3]]]],[11,"signal_change","","",1,[[["signal",3]]]],[11,"add_signal_callback","","",1,[[["signalhandler",6]]]],[11,"initialize","","",54,[[]]],[11,"initialize","","",55,[[]]],[11,"new","","create a MemBuf struct",46,[[]]],[18,"F_DUPFD","","dup",47,null],[18,"F_GETFD","","get close_on_exec",47,null],[18,"F_SETFD","","set/clear close_on_exec",47,null],[18,"F_GETFL","","get file->f_flags",47,null],[18,"F_SETFL","","set file->f_flags",47,null],[18,"F_GETLK","","Get record locking info.",47,null],[18,"F_SETLK","","Set record locking info (non-blocking).",47,null],[18,"F_SETLKW","","Set record locking info (blocking).",47,null],[18,"FD_CLOEXEC","","closed during a successful execve",47,null],[18,"F_DUPFD_CLOEXEC","","like F_DUPFD, but additionally set the close-on-exec flag",47,null],[11,"empty","","Returns an empty set of flags",47,[[],["fcntlflags",3]]],[11,"all","","Returns the set containing all flags.",47,[[],["fcntlflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",47,[[],["usize",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",47,[[["usize",15]],[["fcntlflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",47,[[["usize",15]],["fcntlflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",47,[[["usize",15]],["fcntlflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",47,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",47,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",47,[[["fcntlflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",47,[[["fcntlflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",47,[[["fcntlflags",3]]]],[11,"remove","","Removes the specified flags in-place.",47,[[["fcntlflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",47,[[["fcntlflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",47,[[["bool",15],["fcntlflags",3]]]],[18,"O_NONBLOCK","","not blocking",48,null],[18,"O_APPEND","","move the flag bit to the end of the file before each write",48,null],[18,"O_CLOEXEC","","set close_on_exec",48,null],[11,"empty","","Returns an empty set of flags",48,[[],["fileflags",3]]],[11,"all","","Returns the set containing all flags.",48,[[],["fileflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",48,[[],["usize",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",48,[[["usize",15]],[["option",4],["fileflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",48,[[["usize",15]],["fileflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",48,[[["usize",15]],["fileflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",48,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",48,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",48,[[["fileflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",48,[[["fileflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",48,[[["fileflags",3]]]],[11,"remove","","Removes the specified flags in-place.",48,[[["fileflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",48,[[["fileflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",48,[[["bool",15],["fileflags",3]]]],[11,"new","","create a file struct",1,[[["inode",8],["openoptions",3],["arc",3],["string",3]],["arc",3]]],[11,"read","","read from file",1,[[]]],[11,"read_at","","read from file at given offset",1,[[["u64",15]]]],[11,"write","","write to file",1,[[],[["usize",15],["lxresult",6]]]],[11,"write_at","","write to file at given offset",1,[[["u64",15]],[["usize",15],["lxresult",6]]]],[11,"seek","","seek from given type and offset",1,[[["seekfrom",4]],[["lxresult",6],["u64",15]]]],[11,"set_len","","resize the file",1,[[["u64",15]],["lxresult",6]]],[11,"sync_all","","Sync all data and metadata",1,[[],["lxresult",6]]],[11,"sync_data","","Sync data (not include metadata)",1,[[],["lxresult",6]]],[11,"metadata","","get metadata of file",1,[[],[["metadata",3],["lxresult",6]]]],[11,"lookup_follow","","lookup the file following the link",1,[[["usize",15],["str",15]],[["lxresult",6],["arc",3]]]],[11,"read_entry","","get the name of dir entry",1,[[],[["string",3],["lxresult",6]]]],[11,"poll","","wait for some event on a file",1,[[],[["lxresult",6],["pollstatus",3]]]],[11,"async_poll","","wait for some event on a file using async",1,[[]]],[11,"io_control","","manipulates the underlying device parameters of special …",1,[[["u32",15],["usize",15]],[["usize",15],["lxresult",6]]]],[11,"inode","","get INode of this file",1,[[],[["inode",8],["arc",3]]]],[11,"fcntl","","manipulate file descriptor unimplemented",1,[[["usize",15]],[["usize",15],["lxresult",6]]]],[11,"create_pair","","Create a pair of INode: (read, write)",50,[[]]],[11,"new","","create a Pseudo INode",51,[[["filetype",4],["str",15]]]],[11,"new","","create a random INode",53,[[["bool",15]],["randominode",3]]],[11,"push","","push a char in Stdin buffer",56,[[["char",15]]]],[11,"pop","","pop a char in Stdin buffer",56,[[],["char",15]]],[11,"can_read","","specify whether the Stdin buffer is readable",56,[[],["bool",15]]],[11,"downcast_ref","linux_object::fs::vfs","Downcast the INode to specific struct",5,[[],["option",4]]],[11,"list","","Get all directory entries as a Vec",5,[[],[["result",4],["vec",3],["fserror",4]]]],[11,"lookup","","Lookup path from current INode, and do not follow symlinks",5,[[["str",15]],[["arc",3],["fserror",4],["result",4]]]],[11,"lookup_follow","","Lookup path from current INode, and follow symlinks at …",5,[[["usize",15],["str",15]],[["arc",3],["fserror",4],["result",4]]]],[11,"lookup_inode_at","linux_object::process","Lookup INode from the process.",29,[[["bool",15],["filedesc",3],["str",15]],[["lxresult",6],["arc",3]]]],[11,"lookup_inode","","Lookup INode from the process.",29,[[["str",15]],[["lxresult",6],["arc",3]]]],[11,"remove","linux_object::ipc","remove semaphores",19,[[]]],[11,"otime","","set last semop time",19,[[]]],[11,"ctime","","set last change time",19,[[]]],[11,"set","","for IPC_SET see man semctl(2)",19,[[["semidds",3]]]],[11,"get_or_create","","Get the semaphore array with <code>key</code>. If not exist, create a …",19,[[["u32",15],["usize",15]],[["arc",3],["result",4],["lxerror",4]]]],[11,"set_addr","","set the shared memory address on attach",21,[[["usize",15]]]],[11,"new_shared_guard","","Get or create a ShmGuard",21,[[["u32",15],["usize",15]],[["arc",3],["lxerror",4],["result",4]]]],[11,"attach","","set last attach time",22,[[["u32",15]]]],[11,"detach","","set last detach time",22,[[["u32",15]]]],[11,"ctime","","set last change time",22,[[]]],[11,"set","","for IPC_SET see man shmctl(2)",22,[[["shmidds",3]]]],[11,"remove","","remove Shared memory",22,[[]]],[11,"empty","linux_object::signal","",58,[[]]],[11,"contains","","",58,[[["signal",4]],["bool",15]]],[11,"insert","","",58,[[["signal",4]]]],[11,"insert_set","","",58,[[["sigset",3]]]],[11,"remove","","",58,[[["signal",4]]]],[11,"remove_set","","",58,[[["sigset",3]]]],[18,"NOCLDSTOP","","",60,null],[18,"NOCLDWAIT","","",60,null],[18,"SIGINFO","","",60,null],[18,"ONSTACK","","",60,null],[18,"RESTART","","",60,null],[18,"NODEFER","","",60,null],[18,"RESETHAND","","",60,null],[18,"RESTORER","","",60,null],[11,"empty","","Returns an empty set of flags",60,[[],["signalactionflags",3]]],[11,"all","","Returns the set containing all flags.",60,[[],["signalactionflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",60,[[],["usize",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",60,[[["usize",15]],[["option",4],["signalactionflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",60,[[["usize",15]],["signalactionflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",60,[[["usize",15]],["signalactionflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",60,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",60,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",60,[[["signalactionflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",60,[[["signalactionflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",60,[[["signalactionflags",3]]]],[11,"remove","","Removes the specified flags in-place.",60,[[["signalactionflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",60,[[["signalactionflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",60,[[["bool",15],["signalactionflags",3]]]],[18,"READABLE","linux_object::sync","File: is readable",61,null],[18,"WRITABLE","","File: is writeable",61,null],[18,"ERROR","","File: has error",61,null],[18,"CLOSED","","File: is closed",61,null],[18,"PROCESS_QUIT","","Process: is Quit",61,null],[18,"CHILD_PROCESS_QUIT","","Process: child process is Quit",61,null],[18,"RECEIVE_SIGNAL","","Process: received signal",61,null],[18,"SEMAPHORE_REMOVED","","Semaphore: is removed",61,null],[18,"SEMAPHORE_CAN_ACQUIRE","","Semaphore: can acquired a resource of this semaphore",61,null],[11,"empty","","Returns an empty set of flags",61,[[],["event",3]]],[11,"all","","Returns the set containing all flags.",61,[[],["event",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",61,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",61,[[["u32",15]],[["option",4],["event",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",61,[[["u32",15]],["event",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",61,[[["u32",15]],["event",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",61,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",61,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",61,[[["event",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",61,[[["event",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",61,[[["event",3]]]],[11,"remove","","Removes the specified flags in-place.",61,[[["event",3]]]],[11,"toggle","","Toggles the specified flags in-place.",61,[[["event",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",61,[[["bool",15],["event",3]]]],[11,"new","","create an event bus",62,[[],[["arc",3],["mutex",3]]]],[11,"set","","set event flag",62,[[["event",3]]]],[11,"clear","","clear all event flag",62,[[["event",3]]]],[11,"change","","change event flag",62,[[["event",3]]]],[11,"subscribe","","push a EventHandler into the callback vector",62,[[["eventhandler",6]]]],[11,"get_callback_len","","get the callback vector length",62,[[],["usize",15]]],[11,"new","","Creates a new semaphore with the initial count specified.",63,[[["isize",15]],["semaphore",3]]],[11,"remove","","Set the semaphore in removed statue",63,[[]]],[11,"acquire","","Acquires a resource of this semaphore, blocking the …",63,[[]]],[11,"release","","Release a resource from this semaphore.",63,[[]]],[11,"access","","Acquires a resource of this semaphore, returning an RAII …",63,[[]]],[11,"get","","Get the current count",63,[[],["isize",15]]],[11,"get_ncnt","","Get the current eventbus callback length",63,[[],["usize",15]]],[11,"get_pid","","Get the current pid",63,[[],["usize",15]]],[11,"set_pid","","Set the current pid",63,[[["usize",15]]]],[11,"set","","Set the current count",63,[[["isize",15]]]]],"p":[[4,"LxError"],[3,"File"],[3,"OpenOptions"],[4,"SeekFrom"],[4,"PipeEnd"],[8,"INode"],[4,"IOCTLError"],[3,"PollStatus"],[3,"MMapArea"],[3,"Metadata"],[3,"Timespec"],[4,"FileType"],[3,"FsInfo"],[4,"FsError"],[8,"FileSystem"],[8,"FileLike"],[3,"FileDesc"],[8,"INodeExt"],[3,"SemidDs"],[3,"SemArray"],[3,"ShmidDs"],[3,"ShmIdentifier"],[3,"ShmGuard"],[3,"IpcPerm"],[3,"SemProc"],[3,"ShmProc"],[3,"LinuxElfLoader"],[8,"ProcessExt"],[3,"RLimit"],[3,"LinuxProcess"],[3,"SignalAction"],[3,"SigInfo"],[4,"SignalCode"],[3,"MachineContext"],[4,"Signal"],[3,"SignalUserContext"],[3,"SignalFrame"],[3,"SignalStackFlags"],[3,"SignalStack"],[8,"ThreadExt"],[8,"CurrentThreadExt"],[3,"LinuxThread"],[3,"TimeSpec"],[3,"TimeVal"],[3,"RUsage"],[3,"Tms"],[3,"MemBuf"],[3,"FcntlFlags"],[3,"FileFlags"],[3,"PipeData"],[3,"Pipe"],[3,"Pseudo"],[3,"RandomINodeData"],[3,"RandomINode"],[3,"STDIN"],[3,"STDOUT"],[3,"Stdin"],[3,"Stdout"],[3,"Sigset"],[19,"SiginfoFields"],[3,"SignalActionFlags"],[3,"Event"],[3,"EventBus"],[3,"Semaphore"],[3,"SemaphoreGuard"]]},\
"linux_syscall":{"doc":"Linux syscall implementations","i":[[3,"Syscall","linux_syscall","The struct of Syscall which stores the information about …",null,null],[12,"thread","","the thread making a syscall",0,null],[12,"syscall_entry","","the entry of current syscall",0,null],[12,"regs","","store the regs statues",0,null],[12,"thread_fn","","new thread function",0,null],[11,"syscall","","syscall entry function",0,[[["u32",15]]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",0,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",0,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"sys_getcwd","","return a null-terminated string containing an absolute …",0,[[["usize",15],["useroutptr",6],["u8",15]],["sysresult",6]]],[11,"sys_chdir","","Change the current directory.",0,[[["userinptr",6],["u8",15]],["sysresult",6]]],[11,"sys_mkdir","","Make a directory.",0,[[["usize",15],["userinptr",6],["u8",15]],["sysresult",6]]],[11,"sys_mkdirat","","create directory relative to directory file descriptor",0,[[["usize",15],["userinptr",6],["u8",15],["filedesc",3]],["sysresult",6]]],[11,"sys_rmdir","","Remove a directory.",0,[[["userinptr",6],["u8",15]],["sysresult",6]]],[11,"sys_getdents64","","get directory entries TODO: get ino from dirent",0,[[["usize",15],["useroutptr",6],["u8",15],["filedesc",3]],["sysresult",6]]],[11,"sys_link","","creates a new link (also known as a hard link) to an …",0,[[["userinptr",6],["u8",15]],["sysresult",6]]],[11,"sys_linkat","","create file link relative to directory file descriptors …",0,[[["usize",15],["userinptr",6],["u8",15],["filedesc",3]],["sysresult",6]]],[11,"sys_unlink","","delete name/possibly file it refers to If that name was …",0,[[["userinptr",6],["u8",15]],["sysresult",6]]],[11,"sys_unlinkat","","remove directory entry relative to directory file …",0,[[["usize",15],["userinptr",6],["u8",15],["filedesc",3]],["sysresult",6]]],[11,"sys_rename","","change name/location of file",0,[[["userinptr",6],["u8",15]],["sysresult",6]]],[11,"sys_renameat","","rename file relative to directory file descriptors",0,[[["userinptr",6],["u8",15],["filedesc",3]],["sysresult",6]]],[11,"sys_readlink","","read value of symbolic link",0,[[["usize",15],["userinptr",6],["useroutptr",6],["u8",15]],["sysresult",6]]],[11,"sys_readlinkat","","read value of symbolic link relative to directory file …",0,[[["usize",15],["userinptr",6],["useroutptr",6],["u8",15],["filedesc",3]],["sysresult",6]]],[11,"sys_open","","Opens or creates a file, depending on the flags passed to …",0,[[["usize",15],["userinptr",6],["u8",15]],["sysresult",6]]],[11,"sys_openat","","open file relative to directory file descriptor",0,[[["usize",15],["userinptr",6],["u8",15],["filedesc",3]],["sysresult",6]]],[11,"sys_close","","Closes a file descriptor, so that it no longer refers to …",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_dup2","","create a copy of the file descriptor oldfd.",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_dup","","create a copy of the file descriptor fd, and uses the …",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_pipe","","Creates a pipe, a unidirectional data channel that can be …",0,[[["useroutptr",6]],["sysresult",6]]],[11,"sys_pipe2","","Creates a pipe, a unidirectional data channel that can be …",0,[[["useroutptr",6],["usize",15]],["sysresult",6]]],[11,"sys_flock","","apply or remove an advisory lock on an open file TODO: …",0,[[["usize",15],["filedesc",3]],["sysresult",6]]],[11,"sys_read","","Reads from a specified file using a file descriptor. …",0,[[["usize",15],["useroutptr",6],["u8",15],["filedesc",3]]]],[11,"sys_write","","Writes to a specified file using a file descriptor. …",0,[[["usize",15],["userinptr",6],["u8",15],["filedesc",3]],["sysresult",6]]],[11,"sys_pread","","read from or write to a file descriptor at a given offset …",0,[[["usize",15],["useroutptr",6],["u8",15],["filedesc",3],["u64",15]]]],[11,"sys_pwrite","","writes up to count bytes from the buffer starting at buf …",0,[[["usize",15],["userinptr",6],["u8",15],["filedesc",3],["u64",15]],["sysresult",6]]],[11,"sys_readv","","works just like read except that multiple buffers are …",0,[[["usize",15],["filedesc",3],["userinptr",6],["iovecout",6]]]],[11,"sys_writev","","works just like write except that multiple buffers are …",0,[[["usize",15],["iovecin",6],["filedesc",3],["userinptr",6]],["sysresult",6]]],[11,"sys_lseek","","repositions the offset of the open file associated with …",0,[[["i64",15],["u8",15],["filedesc",3]],["sysresult",6]]],[11,"sys_truncate","","cause the regular file named by path to be truncated to a …",0,[[["usize",15],["userinptr",6],["u8",15]],["sysresult",6]]],[11,"sys_ftruncate","","cause the regular file referenced by fd to be truncated …",0,[[["usize",15],["filedesc",3]],["sysresult",6]]],[11,"sys_sendfile","","copies data between one file descriptor and another.",0,[[["usize",15],["u64",15],["filedesc",3],["userinoutptr",6]]]],[11,"sys_copy_file_range","","copies data between one file descriptor and anothe, read …",0,[[["usize",15],["u64",15],["filedesc",3],["userinoutptr",6]]]],[11,"sys_sync","","causes all buffered modifications to file metadata and …",0,[[],["sysresult",6]]],[11,"sys_fsync","","transfers (“flushes”) all modified in-core data of …",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_fdatasync","","is similar to fsync(), but does not flush modified …",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_ioctl","","Set parameters of device files.",0,[[["usize",15],["filedesc",3]],["sysresult",6]]],[11,"sys_fcntl","","Manipulate a file descriptor.",0,[[["usize",15],["filedesc",3]],["sysresult",6]]],[11,"sys_access","","Checks whether the calling process can access the file …",0,[[["usize",15],["userinptr",6],["u8",15]],["sysresult",6]]],[11,"sys_faccessat","","Check user’s permissions of a file relative to a …",0,[[["usize",15],["userinptr",6],["u8",15],["filedesc",3]],["sysresult",6]]],[11,"sys_utimensat","","change file timestamps with nanosecond precision",0,[[["usize",15],["userinptr",6],["u8",15],["filedesc",3],["userinoutptr",6]],["sysresult",6]]],[11,"sys_poll","","Wait for some event on a file descriptor",0,[[["usize",15],["userinoutptr",6],["pollfd",3]]]],[11,"sys_ppoll","","Wait for some event on a file descriptor",0,[[["usize",15],["userinoutptr",6],["timespec",3],["userinptr",6],["pollfd",3]]]],[11,"sys_pselect6","","similar to select, but have sigmask argument",0,[[["usize",15],["u32",15],["timeval",3],["userinptr",6],["userinoutptr",6]]]],[11,"sys_select","","allow a program to monitor multiple file descriptors, …",0,[[["usize",15],["u32",15],["timeval",3],["userinptr",6],["userinoutptr",6]]]],[11,"sys_lstat","","Works exactly like the stat syscall, but if the file in …",0,[[["userinptr",6],["stat",3],["u8",15],["useroutptr",6]],["sysresult",6]]],[11,"sys_fstat","","Works exactly like the stat syscall except a file …",0,[[["useroutptr",6],["stat",3],["filedesc",3]],["sysresult",6]]],[11,"sys_fstatat","","get file status relative to a directory file descriptor",0,[[["usize",15],["userinptr",6],["stat",3],["u8",15],["filedesc",3],["useroutptr",6]],["sysresult",6]]],[11,"sys_stat","","Returns information about a file in a structure named …",0,[[["userinptr",6],["stat",3],["u8",15],["useroutptr",6]],["sysresult",6]]],[11,"sys_semget","","returns the semaphore set identifier associated with the …",0,[[["usize",15]],["sysresult",6]]],[11,"sys_semop","","semaphore operations",0,[[["usize",15],["userinptr",6],["sembuf",3]]]],[11,"sys_semctl","","semaphore control operations",0,[[["usize",15]],["sysresult",6]]],[11,"sys_shmget","","allocates a shared memory segment",0,[[["usize",15]],["sysresult",6]]],[11,"sys_shmat","","attaches the shared memory segment identified by shmid to …",0,[[["usize",15],["virtaddr",6]],["sysresult",6]]],[11,"sys_shmdt","","detaches the shared memory segment located at the address …",0,[[["usize",15],["virtaddr",6]],["sysresult",6]]],[11,"sys_shmctl","","shared memory control",0,[[["usize",15]],["sysresult",6]]],[11,"sys_arch_prctl","","set architecture-specific thread state for x86_64 …",0,[[["usize",15],["i32",15]],["sysresult",6]]],[11,"sys_uname","","get name and information about current kernel",0,[[["useroutptr",6],["u8",15]],["sysresult",6]]],[11,"sys_sysinfo","","provides a simple way of getting overall system statistics",0,[[["useroutptr",6],["sysinfo",3]],["sysresult",6]]],[11,"sys_futex","","provides a method for waiting until a certain condition …",0,[[["usize",15],["u32",15],["timespec",3],["i32",15],["userinptr",6]]]],[11,"sys_prlimit64","","Combines and extends the functionality of setrlimit() and …",0,[[["usize",15],["useroutptr",6],["userinptr",6],["rlimit",3]],["sysresult",6]]],[11,"sys_getrandom","","fills the buffer pointed to by <code>buf</code> with up to <code>buflen</code> …",0,[[["usize",15],["useroutptr",6],["u32",15],["u8",15]],["sysresult",6]]],[11,"sys_rt_sigaction","","Used to change the action taken by a process on receipt …",0,[[["usize",15],["userinptr",6],["signalaction",3],["useroutptr",6]],["sysresult",6]]],[11,"sys_rt_sigprocmask","","Used to fetch and/or change the signal mask of the …",0,[[["usize",15],["userinptr",6],["i32",15],["useroutptr",6],["sigset",3]],["sysresult",6]]],[11,"sys_sigaltstack","","Allows a process to define a new alternate signal stack …",0,[[["signalstack",3],["userinptr",6],["useroutptr",6]],["sysresult",6]]],[11,"sys_fork","","Fork the current process. Return the child’s PID.",0,[[],["sysresult",6]]],[11,"sys_vfork","","creates a child process of the calling process, similar …",0,[[]]],[11,"sys_clone","","Create a new thread in the current process. The new thread…",0,[[["usize",15],["useroutptr",6],["i32",15]],["sysresult",6]]],[11,"sys_wait4","","Wait for a child process exited.",0,[[["u32",15],["useroutptr",6],["i32",15]]]],[11,"sys_execve","","Replaces the current ** process ** with a new process …",0,[[["userinptr",6],["userinptr",6],["u8",15]],["sysresult",6]]],[11,"sys_gettid","","Get the current thread ID.",0,[[],["sysresult",6]]],[11,"sys_getpid","","Get the current process ID.",0,[[],["sysresult",6]]],[11,"sys_getppid","","Get the parent process ID.",0,[[],["sysresult",6]]],[11,"sys_exit","","Exit the current thread",0,[[["i32",15]],["sysresult",6]]],[11,"sys_exit_group","","Exit the current thread group (i.e. process)",0,[[["i32",15]],["sysresult",6]]],[11,"sys_nanosleep","","Allows the calling thread to sleep for an interval …",0,[[["timespec",3],["userinptr",6]]]],[11,"sys_set_tid_address","","set pointer to thread ID returns the caller’s thread ID",0,[[["useroutptr",6],["i32",15]],["sysresult",6]]],[11,"sys_clock_gettime","","finds the resolution (precision) of the specified clock …",0,[[["usize",15],["timespec",3],["useroutptr",6]],["sysresult",6]]],[11,"sys_gettimeofday","","get the time with second and microseconds",0,[[["useroutptr",6],["userinptr",6],["u8",15],["timeval",3]],["sysresult",6]]],[11,"sys_time","","get time in seconds",0,[[["useroutptr",6],["u64",15]],["sysresult",6]]],[11,"sys_getrusage","","get resource usage currently only support ru_utime and …",0,[[["usize",15],["useroutptr",6],["rusage",3]],["sysresult",6]]],[11,"sys_times","","stores the current process times in the struct tms that …",0,[[["useroutptr",6],["tms",3]],["sysresult",6]]],[11,"sys_mmap","","creates a new mapping in the virtual address space of the …",0,[[["usize",15],["u64",15],["filedesc",3]]]],[11,"sys_mprotect","","changes the access protections for the calling process’…",0,[[["usize",15]],["sysresult",6]]],[11,"sys_munmap","","Deletes the mappings for the specified address range, and …",0,[[["usize",15]],["sysresult",6]]]],"p":[[3,"Syscall"]]},\
"zircon_loader":{"doc":"","i":[[3,"Images","zircon_loader","Program images to run.",null,null],[12,"userboot","","",0,null],[12,"vdso","","",0,null],[12,"zbi","","",0,null],[5,"run_userboot","","",null,[[["images",3],["str",15]],[["arc",3],["process",3]]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any_arc","","",0,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",0,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",0,[[["box",3],["global",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"vzip","","",0,[[]]]],"p":[[3,"Images"]]},\
"zircon_object":{"doc":"Zircon kernel objects","i":[[0,"debuglog","zircon_object","Objects for Kernel Debuglog.",null,null],[3,"DebugLog","zircon_object::debuglog","Debuglog - Kernel debuglog",null,null],[11,"create","","Create a new <code>DebugLog</code>.",0,[[["u32",15]],["arc",3]]],[11,"read","","Read a log, return the actual read size.",0,[[],["usize",15]]],[11,"write","","Write a log.",0,[[["u32",15],["severity",4],["u64",15],["str",15]]]],[4,"Severity","","Log entry severity. Used for coarse filtering of log …",null,null],[13,"Trace","","",1,null],[13,"Debug","","",1,null],[13,"Info","","",1,null],[13,"Warning","","",1,null],[13,"Error","","",1,null],[13,"Fatal","","",1,null],[17,"DLOG_MAX_LEN","","Max length of Dlog read buffer.",null,null],[0,"dev","zircon_object","Objects for Device Drivers.",null,null],[0,"pci_init_args","zircon_object::dev","<code>sys_pci_init</code> args.",null,null],[3,"PciIrqSwizzleLut","zircon_object::dev::pci_init_args","",null,null],[3,"PciInitArgsIrqs","","",null,null],[12,"global_irq","","",2,null],[12,"level_triggered","","",2,null],[12,"active_high","","",2,null],[12,"padding1","","",2,null],[3,"PciInitArgsHeader","","",null,null],[12,"dev_pin_to_global_irq","","",3,null],[12,"num_irqs","","",3,null],[12,"irqs","","",3,null],[12,"addr_window_count","","",3,null],[3,"PciInitArgsAddrWindows","","",null,null],[12,"base","","",4,null],[12,"size","","",4,null],[12,"bus_start","","",4,null],[12,"bus_end","","",4,null],[12,"cfg_space_type","","",4,null],[12,"has_ecam","","",4,null],[12,"padding1","","",4,null],[17,"PCI_INIT_ARG_MAX_ECAM_WINDOWS","","",null,null],[17,"PCI_INIT_ARG_MAX_SIZE","","",null,null],[3,"BusTransactionInitiator","zircon_object::dev","Bus Transaction Initiator.",null,null],[3,"BtiInfo","","Information of BTI.",null,null],[3,"Interrupt","","Interrupts - Usermode I/O interrupt delivery.",null,null],[3,"InterruptFlags","","Bits for Interrupt.flags.",null,null],[3,"InterruptOptions","","Interrupt bind flags.",null,null],[3,"Iommu","","Iommu refers to DummyIommu in zircon.",null,null],[3,"IommuPerms","","IOMMU permission flags.",null,null],[3,"MmioPcieAddressProvider","","Systems that have memory mapped Config Spaces.",null,null],[3,"PCIeBusDriver","","PCIE Bus Driver.",null,null],[3,"PcieDeviceInfo","","Info returned to dev manager for PCIe devices when …",null,null],[12,"vendor_id","","",5,null],[12,"device_id","","",5,null],[12,"base_class","","",5,null],[12,"sub_class","","",5,null],[12,"program_interface","","",5,null],[12,"revision_id","","",5,null],[12,"bus_id","","",5,null],[12,"dev_id","","",5,null],[12,"func_id","","",5,null],[3,"PcieDeviceKObject","","PCIE Device Entity.",null,null],[3,"PioPcieAddressProvider","","Systems that have PIO mapped Config Spaces.",null,null],[4,"PcieIrqMode","","Enumeration which defines the IRQ modes a PCIe device may …",null,null],[13,"Disabled","","All IRQs are disabled.  0 total IRQs are supported in …",6,null],[13,"Legacy","","Devices may support up to 1 legacy IRQ in total.  …",6,null],[13,"Msi","","Devices may support up to 32 MSI IRQs in total.  IRQs may …",6,null],[13,"MsiX","","Devices may support up to 2048 MSI-X IRQs in total.  IRQs …",6,null],[13,"Count","","",6,null],[5,"pio_config_read","","",null,[[["usize",15],["u8",15]],[["u32",15],["zxresult",6]]]],[5,"pio_config_write","","",null,[[["u32",15],["usize",15],["u8",15]],["zxresult",6]]],[4,"PciAddrSpace","","Type of PCI address space.",null,null],[13,"MMIO","","Memory mapping I/O.",7,null],[13,"PIO","","Port I/O.",7,null],[3,"PciEcamRegion","","ECAM Region.",null,null],[12,"phys_base","","Physical address of the memory mapped config region.",8,null],[12,"size","","Size (in bytes) of the memory mapped config region.",8,null],[12,"bus_start","","Inclusive ID of the first bus controlled by this region.",8,null],[12,"bus_end","","Inclusive ID of the last bus controlled by this region.",8,null],[3,"MappedEcamRegion","","Mapped ECAM Region.",null,null],[17,"PCI_MAX_DEVICES_PER_BUS","","",null,null],[17,"PCI_MAX_FUNCTIONS_PER_DEVICE","","",null,null],[17,"PCI_MAX_LEGACY_IRQ_PINS","","",null,null],[17,"PCI_MAX_FUNCTIONS_PER_BUS","","",null,null],[17,"PCI_MAX_IRQS","","",null,null],[17,"PCI_NO_IRQ_MAPPING","","",null,null],[17,"PCIE_PIO_ADDR_SPACE_MASK","","",null,null],[17,"PCIE_MAX_BUSSES","","",null,null],[17,"PCIE_ECAM_BYTES_PER_BUS","","",null,null],[17,"PCIE_INVALID_VENDOR_ID","","",null,null],[17,"PCI_CFG_SPACE_TYPE_PIO","","",null,null],[17,"PCI_CFG_SPACE_TYPE_MMIO","","",null,null],[17,"PCIE_IRQRET_MASK","","",null,null],[17,"PCIE_MAX_MSI_IRQS","","",null,null],[3,"PinnedMemoryToken","","Pinned Memory Token.",null,null],[4,"ResourceKind","","ResourceKind definition from …",null,null],[13,"MMIO","","",9,null],[13,"IRQ","","",9,null],[13,"IOPORT","","",9,null],[13,"HYPERVISOR","","",9,null],[13,"ROOT","","",9,null],[13,"VMEX","","",9,null],[13,"SMC","","",9,null],[13,"COUNT","","",9,null],[3,"ResourceFlags","","Bits for Resource.flags.",null,null],[3,"Resource","","Address space rights and accounting.",null,null],[3,"ResourceInfo","","Information of a resource.",null,null],[0,"hypervisor","zircon_object","Objects for Virtual Machine Monitor (hypervisor).",null,null],[3,"Guest","zircon_object::hypervisor","A guest is a virtual machine that can be run within the …",null,null],[17,"GUEST_PHYSICAL_ASPACE_BASE","","The base of the Guest’s physical address space.",null,null],[17,"GUEST_PHYSICAL_ASPACE_SIZE","","The size of the Guest’s physical address space.",null,null],[4,"TrapKind","","",null,null],[13,"GuestTrapBell","","Asynchronous trap caused by MMIO.",10,null],[13,"GuestTrapMem","","Synchronous traps caused by MMIO.",10,null],[13,"GuestTrapIo","","Synchronous traps caused by I/O instructions.",10,null],[13,"_Invalid","","Invalid",10,null],[3,"VcpuIo","","",null,null],[12,"access_size","","",11,null],[12,"_padding1","","",11,null],[12,"data","","",11,null],[4,"VcpuReadWriteKind","","",null,null],[13,"VcpuState","","",12,null],[13,"VcpuIo","","",12,null],[3,"VcpuState","","",null,null],[12,"rax","","",13,null],[12,"rcx","","",13,null],[12,"rdx","","",13,null],[12,"rbx","","",13,null],[12,"rsp","","",13,null],[12,"rbp","","",13,null],[12,"rsi","","",13,null],[12,"rdi","","",13,null],[12,"r8","","",13,null],[12,"r9","","",13,null],[12,"r10","","",13,null],[12,"r11","","",13,null],[12,"r12","","",13,null],[12,"r13","","",13,null],[12,"r14","","",13,null],[12,"r15","","",13,null],[12,"rflags","","",13,null],[3,"Vcpu","","Virtual CPU within a Guest, which allows for execution …",null,null],[3,"VmmPageTable","","Virtual Machine Manager’s Page Table.",null,null],[11,"new","","Create a new VmmPageTable.",14,[[]]],[0,"ipc","zircon_object","Objects for IPC.",null,null],[3,"Channel","zircon_object::ipc","Bidirectional interprocess communication",null,null],[3,"MessagePacket","","The message transferred in the channel. See Channel for …",null,null],[12,"data","","The data carried by the message packet",15,null],[12,"handles","","See Channel for details.",15,null],[3,"Fifo","","First-In First-Out inter-process queue.",null,null],[3,"Socket","","Bidirectional streaming IPC transport.",null,null],[3,"SocketFlags","","Signals that waitable kernel objects expose to …",null,null],[3,"SocketInfo","","The information of a socket",null,null],[0,"object","zircon_object","Kernel object basis.",null,null],[6,"HandleValue","zircon_object::object","The value refers to a Handle in user space.",null,null],[17,"INVALID_HANDLE","","Invalid handle value.",null,null],[3,"Handle","","A Handle is how a specific process refers to a specific …",null,null],[12,"object","","The object referred to by the handle.",16,null],[12,"rights","","The handle’s associated rights.",16,null],[3,"HandleBasicInfo","","Information about a handle and the object it refers to.",null,null],[5,"obj_type","","Get an object’s type.",null,[[["arc",3]],["u32",15]]],[3,"HandleInfo","","Information about a handle itself, including its …",null,null],[12,"handle","","The handle’s value in user space.",17,null],[3,"Rights","","Rights are associated with handles and convey privileges …",null,null],[3,"Signal","","Signals that waitable kernel objects expose to …",null,null],[8,"KernelObject","","Common interface of a kernel object.",null,null],[10,"id","","Get object’s KoID.",18,[[],["koid",6]]],[10,"type_name","","Get the name of the type of the kernel object.",18,[[],["str",15]]],[10,"name","","Get object’s name.",18,[[],["string",3]]],[10,"set_name","","Set object’s name.",18,[[["str",15]]]],[10,"signal","","Get the signal status.",18,[[],["signal",3]]],[10,"signal_set","","Assert <code>signal</code>.",18,[[["signal",3]]]],[10,"signal_clear","","Deassert <code>signal</code>.",18,[[["signal",3]]]],[10,"signal_change","","Change signal status: first <code>clear</code> then <code>set</code> indicated bits.",18,[[["signal",3]]]],[10,"add_signal_callback","","Add <code>callback</code> for signal status changes.",18,[[["signalhandler",6]]]],[11,"get_child","","Attempt to find a child of the object with given KoID.",18,[[["koid",6]],[["arc",3],["zxresult",6]]]],[11,"peer","","Attempt to get the object’s peer.",18,[[],[["arc",3],["zxresult",6]]]],[11,"related_koid","","If the object is related to another (such as the other …",18,[[],["koid",6]]],[11,"allowed_signals","","Get object’s allowed signals.",18,[[],["signal",3]]],[11,"is","","Returns true if the trait object wraps an object of type …",18,[[],["bool",15]]],[11,"downcast","","Returns a boxed object from a boxed trait object if the …",18,[[["box",3]],[["box",3],["box",3],["result",4]]]],[11,"downcast_rc","","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …",18,[[["rc",3]],[["rc",3],["rc",3],["result",4]]]],[11,"downcast_ref","","Returns a reference to the object within the trait object …",18,[[],["option",4]]],[11,"downcast_mut","","Returns a mutable reference to the object within the …",18,[[],["option",4]]],[11,"downcast_arc","","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …",18,[[["arc",3]],[["arc",3],["arc",3],["result",4]]]],[3,"KObjectBase","","The base struct of a kernel object.",null,null],[12,"id","","The object’s KoID.",19,null],[11,"new","","Create a new kernel object base.",19,[[]]],[11,"with_signal","","Create a kernel object base with initial <code>signal</code>.",19,[[["signal",3]]]],[11,"with_name","","Create a kernel object base with <code>name</code>.",19,[[["str",15]]]],[11,"with","","Create a kernel object base with both signal and name",19,[[["signal",3],["str",15]]]],[11,"name","","Get object’s name.",19,[[],["string",3]]],[11,"set_name","","Set object’s name.",19,[[["str",15]]]],[11,"signal","","Get the signal status.",19,[[],["signal",3]]],[11,"signal_change","","Change signal status: first <code>clear</code> then <code>set</code> indicated bits.",19,[[["signal",3]]]],[11,"signal_set","","Assert <code>signal</code>.",19,[[["signal",3]]]],[11,"signal_clear","","Deassert <code>signal</code>.",19,[[["signal",3]]]],[11,"add_signal_callback","","Add <code>callback</code> for signal status changes.",19,[[["signalhandler",6]]]],[11,"wait_signal","","Asynchronous wait for one of <code>signal</code>.",18,[[["arc",3],["signal",3]]]],[11,"send_signal_to_port_async","","Once one of the <code>signal</code> asserted, push a packet with <code>key</code> …",18,[[["arc",3],["u64",15],["signal",3],["arc",3]]]],[5,"wait_signal_many","","Asynchronous wait signal for multiple objects.",null,[[]]],[6,"KoID","","The type of kernel object ID.",null,null],[6,"SignalHandler","","The type of kernel object signal handler.",null,null],[3,"DummyObject","","Empty kernel object. Just for test.",null,null],[11,"new","","Create a new <code>DummyObject</code>.",20,[[],["arc",3]]],[0,"signal","zircon_object","Objects for signaling and waiting.",null,null],[3,"Event","zircon_object::signal","Signalable event for concurrent programming",null,null],[3,"EventPair","","Mutually signalable pair of events for concurrent …",null,null],[3,"Futex","","A primitive for creating userspace synchronization tools.",null,null],[3,"PortPacket","","A packet sent through a port.",null,null],[12,"key","","",21,null],[12,"type_","","",21,null],[12,"status","","",21,null],[12,"data","","",21,null],[4,"PacketType","","The type of a packet.",null,null],[13,"User","","",22,null],[13,"SignalOne","","",22,null],[13,"SignalRep","","",22,null],[13,"GuestBell","","",22,null],[13,"GuestMem","","",22,null],[13,"GuestIo","","",22,null],[13,"GuestVcpu","","",22,null],[13,"Interrupt","","",22,null],[13,"PageRequest","","",22,null],[19,"Payload","","The data carried by a packet",null,null],[6,"PacketUser","","",null,null],[3,"PacketSignal","","",null,null],[12,"trigger","","",23,null],[12,"observed","","",23,null],[12,"count","","",23,null],[12,"timestamp","","",23,null],[12,"_reserved1","","",23,null],[3,"PacketGuestBell","","",null,null],[12,"addr","","",24,null],[12,"_reserved0","","",24,null],[12,"_reserved1","","",24,null],[12,"_reserved2","","",24,null],[3,"PacketGuestMem","","",null,null],[12,"addr","","",25,null],[12,"inst_len","","",25,null],[12,"inst_buf","","",25,null],[12,"default_operand_size","","",25,null],[12,"_reserved","","",25,null],[3,"PacketGuestIo","","",null,null],[12,"port","","",26,null],[12,"access_size","","",26,null],[12,"input","","",26,null],[12,"data","","",26,null],[12,"_reserved0","","",26,null],[12,"_reserved1","","",26,null],[12,"_reserved2","","",26,null],[4,"PacketGuestVcpuType","","",null,null],[13,"VcpuInterrupt","","",27,null],[13,"VcpuStartup","","",27,null],[19,"PacketGuestVcpuData","","",null,null],[3,"PacketGuestVcpuInterrupt","","",null,null],[3,"PacketGuestVcpuStartup","","",null,null],[3,"PacketGuestVcpu","","",null,null],[12,"data","","",28,null],[12,"type_","","",28,null],[12,"_padding1","","",28,null],[12,"_reserved","","",28,null],[3,"PacketInterrupt","","",null,null],[12,"timestamp","","",29,null],[12,"_reserved0","","",29,null],[12,"_reserved1","","",29,null],[12,"_reserved2","","",29,null],[3,"PortPacketRepr","","A high-level representation of a packet sent through a …",null,null],[12,"key","","",30,null],[12,"status","","",30,null],[12,"data","","",30,null],[4,"PayloadRepr","","A high-level representation of a packet payload.",null,null],[13,"User","","",31,null],[13,"Signal","","",31,null],[13,"GuestBell","","",31,null],[13,"GuestMem","","",31,null],[13,"GuestIo","","",31,null],[13,"GuestVcpu","","",31,null],[13,"Interrupt","","",31,null],[3,"Port","","Signaling and mailbox primitive",null,null],[3,"PortOptions","","If you need this port to be bound to an interrupt, pass <strong>…",null,null],[3,"Timer","","An object that may be signaled at some point in the future",null,null],[4,"Slack","","Slack specifies how much a timer or event is allowed to …",null,null],[13,"Center","","slack is centered around deadline",32,null],[13,"Early","","slack interval is (deadline - slack, deadline]",32,null],[13,"Late","","slack interval is [deadline, deadline + slack)",32,null],[0,"task","zircon_object","Objects for Task Management.",null,null],[3,"Exceptionate","zircon_object::task","Kernel-owned exception channel endpoint.",null,null],[3,"ExceptionReport","","Data reported to an exception handler for most exceptions.",null,null],[4,"ExceptionType","","Type of exception",null,null],[13,"General","","",33,null],[13,"FatalPageFault","","",33,null],[13,"UndefinedInstruction","","",33,null],[13,"SoftwareBreakpoint","","",33,null],[13,"HardwareBreakpoint","","",33,null],[13,"UnalignedAccess","","",33,null],[13,"Synth","","",33,null],[13,"ThreadStarting","","",33,null],[13,"ThreadExiting","","",33,null],[13,"PolicyError","","",33,null],[13,"ProcessStarting","","",33,null],[3,"ExceptionObject","","The exception object received from the exception channel.",null,null],[3,"Job","","Control a group of processes",null,null],[3,"JobInfo","","Information of a job.",null,null],[3,"JobPolicy","","Security and resource policies of a job.",null,null],[4,"SetPolicyOptions","","Control the effect in the case of conflict between the …",null,null],[13,"Absolute","","Policy is applied for all conditions in policy or the …",34,null],[13,"Relative","","Policy is applied for the conditions not specifically …",34,null],[3,"BasicPolicy","","The policy type.",null,null],[12,"condition","","Condition when the policy is applied.",35,null],[12,"action","","",35,null],[4,"PolicyCondition","","The condition when a policy is applied.",null,null],[13,"BadHandle","","A process under this job is attempting to issue a syscall …",36,null],[13,"WrongObject","","A process under this job is attempting to issue a syscall …",36,null],[13,"VmarWx","","A process under this job is attempting to map an address …",36,null],[13,"NewAny","","A special condition that stands for all of the above …",36,null],[13,"NewVMO","","A process under this job is attempting to create a new vm …",36,null],[13,"NewChannel","","A process under this job is attempting to create a new …",36,null],[13,"NewEvent","","A process under this job is attempting to create a new …",36,null],[13,"NewEventPair","","A process under this job is attempting to create a new …",36,null],[13,"NewPort","","A process under this job is attempting to create a new …",36,null],[13,"NewSocket","","A process under this job is attempting to create a new …",36,null],[13,"NewFIFO","","A process under this job is attempting to create a new …",36,null],[13,"NewTimer","","A process under this job is attempting to create a new …",36,null],[13,"NewProcess","","A process under this job is attempting to create a new …",36,null],[13,"NewProfile","","A process under this job is attempting to create a new …",36,null],[13,"AmbientMarkVMOExec","","A process under this job is attempting to use …",36,null],[4,"PolicyAction","","The action taken when the condition happens specified by …",null,null],[13,"Allow","","Allow condition.",37,null],[13,"Deny","","Prevent condition.",37,null],[13,"AllowException","","Generate an exception via the debug port. An exception …",37,null],[13,"DenyException","","Just like <code>AllowException</code>, but after resuming condition is …",37,null],[13,"Kill","","Terminate the process.",37,null],[3,"TimerSlackPolicy","","Timer slack policy.",null,null],[5,"check_timer_policy","","Check whether the policy is valid.",null,[[["timerslackpolicy",3]],["zxresult",6]]],[3,"Process","","Process abstraction",null,null],[4,"Status","","Status of a process.",null,null],[13,"Init","","Initial state, no thread present in process.",38,null],[13,"Running","","First thread has started and is running.",38,null],[13,"Exited","","Process has exited with the code.",38,null],[3,"ProcessInfo","","Information of a process.",null,null],[12,"return_code","","",39,null],[12,"started","","",39,null],[12,"has_exited","","",39,null],[12,"debugger_attached","","",39,null],[12,"padding1","","",39,null],[3,"SuspendToken","","Suspend the given task.",null,null],[4,"ThreadStateKind","","Possible values for “kind” in zx_thread_read_state …",null,null],[13,"General","","",40,null],[13,"FloatPoint","","",40,null],[13,"Vector","","",40,null],[13,"Debug","","",40,null],[13,"SingleStep","","",40,null],[13,"FS","","",40,null],[13,"GS","","",40,null],[3,"Thread","","Runnable / computation entity",null,null],[3,"ThreadFlag","","Thread flags.",null,null],[6,"ThreadFn","","The type of a new thread function.",null,null],[3,"CurrentThread","","A handle to current thread.",null,null],[8,"IntoResult","","<code>into_result</code> returns <code>Self</code> if the type parameter is already …",null,null],[10,"into_result","","Performs the conversion.",41,[[],["zxresult",6]]],[4,"ThreadState","","The thread state.",null,null],[13,"New","","The thread has been created but it has not started …",42,null],[13,"Running","","The thread is running user code normally.",42,null],[13,"Suspended","","Stopped due to <code>zx_task_suspend()</code>.",42,null],[13,"Blocked","","In a syscall or handling an exception.",42,null],[13,"Dying","","The thread is in the process of being terminated, but it …",42,null],[13,"Dead","","The thread has stopped running.",42,null],[13,"BlockedException","","The thread is stopped in an exception.",42,null],[13,"BlockedSleeping","","The thread is stopped in <code>zx_nanosleep()</code>.",42,null],[13,"BlockedFutex","","The thread is stopped in <code>zx_futex_wait()</code>.",42,null],[13,"BlockedPort","","The thread is stopped in <code>zx_port_wait()</code>.",42,null],[13,"BlockedChannel","","The thread is stopped in <code>zx_channel_call()</code>.",42,null],[13,"BlockedWaitOne","","The thread is stopped in <code>zx_object_wait_one()</code>.",42,null],[13,"BlockedWaitMany","","The thread is stopped in <code>zx_object_wait_many()</code>.",42,null],[13,"BlockedInterrupt","","The thread is stopped in <code>zx_interrupt_wait()</code>.",42,null],[13,"BlockedPager","","Pager.",42,null],[3,"ThreadInfo","","The thread information.",null,null],[8,"Task","","Task (Thread, Process, or Job)",null,null],[10,"kill","","Kill the task. The task do not terminate immediately when …",43,[[]]],[10,"suspend","","Suspend the task. Currently only thread or process …",43,[[]]],[10,"resume","","Resume the task",43,[[]]],[10,"exceptionate","","Get the exceptionate.",43,[[],[["exceptionate",3],["arc",3]]]],[10,"debug_exceptionate","","Get the debug exceptionate.",43,[[],[["exceptionate",3],["arc",3]]]],[17,"TASK_RETCODE_SYSCALL_KILL","","The return code set when a task is killed via …",null,null],[0,"util","zircon_object","Utilities.",null,null],[0,"elf_loader","zircon_object::util","ELF loading of Zircon and Linux.",null,null],[8,"VmarExt","zircon_object::util::elf_loader","Extensional ELF loading methods for <code>VmAddressRegion</code>.",null,null],[10,"load_from_elf","","Create <code>VMObject</code> from all LOAD segments of <code>elf</code> and map …",44,[[["elffile",3]],[["arc",3],["zxresult",6]]]],[10,"map_from_elf","","Same as <code>load_from_elf</code>, but the <code>vmo</code> is an existing one …",44,[[["arc",3],["elffile",3],["vmobject",3]],["zxresult",6]]],[8,"ElfExt","","Extensional ELF loading methods for <code>ElfFile</code>.",null,null],[10,"load_segment_size","","Get total size of all LOAD segments.",45,[[],["usize",15]]],[10,"get_symbol_address","","Get address of the given <code>symbol</code>.",45,[[["str",15]],[["option",4],["u64",15]]]],[10,"get_interpreter","","Get the program interpreter path name.",45,[[],[["result",4],["str",15]]]],[10,"dynsym","","Get the symbol table for dynamic linking (.dynsym …",45,[[],[["str",15],["result",4]]]],[10,"relocate","","Relocate according to the dynamic relocation section …",45,[[["usize",15]],[["str",15],["result",4]]]],[0,"kcounter","zircon_object::util","Kernel counter.",null,null],[3,"KCounter","zircon_object::util::kcounter","Kernel counter.",null,null],[11,"new","","Create a new KCounter.",46,[[]]],[11,"add","","Add a value to the counter.",46,[[["usize",15]]]],[11,"get","","Get the value of counter.",46,[[],["usize",15]]],[3,"KCounterDescriptor","","Kernel counter descriptor.",null,null],[12,"counter","","The counter.",47,null],[12,"name","","The counter’s name.",47,null],[3,"KCounterDescriptorArray","","Kernel counter descriptor array.",null,null],[12,"0","","",48,null],[11,"get","","Get kcounter descriptor array from symbols.",48,[[]]],[0,"vm","zircon_object","Objects for Virtual Memory Management.",null,null],[3,"Stream","zircon_object::vm","A readable, writable, seekable interface to some …",null,null],[4,"SeekOrigin","","Enumeration of possible methods to modify the seek within …",null,null],[13,"Start","","Set the seek offset relative to the start of the stream.",49,null],[13,"Current","","Set the seek offset relative to the current seek offset …",49,null],[13,"End","","Set the seek offset relative to the end of the stream, as …",49,null],[3,"StreamInfo","","Information of a Stream",null,null],[3,"VmarFlags","","Creation flags for VmAddressRegion.",null,null],[3,"VmAddressRegion","","Virtual Memory Address Regions",null,null],[3,"VmarInfo","","Information of a VmAddressRegion.",null,null],[3,"VmMapping","","Virtual Memory Mapping",null,null],[3,"TaskStatsInfo","","Statistics about resources (e.g., memory) used by a task.",null,null],[17,"KERNEL_ASPACE_BASE","","The base of kernel address space In x86 fuchsia this is …",null,null],[17,"KERNEL_ASPACE_SIZE","","The size of kernel address space",null,null],[17,"USER_ASPACE_BASE","","The base of user address space",null,null],[17,"USER_ASPACE_SIZE","","The size of user address space",null,null],[5,"vmo_page_bytes","","The amount of memory committed to VMOs.",null,[[],["usize",15]]],[8,"VMObjectTrait","","Virtual Memory Object Trait",null,null],[10,"read","","Read memory to <code>buf</code> from VMO at <code>offset</code>.",50,[[["usize",15]],["zxresult",6]]],[10,"write","","Write memory from <code>buf</code> to VMO at <code>offset</code>.",50,[[["usize",15]],["zxresult",6]]],[10,"zero","","Resets the range of bytes in the VMO from <code>offset</code> to …",50,[[["usize",15]],["zxresult",6]]],[10,"len","","Get the length of VMO.",50,[[],["usize",15]]],[10,"set_len","","Set the length of VMO.",50,[[["usize",15]],["zxresult",6]]],[10,"commit_page","","Commit a page.",50,[[["usize",15],["mmuflags",3]],[["zxresult",6],["physaddr",6]]]],[10,"commit_pages_with","","Commit pages with an external function f. the vmo is …",50,[[["fnmut",8]],["zxresult",6]]],[10,"commit","","Commit allocating physical memory.",50,[[["usize",15]],["zxresult",6]]],[10,"decommit","","Decommit allocated physical memory.",50,[[["usize",15]],["zxresult",6]]],[10,"create_child","","Create a child VMO.",50,[[["usize",15]],[["zxresult",6],["arc",3]]]],[11,"append_mapping","","Append a mapping to the VMO’s mapping list.",50,[[["vmmapping",3],["weak",3]]]],[11,"remove_mapping","","Remove a mapping from the VMO’s mapping list.",50,[[["vmmapping",3],["weak",3]]]],[10,"complete_info","","Complete the VmoInfo.",50,[[["vmoinfo",3]]]],[10,"cache_policy","","Get the cache policy.",50,[[],["cachepolicy",4]]],[10,"set_cache_policy","","Set the cache policy.",50,[[["cachepolicy",4]],["zxresult",6]]],[10,"committed_pages_in_range","","Count committed pages of the VMO.",50,[[["usize",15]],["usize",15]]],[11,"pin","","Pin the given range of the VMO.",50,[[["usize",15]],["zxresult",6]]],[11,"unpin","","Unpin the given range of the VMO.",50,[[["usize",15]],["zxresult",6]]],[11,"is_contiguous","","Returns true if the object is backed by a contiguous …",50,[[],["bool",15]]],[11,"is_paged","","Returns true if the object is backed by RAM.",50,[[],["bool",15]]],[3,"VmObject","","Virtual memory containers",null,null],[3,"VmoInfo","","Describes a VMO.",null,null],[12,"flags","","Flags.",51,null],[12,"rights","","If <code>flags & ZX_INFO_VMO_VIA_HANDLE</code>, the handle rights. …",51,null],[3,"VmoInfoFlags","","Values used by ZX_INFO_PROCESS_VMOS.",null,null],[4,"CachePolicy","","",null,null],[13,"Cached","","",52,null],[13,"Uncached","","",52,null],[13,"UncachedDevice","","",52,null],[13,"WriteCombining","","",52,null],[3,"MMUFlags","","",null,null],[6,"PhysAddr","","Physical Address",null,null],[6,"VirtAddr","","Virtual Address",null,null],[6,"DevVAddr","","Device Address",null,null],[17,"PAGE_SIZE","","Size of a page",null,null],[17,"PAGE_SIZE_LOG2","","log2(PAGE_SIZE)",null,null],[5,"page_aligned","","Check whether <code>x</code> is a multiple of <code>PAGE_SIZE</code>.",null,[[["usize",15]],["bool",15]]],[5,"check_aligned","","Check whether <code>x</code> is a multiple of <code>align</code>.",null,[[["usize",15]],["bool",15]]],[5,"pages","","How many pages the <code>size</code> needs. To avoid overflow and pass …",null,[[["usize",15]],["usize",15]]],[5,"ceil","","How many <code>align</code> the <code>x</code> needs.",null,[[["usize",15]],["usize",15]]],[5,"roundup_pages","","Round up <code>size</code> to a multiple of <code>PAGE_SIZE</code>.",null,[[["usize",15]],["usize",15]]],[5,"round_down_pages","","Round down <code>size</code> to a multiple of <code>PAGE_SIZE</code>.",null,[[["usize",15]],["usize",15]]],[3,"KERNEL_ASPACE","","Kernel address space.",null,null],[5,"kernel_allocate_physical","","Allocate memory in kernel address space at given physical …",null,[[["usize",15],["cachepolicy",4],["physaddr",6],["mmuflags",3]],[["zxresult",6],["virtaddr",6]]]],[6,"ZxResult","zircon_object","The type returned by kernel objects methods.",null,null],[4,"ZxError","","Zircon statuses are signed 32 bit integers. The space of …",null,null],[13,"OK","","Success.",53,null],[13,"INTERNAL","","The system encountered an otherwise unspecified error …",53,null],[13,"NOT_SUPPORTED","","The operation is not implemented, supported, or enabled.",53,null],[13,"NO_RESOURCES","","The system was not able to allocate some resource needed …",53,null],[13,"NO_MEMORY","","The system was not able to allocate memory needed for the …",53,null],[13,"INTERNAL_INTR_RETRY","","The system call was interrupted, but should be retried.  …",53,null],[13,"INVALID_ARGS","","an argument is invalid, ex. null pointer",53,null],[13,"BAD_HANDLE","","A specified handle value does not refer to a handle.",53,null],[13,"WRONG_TYPE","","The subject of the operation is the wrong type to perform …",53,null],[13,"BAD_SYSCALL","","The specified syscall number is invalid.",53,null],[13,"OUT_OF_RANGE","","An argument is outside the valid range for this operation.",53,null],[13,"BUFFER_TOO_SMALL","","A caller provided buffer is too small for this operation.",53,null],[13,"BAD_STATE","","operation failed because the current state of the object …",53,null],[13,"TIMED_OUT","","The time limit for the operation elapsed before the …",53,null],[13,"SHOULD_WAIT","","The operation cannot be performed currently but …",53,null],[13,"CANCELED","","The in-progress operation (e.g. a wait) has been canceled.",53,null],[13,"PEER_CLOSED","","The operation failed because the remote end of the …",53,null],[13,"NOT_FOUND","","The requested entity is not found.",53,null],[13,"ALREADY_EXISTS","","An object with the specified identifier already exists. …",53,null],[13,"ALREADY_BOUND","","The operation failed because the named entity is already …",53,null],[13,"UNAVAILABLE","","The subject of the operation is currently unable to …",53,null],[13,"ACCESS_DENIED","","The caller did not have permission to perform the …",53,null],[13,"IO","","Otherwise unspecified error occurred during I/O.",53,null],[13,"IO_REFUSED","","The entity the I/O operation is being performed on …",53,null],[13,"IO_DATA_INTEGRITY","","The data in the operation failed an integrity check and …",53,null],[13,"IO_DATA_LOSS","","The data in the operation is currently unavailable and …",53,null],[13,"IO_NOT_PRESENT","","The device is no longer available (has been unplugged …",53,null],[13,"IO_OVERRUN","","More data was received from the device than expected. …",53,null],[13,"IO_MISSED_DEADLINE","","An operation did not complete within the required …",53,null],[13,"IO_INVALID","","The data in the operation is invalid parameter or is out …",53,null],[13,"BAD_PATH","","Path name is too long.",53,null],[13,"NOT_DIR","","Object is not a directory or does not support directory …",53,null],[13,"NOT_FILE","","Object is not a regular file.",53,null],[13,"FILE_BIG","","This operation would cause a file to exceed a …",53,null],[13,"NO_SPACE","","Filesystem or device space is exhausted.",53,null],[13,"NOT_EMPTY","","Directory is not empty.",53,null],[13,"STOP","","Do not call again. Example: A notification callback will …",53,null],[13,"NEXT","","Advance to the next item. Example: A notification …",53,null],[13,"ASYNC","","Ownership of the item has moved to an asynchronous worker.",53,null],[13,"PROTOCOL_NOT_SUPPORTED","","Specified protocol is not supported.",53,null],[13,"ADDRESS_UNREACHABLE","","Host is unreachable.",53,null],[13,"ADDRESS_IN_USE","","Address is being used by someone else.",53,null],[13,"NOT_CONNECTED","","Socket is not connected.",53,null],[13,"CONNECTION_REFUSED","","Remote peer rejected the connection.",53,null],[13,"CONNECTION_RESET","","Connection was reset.",53,null],[13,"CONNECTION_ABORTED","","Connection was aborted.",53,null],[14,"impl_kobject","","Macro to auto implement <code>KernelObject</code> trait.",null,null],[14,"define_count_helper","","Define a pair of kcounter (create, destroy), and a helper …",null,null],[14,"kcounter","","Define a new KCounter.",null,null],[11,"borrow","zircon_object::debuglog","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any","","",0,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_any","","",1,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","zircon_object::dev","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"into_any","","",54,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",54,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",54,[[],["any",8]]],[11,"as_any_mut","","",54,[[],["any",8]]],[11,"into_any_arc","","",54,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"into_any","","",55,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",55,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",55,[[],["any",8]]],[11,"as_any_mut","","",55,[[],["any",8]]],[11,"into_any_arc","","",55,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"into_any","","",56,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",56,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",56,[[],["any",8]]],[11,"as_any_mut","","",56,[[],["any",8]]],[11,"into_any_arc","","",56,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"get_hash","","",57,[[],["u64",15]]],[11,"into_any","","",57,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",57,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",57,[[],["any",8]]],[11,"as_any_mut","","",57,[[],["any",8]]],[11,"into_any_arc","","",57,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"get_hash","","",58,[[],["u64",15]]],[11,"into_any","","",58,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",58,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",58,[[],["any",8]]],[11,"as_any_mut","","",58,[[],["any",8]]],[11,"into_any_arc","","",58,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"into_any","","",59,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",59,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",59,[[],["any",8]]],[11,"as_any_mut","","",59,[[],["any",8]]],[11,"into_any_arc","","",59,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"get_hash","","",60,[[],["u64",15]]],[11,"into_any","","",60,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",60,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",60,[[],["any",8]]],[11,"as_any_mut","","",60,[[],["any",8]]],[11,"into_any_arc","","",60,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"into_any","","",61,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",61,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",61,[[],["any",8]]],[11,"as_any_mut","","",61,[[],["any",8]]],[11,"into_any_arc","","",61,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"into_any","","",62,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",62,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",62,[[],["any",8]]],[11,"as_any_mut","","",62,[[],["any",8]]],[11,"into_any_arc","","",62,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"into_any","","",63,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",63,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",63,[[],["any",8]]],[11,"as_any_mut","","",63,[[],["any",8]]],[11,"into_any_arc","","",63,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"into_any","","",5,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"into_any_arc","","",5,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"into_any","","",64,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",64,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",64,[[],["any",8]]],[11,"as_any_mut","","",64,[[],["any",8]]],[11,"into_any_arc","","",64,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"into_any","","",6,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"into_any_arc","","",6,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","zircon_object::dev::pci_init_args","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"into_any","","",65,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",65,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",65,[[],["any",8]]],[11,"as_any_mut","","",65,[[],["any",8]]],[11,"into_any_arc","","",65,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_any","","",2,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"into_any_arc","","",2,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_any","","",3,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"into_any_arc","","",3,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_any","","",4,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"into_any_arc","","",4,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","zircon_object::dev","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_any","","",7,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"into_any_arc","","",7,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_any","","",8,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"into_any_arc","","",8,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"into_any","","",66,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",66,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",66,[[],["any",8]]],[11,"as_any_mut","","",66,[[],["any",8]]],[11,"into_any_arc","","",66,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"into_any","","",67,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",67,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",67,[[],["any",8]]],[11,"as_any_mut","","",67,[[],["any",8]]],[11,"into_any_arc","","",67,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"into_any","","",9,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"into_any_arc","","",9,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"get_hash","","",68,[[],["u64",15]]],[11,"into_any","","",68,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",68,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",68,[[],["any",8]]],[11,"as_any_mut","","",68,[[],["any",8]]],[11,"into_any_arc","","",68,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"into_any","","",69,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",69,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",69,[[],["any",8]]],[11,"as_any_mut","","",69,[[],["any",8]]],[11,"into_any_arc","","",69,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"into_any","","",70,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",70,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",70,[[],["any",8]]],[11,"as_any_mut","","",70,[[],["any",8]]],[11,"into_any_arc","","",70,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","zircon_object","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"into_any","","",53,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",53,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",53,[[],["any",8]]],[11,"as_any_mut","","",53,[[],["any",8]]],[11,"into_any_arc","","",53,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","zircon_object::hypervisor","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"into_any","","",71,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",71,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",71,[[],["any",8]]],[11,"as_any_mut","","",71,[[],["any",8]]],[11,"into_any_arc","","",71,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"into_any","","",72,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",72,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",72,[[],["any",8]]],[11,"as_any_mut","","",72,[[],["any",8]]],[11,"into_any_arc","","",72,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"into_any","","",10,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"into_any_arc","","",10,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"into_any","","",11,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",11,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"into_any_arc","","",11,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_any","","",12,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",12,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",12,[[],["any",8]]],[11,"as_any_mut","","",12,[[],["any",8]]],[11,"into_any_arc","","",12,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_any","","",13,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"into_any_arc","","",13,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into_any","","",14,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",14,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"into_any_arc","","",14,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","zircon_object::ipc","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"into_any","","",73,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",73,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",73,[[],["any",8]]],[11,"as_any_mut","","",73,[[],["any",8]]],[11,"into_any_arc","","",73,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_any","","",15,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",15,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",15,[[],["any",8]]],[11,"as_any_mut","","",15,[[],["any",8]]],[11,"into_any_arc","","",15,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"into_any","","",74,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",74,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",74,[[],["any",8]]],[11,"as_any_mut","","",74,[[],["any",8]]],[11,"into_any_arc","","",74,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"into_any","","",75,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",75,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",75,[[],["any",8]]],[11,"as_any_mut","","",75,[[],["any",8]]],[11,"into_any_arc","","",75,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"get_hash","","",76,[[],["u64",15]]],[11,"into_any","","",76,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",76,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",76,[[],["any",8]]],[11,"as_any_mut","","",76,[[],["any",8]]],[11,"into_any_arc","","",76,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"into_any","","",77,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",77,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",77,[[],["any",8]]],[11,"as_any_mut","","",77,[[],["any",8]]],[11,"into_any_arc","","",77,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","zircon_object::object","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"into_any","","",16,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",16,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",16,[[],["any",8]]],[11,"as_any_mut","","",16,[[],["any",8]]],[11,"into_any_arc","","",16,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"into_any","","",78,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",78,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",78,[[],["any",8]]],[11,"as_any_mut","","",78,[[],["any",8]]],[11,"into_any_arc","","",78,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"into_any","","",17,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",17,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",17,[[],["any",8]]],[11,"as_any_mut","","",17,[[],["any",8]]],[11,"into_any_arc","","",17,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"get_hash","","",79,[[],["u64",15]]],[11,"into_any","","",79,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",79,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",79,[[],["any",8]]],[11,"as_any_mut","","",79,[[],["any",8]]],[11,"into_any_arc","","",79,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"get_hash","","",80,[[],["u64",15]]],[11,"into_any","","",80,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",80,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",80,[[],["any",8]]],[11,"as_any_mut","","",80,[[],["any",8]]],[11,"into_any_arc","","",80,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_any","","",19,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",19,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",19,[[],["any",8]]],[11,"as_any_mut","","",19,[[],["any",8]]],[11,"into_any_arc","","",19,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"into_any","","",20,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",20,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",20,[[],["any",8]]],[11,"as_any_mut","","",20,[[],["any",8]]],[11,"into_any_arc","","",20,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","zircon_object::signal","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"into_any","","",81,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",81,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",81,[[],["any",8]]],[11,"as_any_mut","","",81,[[],["any",8]]],[11,"into_any_arc","","",81,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"into_any","","",82,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",82,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",82,[[],["any",8]]],[11,"as_any_mut","","",82,[[],["any",8]]],[11,"into_any_arc","","",82,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"into_any","","",83,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",83,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",83,[[],["any",8]]],[11,"as_any_mut","","",83,[[],["any",8]]],[11,"into_any_arc","","",83,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"into_any","","",21,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",21,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",21,[[],["any",8]]],[11,"as_any_mut","","",21,[[],["any",8]]],[11,"into_any_arc","","",21,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"into_any","","",22,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",22,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",22,[[],["any",8]]],[11,"as_any_mut","","",22,[[],["any",8]]],[11,"into_any_arc","","",22,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"into_any","","",84,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",84,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",84,[[],["any",8]]],[11,"as_any_mut","","",84,[[],["any",8]]],[11,"into_any_arc","","",84,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"into_any","","",23,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",23,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",23,[[],["any",8]]],[11,"as_any_mut","","",23,[[],["any",8]]],[11,"into_any_arc","","",23,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"into_any","","",24,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",24,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",24,[[],["any",8]]],[11,"as_any_mut","","",24,[[],["any",8]]],[11,"into_any_arc","","",24,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"into_any","","",25,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",25,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",25,[[],["any",8]]],[11,"as_any_mut","","",25,[[],["any",8]]],[11,"into_any_arc","","",25,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"into_any","","",26,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",26,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",26,[[],["any",8]]],[11,"as_any_mut","","",26,[[],["any",8]]],[11,"into_any_arc","","",26,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"into_any","","",27,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",27,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",27,[[],["any",8]]],[11,"as_any_mut","","",27,[[],["any",8]]],[11,"into_any_arc","","",27,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"into_any","","",85,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",85,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",85,[[],["any",8]]],[11,"as_any_mut","","",85,[[],["any",8]]],[11,"into_any_arc","","",85,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"into_any","","",86,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",86,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",86,[[],["any",8]]],[11,"as_any_mut","","",86,[[],["any",8]]],[11,"into_any_arc","","",86,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"into_any","","",87,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",87,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",87,[[],["any",8]]],[11,"as_any_mut","","",87,[[],["any",8]]],[11,"into_any_arc","","",87,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"into_any","","",28,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",28,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",28,[[],["any",8]]],[11,"as_any_mut","","",28,[[],["any",8]]],[11,"into_any_arc","","",28,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"into_any","","",29,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",29,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",29,[[],["any",8]]],[11,"as_any_mut","","",29,[[],["any",8]]],[11,"into_any_arc","","",29,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"into_any","","",30,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",30,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",30,[[],["any",8]]],[11,"as_any_mut","","",30,[[],["any",8]]],[11,"into_any_arc","","",30,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"into_any","","",31,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",31,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",31,[[],["any",8]]],[11,"as_any_mut","","",31,[[],["any",8]]],[11,"into_any_arc","","",31,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"into_any","","",88,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",88,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",88,[[],["any",8]]],[11,"as_any_mut","","",88,[[],["any",8]]],[11,"into_any_arc","","",88,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"get_hash","","",89,[[],["u64",15]]],[11,"into_any","","",89,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",89,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",89,[[],["any",8]]],[11,"as_any_mut","","",89,[[],["any",8]]],[11,"into_any_arc","","",89,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"into_any","","",90,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",90,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",90,[[],["any",8]]],[11,"as_any_mut","","",90,[[],["any",8]]],[11,"into_any_arc","","",90,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"into_any","","",32,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",32,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",32,[[],["any",8]]],[11,"as_any_mut","","",32,[[],["any",8]]],[11,"into_any_arc","","",32,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","zircon_object::task","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"into_any","","",91,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",91,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",91,[[],["any",8]]],[11,"as_any_mut","","",91,[[],["any",8]]],[11,"into_any_arc","","",91,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"into_any","","",92,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",92,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",92,[[],["any",8]]],[11,"as_any_mut","","",92,[[],["any",8]]],[11,"into_any_arc","","",92,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"into_any","","",33,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",33,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",33,[[],["any",8]]],[11,"as_any_mut","","",33,[[],["any",8]]],[11,"into_any_arc","","",33,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"into_any","","",93,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",93,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",93,[[],["any",8]]],[11,"as_any_mut","","",93,[[],["any",8]]],[11,"into_any_arc","","",93,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"into_any","","",94,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",94,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",94,[[],["any",8]]],[11,"as_any_mut","","",94,[[],["any",8]]],[11,"into_any_arc","","",94,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"into_any","","",95,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",95,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",95,[[],["any",8]]],[11,"as_any_mut","","",95,[[],["any",8]]],[11,"into_any_arc","","",95,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"into_any","","",96,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",96,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",96,[[],["any",8]]],[11,"as_any_mut","","",96,[[],["any",8]]],[11,"into_any_arc","","",96,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"into_any","","",34,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",34,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",34,[[],["any",8]]],[11,"as_any_mut","","",34,[[],["any",8]]],[11,"into_any_arc","","",34,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"into_any","","",35,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",35,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",35,[[],["any",8]]],[11,"as_any_mut","","",35,[[],["any",8]]],[11,"into_any_arc","","",35,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"into_any","","",36,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",36,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",36,[[],["any",8]]],[11,"as_any_mut","","",36,[[],["any",8]]],[11,"into_any_arc","","",36,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"into_any","","",37,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",37,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",37,[[],["any",8]]],[11,"as_any_mut","","",37,[[],["any",8]]],[11,"into_any_arc","","",37,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"into_any","","",97,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",97,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",97,[[],["any",8]]],[11,"as_any_mut","","",97,[[],["any",8]]],[11,"into_any_arc","","",97,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"into_any","","",98,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",98,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",98,[[],["any",8]]],[11,"as_any_mut","","",98,[[],["any",8]]],[11,"into_any_arc","","",98,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"into_any","","",38,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",38,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",38,[[],["any",8]]],[11,"as_any_mut","","",38,[[],["any",8]]],[11,"into_any_arc","","",38,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"into_any","","",39,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",39,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",39,[[],["any",8]]],[11,"as_any_mut","","",39,[[],["any",8]]],[11,"into_any_arc","","",39,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"into_any","","",99,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",99,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",99,[[],["any",8]]],[11,"as_any_mut","","",99,[[],["any",8]]],[11,"into_any_arc","","",99,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"into_any","","",40,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",40,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",40,[[],["any",8]]],[11,"as_any_mut","","",40,[[],["any",8]]],[11,"into_any_arc","","",40,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"into_any","","",100,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",100,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",100,[[],["any",8]]],[11,"as_any_mut","","",100,[[],["any",8]]],[11,"into_any_arc","","",100,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"get_hash","","",101,[[],["u64",15]]],[11,"into_any","","",101,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",101,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",101,[[],["any",8]]],[11,"as_any_mut","","",101,[[],["any",8]]],[11,"into_any_arc","","",101,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"into_any","","",102,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",102,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",102,[[],["any",8]]],[11,"as_any_mut","","",102,[[],["any",8]]],[11,"into_any_arc","","",102,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"into_any","","",42,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",42,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",42,[[],["any",8]]],[11,"as_any_mut","","",42,[[],["any",8]]],[11,"into_any_arc","","",42,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"into_any","","",103,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",103,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",103,[[],["any",8]]],[11,"as_any_mut","","",103,[[],["any",8]]],[11,"into_any_arc","","",103,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","zircon_object::util::kcounter","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"into_any","","",46,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",46,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",46,[[],["any",8]]],[11,"as_any_mut","","",46,[[],["any",8]]],[11,"into_any_arc","","",46,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"into_any","","",47,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",47,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",47,[[],["any",8]]],[11,"as_any_mut","","",47,[[],["any",8]]],[11,"into_any_arc","","",47,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"into_any","","",48,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",48,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",48,[[],["any",8]]],[11,"as_any_mut","","",48,[[],["any",8]]],[11,"into_any_arc","","",48,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","zircon_object::vm","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"into_any","","",104,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",104,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",104,[[],["any",8]]],[11,"as_any_mut","","",104,[[],["any",8]]],[11,"into_any_arc","","",104,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"into_any","","",49,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",49,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",49,[[],["any",8]]],[11,"as_any_mut","","",49,[[],["any",8]]],[11,"into_any_arc","","",49,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"into_any","","",105,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",105,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",105,[[],["any",8]]],[11,"as_any_mut","","",105,[[],["any",8]]],[11,"into_any_arc","","",105,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"get_hash","","",106,[[],["u64",15]]],[11,"into_any","","",106,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",106,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",106,[[],["any",8]]],[11,"as_any_mut","","",106,[[],["any",8]]],[11,"into_any_arc","","",106,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"into_any","","",107,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",107,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",107,[[],["any",8]]],[11,"as_any_mut","","",107,[[],["any",8]]],[11,"into_any_arc","","",107,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"into_any","","",108,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",108,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",108,[[],["any",8]]],[11,"as_any_mut","","",108,[[],["any",8]]],[11,"into_any_arc","","",108,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"into_any","","",109,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",109,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",109,[[],["any",8]]],[11,"as_any_mut","","",109,[[],["any",8]]],[11,"into_any_arc","","",109,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"into_any","","",110,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",110,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",110,[[],["any",8]]],[11,"as_any_mut","","",110,[[],["any",8]]],[11,"into_any_arc","","",110,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"into_any","","",111,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",111,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",111,[[],["any",8]]],[11,"as_any_mut","","",111,[[],["any",8]]],[11,"into_any_arc","","",111,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"into_any","","",51,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",51,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",51,[[],["any",8]]],[11,"as_any_mut","","",51,[[],["any",8]]],[11,"into_any_arc","","",51,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"get_hash","","",112,[[],["u64",15]]],[11,"into_any","","",112,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",112,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",112,[[],["any",8]]],[11,"as_any_mut","","",112,[[],["any",8]]],[11,"into_any_arc","","",112,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"into_any","","",52,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",52,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",52,[[],["any",8]]],[11,"as_any_mut","","",52,[[],["any",8]]],[11,"into_any_arc","","",52,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"get_hash","","",113,[[],["u64",15]]],[11,"into_any","","",113,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",113,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",113,[[],["any",8]]],[11,"as_any_mut","","",113,[[],["any",8]]],[11,"into_any_arc","","",113,[[["arc",3]],[["arc",3],["any",8]]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"into_any","","",114,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",114,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",114,[[],["any",8]]],[11,"as_any_mut","","",114,[[],["any",8]]],[11,"into_any_arc","","",114,[[["arc",3]],[["arc",3],["any",8]]]],[11,"clone","","",113,[[],["mmuflags",3]]],[11,"clone","","",52,[[],["cachepolicy",4]]],[11,"fmt","","",113,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",113,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",113,[[["formatter",3]],[["result",4],["error",3]]]],[11,"bitor_assign","","Adds the set of flags.",113,[[["mmuflags",3]]]],[11,"sub","","Returns the set difference of the two sets of flags.",113,[[["mmuflags",3]],["mmuflags",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",113,[[["mmuflags",3]]]],[11,"try_from","","",52,[[["u32",15]],[["u32",15],["cachepolicy",4],["result",4]]]],[11,"bitor","","Returns the union of the two sets of flags.",113,[[["mmuflags",3]],["mmuflags",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",113,[[["mmuflags",3]]]],[11,"eq","","",113,[[["mmuflags",3]],["bool",15]]],[11,"ne","","",113,[[["mmuflags",3]],["bool",15]]],[11,"eq","","",52,[[["cachepolicy",4]],["bool",15]]],[11,"fmt","","",113,[[["formatter",3]],[["result",4],["error",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",113,[[["mmuflags",3]]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",113,[[["mmuflags",3]],["mmuflags",3]]],[11,"hash","","",113,[[]]],[11,"not","","Returns the complement of this set of flags.",113,[[],["mmuflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",113,[[["mmuflags",3]],["mmuflags",3]]],[11,"extend","","",113,[[]]],[11,"from_iter","","",113,[[],["mmuflags",3]]],[11,"partial_cmp","","",113,[[["mmuflags",3]],[["ordering",4],["option",4]]]],[11,"cmp","","",113,[[["mmuflags",3]],["ordering",4]]],[11,"fmt","","",113,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",52,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","zircon_object::hypervisor","",10,[[],["trapkind",4]]],[11,"try_from","","",12,[[["u32",15]],[["u32",15],["result",4],["vcpureadwritekind",4]]]],[11,"try_from","","",10,[[["u32",15]],[["trapkind",4],["rvmerror",4],["result",4]]]],[11,"fmt","","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",11,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",13,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",10,[[["formatter",3]],[["result",4],["error",3]]]],[11,"eq","","",10,[[["trapkind",4]],["bool",15]]],[11,"default","","",13,[[],["vcpustate",3]]],[11,"id","zircon_object::debuglog","",0,[[],["koid",6]]],[11,"type_name","","",0,[[],["str",15]]],[11,"name","","",0,[[],["string",3]]],[11,"set_name","","",0,[[["str",15]]]],[11,"signal","","",0,[[],["signal",3]]],[11,"signal_set","","",0,[[["signal",3]]]],[11,"signal_clear","","",0,[[["signal",3]]]],[11,"signal_change","","",0,[[["signal",3]]]],[11,"add_signal_callback","","",0,[[["signalhandler",6]]]],[11,"id","zircon_object::dev","",54,[[],["koid",6]]],[11,"type_name","","",54,[[],["str",15]]],[11,"name","","",54,[[],["string",3]]],[11,"set_name","","",54,[[["str",15]]]],[11,"signal","","",54,[[],["signal",3]]],[11,"signal_set","","",54,[[["signal",3]]]],[11,"signal_clear","","",54,[[["signal",3]]]],[11,"signal_change","","",54,[[["signal",3]]]],[11,"add_signal_callback","","",54,[[["signalhandler",6]]]],[11,"id","","",56,[[],["koid",6]]],[11,"type_name","","",56,[[],["str",15]]],[11,"name","","",56,[[],["string",3]]],[11,"set_name","","",56,[[["str",15]]]],[11,"signal","","",56,[[],["signal",3]]],[11,"signal_set","","",56,[[["signal",3]]]],[11,"signal_clear","","",56,[[["signal",3]]]],[11,"signal_change","","",56,[[["signal",3]]]],[11,"add_signal_callback","","",56,[[["signalhandler",6]]]],[11,"id","","",59,[[],["koid",6]]],[11,"type_name","","",59,[[],["str",15]]],[11,"name","","",59,[[],["string",3]]],[11,"set_name","","",59,[[["str",15]]]],[11,"signal","","",59,[[],["signal",3]]],[11,"signal_set","","",59,[[["signal",3]]]],[11,"signal_clear","","",59,[[["signal",3]]]],[11,"signal_change","","",59,[[["signal",3]]]],[11,"add_signal_callback","","",59,[[["signalhandler",6]]]],[11,"id","","",64,[[],["koid",6]]],[11,"type_name","","",64,[[],["str",15]]],[11,"name","","",64,[[],["string",3]]],[11,"set_name","","",64,[[["str",15]]]],[11,"signal","","",64,[[],["signal",3]]],[11,"signal_set","","",64,[[["signal",3]]]],[11,"signal_clear","","",64,[[["signal",3]]]],[11,"signal_change","","",64,[[["signal",3]]]],[11,"add_signal_callback","","",64,[[["signalhandler",6]]]],[11,"id","","",67,[[],["koid",6]]],[11,"type_name","","",67,[[],["str",15]]],[11,"name","","",67,[[],["string",3]]],[11,"set_name","","",67,[[["str",15]]]],[11,"signal","","",67,[[],["signal",3]]],[11,"signal_set","","",67,[[["signal",3]]]],[11,"signal_clear","","",67,[[["signal",3]]]],[11,"signal_change","","",67,[[["signal",3]]]],[11,"add_signal_callback","","",67,[[["signalhandler",6]]]],[11,"id","","",69,[[],["koid",6]]],[11,"type_name","","",69,[[],["str",15]]],[11,"name","","",69,[[],["string",3]]],[11,"set_name","","",69,[[["str",15]]]],[11,"signal","","",69,[[],["signal",3]]],[11,"signal_set","","",69,[[["signal",3]]]],[11,"signal_clear","","",69,[[["signal",3]]]],[11,"signal_change","","",69,[[["signal",3]]]],[11,"add_signal_callback","","",69,[[["signalhandler",6]]]],[11,"id","zircon_object::hypervisor","",71,[[],["koid",6]]],[11,"type_name","","",71,[[],["str",15]]],[11,"name","","",71,[[],["string",3]]],[11,"set_name","","",71,[[["str",15]]]],[11,"signal","","",71,[[],["signal",3]]],[11,"signal_set","","",71,[[["signal",3]]]],[11,"signal_clear","","",71,[[["signal",3]]]],[11,"signal_change","","",71,[[["signal",3]]]],[11,"add_signal_callback","","",71,[[["signalhandler",6]]]],[11,"id","","",72,[[],["koid",6]]],[11,"type_name","","",72,[[],["str",15]]],[11,"name","","",72,[[],["string",3]]],[11,"set_name","","",72,[[["str",15]]]],[11,"signal","","",72,[[],["signal",3]]],[11,"signal_set","","",72,[[["signal",3]]]],[11,"signal_clear","","",72,[[["signal",3]]]],[11,"signal_change","","",72,[[["signal",3]]]],[11,"add_signal_callback","","",72,[[["signalhandler",6]]]],[11,"id","zircon_object::ipc","",73,[[],["koid",6]]],[11,"type_name","","",73,[[],["str",15]]],[11,"name","","",73,[[],["string",3]]],[11,"set_name","","",73,[[["str",15]]]],[11,"signal","","",73,[[],["signal",3]]],[11,"signal_set","","",73,[[["signal",3]]]],[11,"signal_clear","","",73,[[["signal",3]]]],[11,"signal_change","","",73,[[["signal",3]]]],[11,"add_signal_callback","","",73,[[["signalhandler",6]]]],[11,"peer","","",73,[[],[["arc",3],["zxresult",6]]]],[11,"related_koid","","",73,[[],["koid",6]]],[11,"id","","",74,[[],["koid",6]]],[11,"type_name","","",74,[[],["str",15]]],[11,"name","","",74,[[],["string",3]]],[11,"set_name","","",74,[[["str",15]]]],[11,"signal","","",74,[[],["signal",3]]],[11,"signal_set","","",74,[[["signal",3]]]],[11,"signal_clear","","",74,[[["signal",3]]]],[11,"signal_change","","",74,[[["signal",3]]]],[11,"add_signal_callback","","",74,[[["signalhandler",6]]]],[11,"peer","","",74,[[],[["arc",3],["zxresult",6]]]],[11,"related_koid","","",74,[[],["koid",6]]],[11,"id","","",75,[[],["koid",6]]],[11,"type_name","","",75,[[],["str",15]]],[11,"name","","",75,[[],["string",3]]],[11,"set_name","","",75,[[["str",15]]]],[11,"signal","","",75,[[],["signal",3]]],[11,"signal_set","","",75,[[["signal",3]]]],[11,"signal_clear","","",75,[[["signal",3]]]],[11,"signal_change","","",75,[[["signal",3]]]],[11,"add_signal_callback","","",75,[[["signalhandler",6]]]],[11,"peer","","",75,[[],[["arc",3],["zxresult",6]]]],[11,"related_koid","","",75,[[],["koid",6]]],[11,"id","zircon_object::object","",20,[[],["koid",6]]],[11,"type_name","","",20,[[],["str",15]]],[11,"name","","",20,[[],["string",3]]],[11,"set_name","","",20,[[["str",15]]]],[11,"signal","","",20,[[],["signal",3]]],[11,"signal_set","","",20,[[["signal",3]]]],[11,"signal_clear","","",20,[[["signal",3]]]],[11,"signal_change","","",20,[[["signal",3]]]],[11,"add_signal_callback","","",20,[[["signalhandler",6]]]],[11,"id","zircon_object::signal","",81,[[],["koid",6]]],[11,"type_name","","",81,[[],["str",15]]],[11,"name","","",81,[[],["string",3]]],[11,"set_name","","",81,[[["str",15]]]],[11,"signal","","",81,[[],["signal",3]]],[11,"signal_set","","",81,[[["signal",3]]]],[11,"signal_clear","","",81,[[["signal",3]]]],[11,"signal_change","","",81,[[["signal",3]]]],[11,"add_signal_callback","","",81,[[["signalhandler",6]]]],[11,"allowed_signals","","",81,[[],["signal",3]]],[11,"id","","",82,[[],["koid",6]]],[11,"type_name","","",82,[[],["str",15]]],[11,"name","","",82,[[],["string",3]]],[11,"set_name","","",82,[[["str",15]]]],[11,"signal","","",82,[[],["signal",3]]],[11,"signal_set","","",82,[[["signal",3]]]],[11,"signal_clear","","",82,[[["signal",3]]]],[11,"signal_change","","",82,[[["signal",3]]]],[11,"add_signal_callback","","",82,[[["signalhandler",6]]]],[11,"allowed_signals","","",82,[[],["signal",3]]],[11,"peer","","",82,[[],[["arc",3],["zxresult",6]]]],[11,"related_koid","","",82,[[],["koid",6]]],[11,"id","","",83,[[],["koid",6]]],[11,"type_name","","",83,[[],["str",15]]],[11,"name","","",83,[[],["string",3]]],[11,"set_name","","",83,[[["str",15]]]],[11,"signal","","",83,[[],["signal",3]]],[11,"signal_set","","",83,[[["signal",3]]]],[11,"signal_clear","","",83,[[["signal",3]]]],[11,"signal_change","","",83,[[["signal",3]]]],[11,"add_signal_callback","","",83,[[["signalhandler",6]]]],[11,"id","","",88,[[],["koid",6]]],[11,"type_name","","",88,[[],["str",15]]],[11,"name","","",88,[[],["string",3]]],[11,"set_name","","",88,[[["str",15]]]],[11,"signal","","",88,[[],["signal",3]]],[11,"signal_set","","",88,[[["signal",3]]]],[11,"signal_clear","","",88,[[["signal",3]]]],[11,"signal_change","","",88,[[["signal",3]]]],[11,"add_signal_callback","","",88,[[["signalhandler",6]]]],[11,"id","","",90,[[],["koid",6]]],[11,"type_name","","",90,[[],["str",15]]],[11,"name","","",90,[[],["string",3]]],[11,"set_name","","",90,[[["str",15]]]],[11,"signal","","",90,[[],["signal",3]]],[11,"signal_set","","",90,[[["signal",3]]]],[11,"signal_clear","","",90,[[["signal",3]]]],[11,"signal_change","","",90,[[["signal",3]]]],[11,"add_signal_callback","","",90,[[["signalhandler",6]]]],[11,"id","zircon_object::task","",93,[[],["koid",6]]],[11,"type_name","","",93,[[],["str",15]]],[11,"name","","",93,[[],["string",3]]],[11,"set_name","","",93,[[["str",15]]]],[11,"signal","","",93,[[],["signal",3]]],[11,"signal_set","","",93,[[["signal",3]]]],[11,"signal_clear","","",93,[[["signal",3]]]],[11,"signal_change","","",93,[[["signal",3]]]],[11,"add_signal_callback","","",93,[[["signalhandler",6]]]],[11,"id","","",94,[[],["koid",6]]],[11,"type_name","","",94,[[],["str",15]]],[11,"name","","",94,[[],["string",3]]],[11,"set_name","","",94,[[["str",15]]]],[11,"signal","","",94,[[],["signal",3]]],[11,"signal_set","","",94,[[["signal",3]]]],[11,"signal_clear","","",94,[[["signal",3]]]],[11,"signal_change","","",94,[[["signal",3]]]],[11,"add_signal_callback","","",94,[[["signalhandler",6]]]],[11,"get_child","","",94,[[["koid",6]],[["arc",3],["zxresult",6]]]],[11,"related_koid","","",94,[[],["koid",6]]],[11,"id","","",98,[[],["koid",6]]],[11,"type_name","","",98,[[],["str",15]]],[11,"name","","",98,[[],["string",3]]],[11,"set_name","","",98,[[["str",15]]]],[11,"signal","","",98,[[],["signal",3]]],[11,"signal_set","","",98,[[["signal",3]]]],[11,"signal_clear","","",98,[[["signal",3]]]],[11,"signal_change","","",98,[[["signal",3]]]],[11,"add_signal_callback","","",98,[[["signalhandler",6]]]],[11,"get_child","","",98,[[["koid",6]],[["arc",3],["zxresult",6]]]],[11,"related_koid","","",98,[[],["koid",6]]],[11,"id","","",99,[[],["koid",6]]],[11,"type_name","","",99,[[],["str",15]]],[11,"name","","",99,[[],["string",3]]],[11,"set_name","","",99,[[["str",15]]]],[11,"signal","","",99,[[],["signal",3]]],[11,"signal_set","","",99,[[["signal",3]]]],[11,"signal_clear","","",99,[[["signal",3]]]],[11,"signal_change","","",99,[[["signal",3]]]],[11,"add_signal_callback","","",99,[[["signalhandler",6]]]],[11,"id","","",100,[[],["koid",6]]],[11,"type_name","","",100,[[],["str",15]]],[11,"name","","",100,[[],["string",3]]],[11,"set_name","","",100,[[["str",15]]]],[11,"signal","","",100,[[],["signal",3]]],[11,"signal_set","","",100,[[["signal",3]]]],[11,"signal_clear","","",100,[[["signal",3]]]],[11,"signal_change","","",100,[[["signal",3]]]],[11,"add_signal_callback","","",100,[[["signalhandler",6]]]],[11,"related_koid","","",100,[[],["koid",6]]],[11,"id","zircon_object::vm","",104,[[],["koid",6]]],[11,"type_name","","",104,[[],["str",15]]],[11,"name","","",104,[[],["string",3]]],[11,"set_name","","",104,[[["str",15]]]],[11,"signal","","",104,[[],["signal",3]]],[11,"signal_set","","",104,[[["signal",3]]]],[11,"signal_clear","","",104,[[["signal",3]]]],[11,"signal_change","","",104,[[["signal",3]]]],[11,"add_signal_callback","","",104,[[["signalhandler",6]]]],[11,"id","","",107,[[],["koid",6]]],[11,"type_name","","",107,[[],["str",15]]],[11,"name","","",107,[[],["string",3]]],[11,"set_name","","",107,[[["str",15]]]],[11,"signal","","",107,[[],["signal",3]]],[11,"signal_set","","",107,[[["signal",3]]]],[11,"signal_clear","","",107,[[["signal",3]]]],[11,"signal_change","","",107,[[["signal",3]]]],[11,"add_signal_callback","","",107,[[["signalhandler",6]]]],[11,"id","","",111,[[],["koid",6]]],[11,"type_name","","",111,[[],["str",15]]],[11,"name","","",111,[[],["string",3]]],[11,"set_name","","",111,[[["str",15]]]],[11,"signal","","",111,[[],["signal",3]]],[11,"signal_set","","",111,[[["signal",3]]]],[11,"signal_clear","","",111,[[["signal",3]]]],[11,"signal_change","","",111,[[["signal",3]]]],[11,"add_signal_callback","","",111,[[["signalhandler",6]]]],[11,"into_result","zircon_object","",115,[[],["zxresult",6]]],[11,"kill","zircon_object::task","Kill the job. The job do not terminate immediately when …",94,[[]]],[11,"suspend","","",94,[[]]],[11,"resume","","",94,[[]]],[11,"exceptionate","","",94,[[],[["exceptionate",3],["arc",3]]]],[11,"debug_exceptionate","","",94,[[],[["exceptionate",3],["arc",3]]]],[11,"kill","","",98,[[]]],[11,"suspend","","",98,[[]]],[11,"resume","","",98,[[]]],[11,"exceptionate","","",98,[[],[["exceptionate",3],["arc",3]]]],[11,"debug_exceptionate","","",98,[[],[["exceptionate",3],["arc",3]]]],[11,"kill","","",100,[[]]],[11,"suspend","","",100,[[]]],[11,"resume","","",100,[[]]],[11,"exceptionate","","",100,[[],[["exceptionate",3],["arc",3]]]],[11,"debug_exceptionate","","",100,[[],[["exceptionate",3],["arc",3]]]],[11,"load_from_elf","zircon_object::vm","",107,[[["elffile",3]],[["arc",3],["zxresult",6]]]],[11,"map_from_elf","","",107,[[["arc",3],["elffile",3],["vmobject",3]],["zxresult",6]]],[11,"deref","zircon_object::task","",102,[[]]],[11,"deref","zircon_object::vm","",111,[[]]],[11,"deref","","",114,[[],["arc",3]]],[11,"fmt","zircon_object::debuglog","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::dev","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::dev::pci_init_args","",4,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::dev","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","zircon_object","",53,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::hypervisor","",71,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",72,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","zircon_object::ipc","",73,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",75,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::object","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","zircon_object::signal","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::task","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::util::kcounter","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","zircon_object::vm","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"sub","zircon_object::dev","Returns the set difference of the two sets of flags.",57,[[["interruptflags",3]],["interruptflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",58,[[["interruptoptions",3]],["interruptoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",60,[[["iommuperms",3]],["iommuperms",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",68,[[["resourceflags",3]],["resourceflags",3]]],[11,"sub","zircon_object::ipc","Returns the set difference of the two sets of flags.",76,[[["socketflags",3]],["socketflags",3]]],[11,"sub","zircon_object::object","Returns the set difference of the two sets of flags.",79,[[["rights",3]],["rights",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",80,[[["signal",3]],["signal",3]]],[11,"sub","zircon_object::signal","Returns the set difference of the two sets of flags.",89,[[["portoptions",3]],["portoptions",3]]],[11,"sub","zircon_object::task","Returns the set difference of the two sets of flags.",101,[[["threadflag",3]],["threadflag",3]]],[11,"sub","zircon_object::vm","Returns the set difference of the two sets of flags.",106,[[["vmarflags",3]],["vmarflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",112,[[["vmoinfoflags",3]],["vmoinfoflags",3]]],[11,"eq","zircon_object::dev","",57,[[["interruptflags",3]],["bool",15]]],[11,"ne","","",57,[[["interruptflags",3]],["bool",15]]],[11,"eq","","",58,[[["interruptoptions",3]],["bool",15]]],[11,"ne","","",58,[[["interruptoptions",3]],["bool",15]]],[11,"eq","","",60,[[["iommuperms",3]],["bool",15]]],[11,"ne","","",60,[[["iommuperms",3]],["bool",15]]],[11,"eq","","",6,[[["pcieirqmode",4]],["bool",15]]],[11,"eq","","",7,[[["pciaddrspace",4]],["bool",15]]],[11,"eq","","",9,[[["resourcekind",4]],["bool",15]]],[11,"eq","","",68,[[["resourceflags",3]],["bool",15]]],[11,"ne","","",68,[[["resourceflags",3]],["bool",15]]],[11,"eq","zircon_object","",53,[[["zxerror",4]],["bool",15]]],[11,"eq","zircon_object::ipc","",76,[[["socketflags",3]],["bool",15]]],[11,"ne","","",76,[[["socketflags",3]],["bool",15]]],[11,"eq","","",77,[[["socketinfo",3]],["bool",15]]],[11,"ne","","",77,[[["socketinfo",3]],["bool",15]]],[11,"eq","zircon_object::object","",79,[[["rights",3]],["bool",15]]],[11,"ne","","",79,[[["rights",3]],["bool",15]]],[11,"eq","","",80,[[["signal",3]],["bool",15]]],[11,"ne","","",80,[[["signal",3]],["bool",15]]],[11,"eq","zircon_object::signal","",22,[[["packettype",4]],["bool",15]]],[11,"eq","","",23,[[["packetsignal",3]],["bool",15]]],[11,"ne","","",23,[[["packetsignal",3]],["bool",15]]],[11,"eq","","",24,[[["packetguestbell",3]],["bool",15]]],[11,"ne","","",24,[[["packetguestbell",3]],["bool",15]]],[11,"eq","","",25,[[["packetguestmem",3]],["bool",15]]],[11,"ne","","",25,[[["packetguestmem",3]],["bool",15]]],[11,"eq","","",26,[[["packetguestio",3]],["bool",15]]],[11,"ne","","",26,[[["packetguestio",3]],["bool",15]]],[11,"eq","","",27,[[["packetguestvcputype",4]],["bool",15]]],[11,"eq","","",86,[[["packetguestvcpuinterrupt",3]],["bool",15]]],[11,"ne","","",86,[[["packetguestvcpuinterrupt",3]],["bool",15]]],[11,"eq","","",87,[[["packetguestvcpustartup",3]],["bool",15]]],[11,"ne","","",87,[[["packetguestvcpustartup",3]],["bool",15]]],[11,"eq","","",29,[[["packetinterrupt",3]],["bool",15]]],[11,"ne","","",29,[[["packetinterrupt",3]],["bool",15]]],[11,"eq","","",30,[[["portpacketrepr",3]],["bool",15]]],[11,"ne","","",30,[[["portpacketrepr",3]],["bool",15]]],[11,"eq","","",31,[[["payloadrepr",4]],["bool",15]]],[11,"ne","","",31,[[["payloadrepr",4]],["bool",15]]],[11,"eq","","",28,[[],["bool",15]]],[11,"eq","","",89,[[["portoptions",3]],["bool",15]]],[11,"ne","","",89,[[["portoptions",3]],["bool",15]]],[11,"eq","zircon_object::task","",33,[[["exceptiontype",4]],["bool",15]]],[11,"eq","","",37,[[["policyaction",4]],["bool",15]]],[11,"eq","","",38,[[["status",4]],["bool",15]]],[11,"ne","","",38,[[["status",4]],["bool",15]]],[11,"eq","","",101,[[["threadflag",3]],["bool",15]]],[11,"ne","","",101,[[["threadflag",3]],["bool",15]]],[11,"eq","","",42,[[["threadstate",4]],["bool",15]]],[11,"eq","zircon_object::vm","",106,[[["vmarflags",3]],["bool",15]]],[11,"ne","","",106,[[["vmarflags",3]],["bool",15]]],[11,"eq","","",112,[[["vmoinfoflags",3]],["bool",15]]],[11,"ne","","",112,[[["vmoinfoflags",3]],["bool",15]]],[11,"cmp","zircon_object::dev","",57,[[["interruptflags",3]],["ordering",4]]],[11,"cmp","","",58,[[["interruptoptions",3]],["ordering",4]]],[11,"cmp","","",60,[[["iommuperms",3]],["ordering",4]]],[11,"cmp","","",68,[[["resourceflags",3]],["ordering",4]]],[11,"cmp","zircon_object::ipc","",76,[[["socketflags",3]],["ordering",4]]],[11,"cmp","zircon_object::object","",79,[[["rights",3]],["ordering",4]]],[11,"cmp","","",80,[[["signal",3]],["ordering",4]]],[11,"cmp","zircon_object::signal","",89,[[["portoptions",3]],["ordering",4]]],[11,"cmp","zircon_object::task","",101,[[["threadflag",3]],["ordering",4]]],[11,"cmp","zircon_object::vm","",106,[[["vmarflags",3]],["ordering",4]]],[11,"cmp","","",112,[[["vmoinfoflags",3]],["ordering",4]]],[11,"partial_cmp","zircon_object::dev","",57,[[["interruptflags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",58,[[["interruptoptions",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",60,[[["iommuperms",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",68,[[["resourceflags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","zircon_object::ipc","",76,[[["socketflags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","zircon_object::object","",79,[[["rights",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",80,[[["signal",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","zircon_object::signal","",89,[[["portoptions",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","zircon_object::task","",101,[[["threadflag",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","zircon_object::vm","",106,[[["vmarflags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",112,[[["vmoinfoflags",3]],[["ordering",4],["option",4]]]],[11,"sub_assign","zircon_object::dev","Disables all flags enabled in the set.",57,[[["interruptflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",58,[[["interruptoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",60,[[["iommuperms",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",68,[[["resourceflags",3]]]],[11,"sub_assign","zircon_object::ipc","Disables all flags enabled in the set.",76,[[["socketflags",3]]]],[11,"sub_assign","zircon_object::object","Disables all flags enabled in the set.",79,[[["rights",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",80,[[["signal",3]]]],[11,"sub_assign","zircon_object::signal","Disables all flags enabled in the set.",89,[[["portoptions",3]]]],[11,"sub_assign","zircon_object::task","Disables all flags enabled in the set.",101,[[["threadflag",3]]]],[11,"sub_assign","zircon_object::vm","Disables all flags enabled in the set.",106,[[["vmarflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",112,[[["vmoinfoflags",3]]]],[11,"not","zircon_object::dev","Returns the complement of this set of flags.",57,[[],["interruptflags",3]]],[11,"not","","Returns the complement of this set of flags.",58,[[],["interruptoptions",3]]],[11,"not","","Returns the complement of this set of flags.",60,[[],["iommuperms",3]]],[11,"not","","Returns the complement of this set of flags.",68,[[],["resourceflags",3]]],[11,"not","zircon_object::ipc","Returns the complement of this set of flags.",76,[[],["socketflags",3]]],[11,"not","zircon_object::object","Returns the complement of this set of flags.",79,[[],["rights",3]]],[11,"not","","Returns the complement of this set of flags.",80,[[],["signal",3]]],[11,"not","zircon_object::signal","Returns the complement of this set of flags.",89,[[],["portoptions",3]]],[11,"not","zircon_object::task","Returns the complement of this set of flags.",101,[[],["threadflag",3]]],[11,"not","zircon_object::vm","Returns the complement of this set of flags.",106,[[],["vmarflags",3]]],[11,"not","","Returns the complement of this set of flags.",112,[[],["vmoinfoflags",3]]],[11,"bitand","zircon_object::dev","Returns the intersection between the two sets of flags.",57,[[["interruptflags",3]],["interruptflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",58,[[["interruptoptions",3]],["interruptoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",60,[[["iommuperms",3]],["iommuperms",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",68,[[["resourceflags",3]],["resourceflags",3]]],[11,"bitand","zircon_object::ipc","Returns the intersection between the two sets of flags.",76,[[["socketflags",3]],["socketflags",3]]],[11,"bitand","zircon_object::object","Returns the intersection between the two sets of flags.",79,[[["rights",3]],["rights",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",80,[[["signal",3]],["signal",3]]],[11,"bitand","zircon_object::signal","Returns the intersection between the two sets of flags.",89,[[["portoptions",3]],["portoptions",3]]],[11,"bitand","zircon_object::task","Returns the intersection between the two sets of flags.",101,[[["threadflag",3]],["threadflag",3]]],[11,"bitand","zircon_object::vm","Returns the intersection between the two sets of flags.",106,[[["vmarflags",3]],["vmarflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",112,[[["vmoinfoflags",3]],["vmoinfoflags",3]]],[11,"bitor","zircon_object::dev","Returns the union of the two sets of flags.",57,[[["interruptflags",3]],["interruptflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",58,[[["interruptoptions",3]],["interruptoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",60,[[["iommuperms",3]],["iommuperms",3]]],[11,"bitor","","Returns the union of the two sets of flags.",68,[[["resourceflags",3]],["resourceflags",3]]],[11,"bitor","zircon_object::ipc","Returns the union of the two sets of flags.",76,[[["socketflags",3]],["socketflags",3]]],[11,"bitor","zircon_object::object","Returns the union of the two sets of flags.",79,[[["rights",3]],["rights",3]]],[11,"bitor","","Returns the union of the two sets of flags.",80,[[["signal",3]],["signal",3]]],[11,"bitor","zircon_object::signal","Returns the union of the two sets of flags.",89,[[["portoptions",3]],["portoptions",3]]],[11,"bitor","zircon_object::task","Returns the union of the two sets of flags.",101,[[["threadflag",3]],["threadflag",3]]],[11,"bitor","zircon_object::vm","Returns the union of the two sets of flags.",106,[[["vmarflags",3]],["vmarflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",112,[[["vmoinfoflags",3]],["vmoinfoflags",3]]],[11,"bitxor","zircon_object::dev","Returns the left flags, but with all the right flags …",57,[[["interruptflags",3]],["interruptflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",58,[[["interruptoptions",3]],["interruptoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",60,[[["iommuperms",3]],["iommuperms",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",68,[[["resourceflags",3]],["resourceflags",3]]],[11,"bitxor","zircon_object::ipc","Returns the left flags, but with all the right flags …",76,[[["socketflags",3]],["socketflags",3]]],[11,"bitxor","zircon_object::object","Returns the left flags, but with all the right flags …",79,[[["rights",3]],["rights",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",80,[[["signal",3]],["signal",3]]],[11,"bitxor","zircon_object::signal","Returns the left flags, but with all the right flags …",89,[[["portoptions",3]],["portoptions",3]]],[11,"bitxor","zircon_object::task","Returns the left flags, but with all the right flags …",101,[[["threadflag",3]],["threadflag",3]]],[11,"bitxor","zircon_object::vm","Returns the left flags, but with all the right flags …",106,[[["vmarflags",3]],["vmarflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",112,[[["vmoinfoflags",3]],["vmoinfoflags",3]]],[11,"bitand_assign","zircon_object::dev","Disables all flags disabled in the set.",57,[[["interruptflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",58,[[["interruptoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",60,[[["iommuperms",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",68,[[["resourceflags",3]]]],[11,"bitand_assign","zircon_object::ipc","Disables all flags disabled in the set.",76,[[["socketflags",3]]]],[11,"bitand_assign","zircon_object::object","Disables all flags disabled in the set.",79,[[["rights",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",80,[[["signal",3]]]],[11,"bitand_assign","zircon_object::signal","Disables all flags disabled in the set.",89,[[["portoptions",3]]]],[11,"bitand_assign","zircon_object::task","Disables all flags disabled in the set.",101,[[["threadflag",3]]]],[11,"bitand_assign","zircon_object::vm","Disables all flags disabled in the set.",106,[[["vmarflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",112,[[["vmoinfoflags",3]]]],[11,"bitor_assign","zircon_object::dev","Adds the set of flags.",57,[[["interruptflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",58,[[["interruptoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",60,[[["iommuperms",3]]]],[11,"bitor_assign","","Adds the set of flags.",68,[[["resourceflags",3]]]],[11,"bitor_assign","zircon_object::ipc","Adds the set of flags.",76,[[["socketflags",3]]]],[11,"bitor_assign","zircon_object::object","Adds the set of flags.",79,[[["rights",3]]]],[11,"bitor_assign","","Adds the set of flags.",80,[[["signal",3]]]],[11,"bitor_assign","zircon_object::signal","Adds the set of flags.",89,[[["portoptions",3]]]],[11,"bitor_assign","zircon_object::task","Adds the set of flags.",101,[[["threadflag",3]]]],[11,"bitor_assign","zircon_object::vm","Adds the set of flags.",106,[[["vmarflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",112,[[["vmoinfoflags",3]]]],[11,"bitxor_assign","zircon_object::dev","Toggles the set of flags.",57,[[["interruptflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",58,[[["interruptoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",60,[[["iommuperms",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",68,[[["resourceflags",3]]]],[11,"bitxor_assign","zircon_object::ipc","Toggles the set of flags.",76,[[["socketflags",3]]]],[11,"bitxor_assign","zircon_object::object","Toggles the set of flags.",79,[[["rights",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",80,[[["signal",3]]]],[11,"bitxor_assign","zircon_object::signal","Toggles the set of flags.",89,[[["portoptions",3]]]],[11,"bitxor_assign","zircon_object::task","Toggles the set of flags.",101,[[["threadflag",3]]]],[11,"bitxor_assign","zircon_object::vm","Toggles the set of flags.",106,[[["vmarflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",112,[[["vmoinfoflags",3]]]],[11,"drop","zircon_object::dev","",56,[[]]],[11,"drop","","",67,[[]]],[11,"drop","zircon_object::hypervisor","",72,[[]]],[11,"drop","zircon_object::ipc","",73,[[]]],[11,"drop","","",74,[[]]],[11,"drop","","",75,[[]]],[11,"drop","zircon_object::signal","",82,[[]]],[11,"drop","zircon_object::task","",93,[[]]],[11,"drop","","",94,[[]]],[11,"drop","","",99,[[]]],[11,"drop","","Terminate the current running thread.",102,[[]]],[11,"drop","zircon_object::vm","",109,[[]]],[11,"drop","","",111,[[]]],[11,"hash","zircon_object::dev","",57,[[]]],[11,"hash","","",58,[[]]],[11,"hash","","",60,[[]]],[11,"hash","","",68,[[]]],[11,"hash","zircon_object::ipc","",76,[[]]],[11,"hash","zircon_object::object","",79,[[]]],[11,"hash","","",80,[[]]],[11,"hash","zircon_object::signal","",89,[[]]],[11,"hash","zircon_object::task","",101,[[]]],[11,"hash","zircon_object::vm","",106,[[]]],[11,"hash","","",112,[[]]],[11,"try_from","zircon_object::dev","",6,[[["u32",15]],[["result",4],["u32",15]]]],[11,"try_from","","",9,[[["u32",15]],[["result",4],["u32",15]]]],[11,"try_from","zircon_object::object","",79,[[["u32",15]],["zxresult",6]]],[11,"try_from","zircon_object::task","",40,[[["u32",15]],[["result",4],["u32",15]]]],[11,"try_from","zircon_object::vm","",49,[[["usize",15]],[["result",4],["usize",15]]]],[11,"from_iter","zircon_object::dev","",57,[[["intoiterator",8]],["interruptflags",3]]],[11,"from_iter","","",58,[[["intoiterator",8]],["interruptoptions",3]]],[11,"from_iter","","",60,[[["intoiterator",8]],["iommuperms",3]]],[11,"from_iter","","",68,[[["intoiterator",8]],["resourceflags",3]]],[11,"from_iter","zircon_object::ipc","",76,[[["intoiterator",8]],["socketflags",3]]],[11,"from_iter","zircon_object::object","",79,[[["intoiterator",8]],["rights",3]]],[11,"from_iter","","",80,[[["intoiterator",8]],["signal",3]]],[11,"from_iter","zircon_object::signal","",89,[[["intoiterator",8]],["portoptions",3]]],[11,"from_iter","zircon_object::task","",101,[[["intoiterator",8]],["threadflag",3]]],[11,"from_iter","zircon_object::vm","",106,[[["intoiterator",8]],["vmarflags",3]]],[11,"from_iter","","",112,[[["intoiterator",8]],["vmoinfoflags",3]]],[11,"from","zircon_object","",53,[[["error",4]]]],[11,"from","zircon_object::signal","",24,[[["bellpacket",3]]]],[11,"from","","",26,[[["iopacket",3]]]],[11,"from","","",25,[[["mmiopacket",3]]]],[11,"from","zircon_object","",53,[[["rvmerror",4]]]],[11,"from","zircon_object::signal","",21,[[["portpacketrepr",3]]]],[11,"from","","",30,[[["portpacket",3]]]],[11,"fmt","zircon_object::dev","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::ipc","",76,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::object","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::signal","",89,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::task","",101,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::vm","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::dev","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::ipc","",76,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::object","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::signal","",89,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::task","",101,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::vm","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::dev","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::ipc","",76,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::object","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::signal","",89,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::task","",101,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::vm","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::dev","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::ipc","",76,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::object","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::signal","",89,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::task","",101,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::vm","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"extend","zircon_object::dev","",57,[[["intoiterator",8]]]],[11,"extend","","",58,[[["intoiterator",8]]]],[11,"extend","","",60,[[["intoiterator",8]]]],[11,"extend","","",68,[[["intoiterator",8]]]],[11,"extend","zircon_object::ipc","",76,[[["intoiterator",8]]]],[11,"extend","zircon_object::object","",79,[[["intoiterator",8]]]],[11,"extend","","",80,[[["intoiterator",8]]]],[11,"extend","zircon_object::signal","",89,[[["intoiterator",8]]]],[11,"extend","zircon_object::task","",101,[[["intoiterator",8]]]],[11,"extend","zircon_object::vm","",106,[[["intoiterator",8]]]],[11,"extend","","",112,[[["intoiterator",8]]]],[11,"clone","zircon_object::dev","",57,[[],["interruptflags",3]]],[11,"clone","","",58,[[],["interruptoptions",3]]],[11,"clone","","",60,[[],["iommuperms",3]]],[11,"clone","","",5,[[],["pciedeviceinfo",3]]],[11,"clone","","",6,[[],["pcieirqmode",4]]],[11,"clone","zircon_object::dev::pci_init_args","",65,[[],["pciirqswizzlelut",3]]],[11,"clone","zircon_object::dev","",9,[[],["resourcekind",4]]],[11,"clone","","",68,[[],["resourceflags",3]]],[11,"clone","zircon_object","",53,[[],["zxerror",4]]],[11,"clone","zircon_object::ipc","",76,[[],["socketflags",3]]],[11,"clone","zircon_object::object","",16,[[],["handle",3]]],[11,"clone","","",79,[[],["rights",3]]],[11,"clone","","",80,[[],["signal",3]]],[11,"clone","zircon_object::signal","",22,[[],["packettype",4]]],[11,"clone","","",23,[[],["packetsignal",3]]],[11,"clone","","",24,[[],["packetguestbell",3]]],[11,"clone","","",25,[[],["packetguestmem",3]]],[11,"clone","","",26,[[],["packetguestio",3]]],[11,"clone","","",27,[[],["packetguestvcputype",4]]],[11,"clone","","",85,[[],["packetguestvcpudata",19]]],[11,"clone","","",86,[[],["packetguestvcpuinterrupt",3]]],[11,"clone","","",87,[[],["packetguestvcpustartup",3]]],[11,"clone","","",28,[[],["packetguestvcpu",3]]],[11,"clone","","",29,[[],["packetinterrupt",3]]],[11,"clone","","",30,[[],["portpacketrepr",3]]],[11,"clone","","",31,[[],["payloadrepr",4]]],[11,"clone","","",89,[[],["portoptions",3]]],[11,"clone","","",32,[[],["slack",4]]],[11,"clone","zircon_object::task","",92,[[],["exceptionreport",3]]],[11,"clone","","",33,[[],["exceptiontype",4]]],[11,"clone","","",96,[[],["jobpolicy",3]]],[11,"clone","","",34,[[],["setpolicyoptions",4]]],[11,"clone","","",35,[[],["basicpolicy",3]]],[11,"clone","","",36,[[],["policycondition",4]]],[11,"clone","","",37,[[],["policyaction",4]]],[11,"clone","","",97,[[],["timerslackpolicy",3]]],[11,"clone","","",38,[[],["status",4]]],[11,"clone","","",40,[[],["threadstatekind",4]]],[11,"clone","","",101,[[],["threadflag",3]]],[11,"clone","","",42,[[],["threadstate",4]]],[11,"clone","zircon_object::vm","",106,[[],["vmarflags",3]]],[11,"clone","","",112,[[],["vmoinfoflags",3]]],[11,"default","zircon_object::dev","",55,[[],["btiinfo",3]]],[11,"default","","",62,[[],["mmiopcieaddressprovider",3]]],[11,"default","","",63,[[],["piopcieaddressprovider",3]]],[11,"default","","",6,[[]]],[11,"default","","",70,[[],["resourceinfo",3]]],[11,"default","zircon_object::ipc","",15,[[],["messagepacket",3]]],[11,"default","","",76,[[],["socketflags",3]]],[11,"default","zircon_object::object","",78,[[],["handlebasicinfo",3]]],[11,"default","","",17,[[],["handleinfo",3]]],[11,"default","","",79,[[],["rights",3]]],[11,"default","","",80,[[],["signal",3]]],[11,"default","","",19,[[]]],[11,"default","zircon_object::signal","",24,[[],["packetguestbell",3]]],[11,"default","","",25,[[],["packetguestmem",3]]],[11,"default","","",26,[[],["packetguestio",3]]],[11,"default","zircon_object::task","",95,[[],["jobinfo",3]]],[11,"default","","",96,[[],["jobpolicy",3]]],[11,"default","","",38,[[]]],[11,"default","","",39,[[],["processinfo",3]]],[11,"default","","",101,[[],["threadflag",3]]],[11,"default","","",42,[[]]],[11,"default","zircon_object::vm","",105,[[],["streaminfo",3]]],[11,"default","","",110,[[],["taskstatsinfo",3]]],[11,"default","","",51,[[],["vmoinfo",3]]],[11,"default","","",112,[[],["vmoinfoflags",3]]],[11,"map","zircon_object::hypervisor","",14,[[["mmuflags",3],["guestphysaddr",6],["hostphysaddr",6]],["result",6]]],[11,"unmap","","",14,[[["guestphysaddr",6]],["result",6]]],[11,"protect","","",14,[[["guestphysaddr",6],["mmuflags",3]],["result",6]]],[11,"query","","",14,[[["guestphysaddr",6]],[["result",6],["hostphysaddr",6]]]],[11,"table_phys","","",14,[[],["hostphysaddr",6]]],[11,"initialize","zircon_object::vm","",114,[[]]],[11,"create","zircon_object::dev","Create a new bus transaction initiator.",54,[[["iommu",3],["u64",15],["arc",3]],["arc",3]]],[11,"get_info","","Get information of BTI.",54,[[],["btiinfo",3]]],[11,"pin","","Pin memory and grant access to it to the BTI.",54,[[["arc",3],["usize",15],["arc",3],["iommuperms",3],["vmobject",3]],[["arc",3],["zxresult",6]]]],[11,"release_quarantine","","Releases all quarantined PMTs.",54,[[]]],[11,"new_virtual","","Create a new virtual interrupt.",56,[[],["arc",3]]],[11,"new_physical","","Create a new physical interrupt.",56,[[["usize",15],["interruptoptions",3]],[["arc",3],["zxresult",6]]]],[11,"new_pci","","Create a new PCI interrupt.",56,[[["arc",3],["u32",15],["bool",15],["ipcinode",8]],[["arc",3],["zxresult",6]]]],[11,"bind","","Bind the interrupt object to a port.",56,[[["arc",3],["u64",15]],["zxresult",6]]],[11,"unbind","","Unbind the interrupt object from a port.",56,[[["arc",3]],["zxresult",6]]],[11,"trigger","","Triggers a virtual interrupt object.",56,[[["i64",15]],["zxresult",6]]],[11,"ack","","Acknowledge the interrupt and re-arm it.",56,[[],["zxresult",6]]],[11,"destroy","","Destroy the interrupt.",56,[[],["zxresult",6]]],[11,"wait","","Wait until the interrupt is triggered.",56,[[["arc",3]]]],[18,"VIRTUAL","","The interrupt is virtual.",57,null],[18,"UNMASK_PREWAIT","","The interrupt should be unmasked before waiting on the …",57,null],[18,"UNMASK_PREWAIT_UNLOCKED","","The same as <strong>INTERRUPT_UNMASK_PREWAIT</strong> except release the …",57,null],[18,"MASK_POSTWAIT","","The interrupt should be masked following waiting.",57,null],[11,"empty","","Returns an empty set of flags",57,[[],["interruptflags",3]]],[11,"all","","Returns the set containing all flags.",57,[[],["interruptflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",57,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",57,[[["u32",15]],[["interruptflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",57,[[["u32",15]],["interruptflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",57,[[["u32",15]],["interruptflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",57,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",57,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",57,[[["interruptflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",57,[[["interruptflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",57,[[["interruptflags",3]]]],[11,"remove","","Removes the specified flags in-place.",57,[[["interruptflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",57,[[["interruptflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",57,[[["interruptflags",3],["bool",15]]]],[18,"REMAP_IRQ","","Remap interrupt request(IRQ).",58,null],[18,"MODE_DEFAULT","","Default mode.",58,null],[18,"MODE_EDGE_LOW","","Falling edge triggered.",58,null],[18,"MODE_EDGE_HIGH","","Rising edge triggered.",58,null],[18,"MODE_LEVEL_LOW","","Low level triggered.",58,null],[18,"MODE_LEVEL_HIGH","","High level triggered.",58,null],[18,"MODE_EDGE_BOTH","","Falling/rising edge triggered.",58,null],[18,"VIRTUAL","","Virtual interrupt.",58,null],[11,"empty","","Returns an empty set of flags",58,[[],["interruptoptions",3]]],[11,"all","","Returns the set containing all flags.",58,[[],["interruptoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",58,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",58,[[["u32",15]],[["option",4],["interruptoptions",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",58,[[["u32",15]],["interruptoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",58,[[["u32",15]],["interruptoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",58,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",58,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",58,[[["interruptoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",58,[[["interruptoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",58,[[["interruptoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",58,[[["interruptoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",58,[[["interruptoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",58,[[["bool",15],["interruptoptions",3]]]],[11,"to_mode","","Extract the mode bits.",58,[[]]],[11,"create","","Create a new <code>IOMMU</code>.",59,[[],["arc",3]]],[11,"is_valid_bus_txn_id","","Check if a <code>bus_txn_id</code> is valid for this IOMMU.",59,[[],["bool",15]]],[11,"minimum_contiguity","","Returns the number of bytes that Map() can guarantee, …",59,[[],["usize",15]]],[11,"aspace_size","","The number of bytes in the address space (UINT64_MAX if …",59,[[],["usize",15]]],[11,"map","","Grant a device access to the range of pages given by […",59,[[["usize",15],["arc",3],["iommuperms",3],["vmobject",3]],["zxresult",6]]],[11,"map_contiguous","","Same as <code>map</code>, but with additional guarantee that this will …",59,[[["usize",15],["arc",3],["iommuperms",3],["vmobject",3]],["zxresult",6]]],[18,"PERM_READ","","Read Permission.",60,null],[18,"PERM_WRITE","","Write Permission.",60,null],[18,"PERM_EXECUTE","","Execute Permission.",60,null],[11,"empty","","Returns an empty set of flags",60,[[],["iommuperms",3]]],[11,"all","","Returns the set containing all flags.",60,[[],["iommuperms",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",60,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",60,[[["u32",15]],[["option",4],["iommuperms",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",60,[[["u32",15]],["iommuperms",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",60,[[["u32",15]],["iommuperms",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",60,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",60,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",60,[[["iommuperms",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",60,[[["iommuperms",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",60,[[["iommuperms",3]]]],[11,"remove","","Removes the specified flags in-place.",60,[[["iommuperms",3]]]],[11,"toggle","","Toggles the specified flags in-place.",60,[[["iommuperms",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",60,[[["bool",15],["iommuperms",3]]]],[11,"add_bus_region","","Add bus region.",61,[[["pciaddrspace",4],["u64",15]],["zxresult",6]]],[11,"sub_bus_region","","Subtract bus region.",61,[[["pciaddrspace",4],["u64",15]],["zxresult",6]]],[11,"set_address_translation_provider","","A PcieAddressProvider translates a BDF address to an …",61,[[["arc",3],["pcieaddressprovider",8]],["zxresult",6]]],[11,"add_root","","Add a root bus to the driver and attempt to scan it for …",61,[[["usize",15],["pciirqswizzlelut",3]],["zxresult",6]]],[11,"start_bus_driver","","Start the bus driver.",61,[[],["zxresult",6]]],[11,"get_nth_device","","Get the “Nth” device.",61,[[["usize",15]],["zxresult",6]]],[11,"get_config","","Get a device’s config.",61,[[["usize",15]],["option",4]]],[11,"link_device_to_upstream","","Link a device to an upstream node.",61,[[["arc",3],["ipcinode",8],["weak",3]]]],[11,"find_legacy_irq_handler","","Find the legacy IRQ handler.",61,[[["u32",15]],[["arc",3],["zxresult",6]]]],[11,"add_ecam","","Add a ECAM region.",62,[[["pciecamregion",3]],["zxresult",6]]],[11,"new","","Create a new PcieDeviceKObject.",64,[[["arc",3],["ipcinode",8]],[["pciedevicekobject",3],["arc",3]]]],[11,"get_bar","","Get PcieBarInfo.",64,[[["u32",15]],[["pciebarinfo",3],["zxresult",6]]]],[11,"map_interrupt","","Map the interrupt to the IRQ.",64,[[["i32",15]],[["arc",3],["zxresult",6]]]],[11,"enable_mmio","","Enable MMIO.",64,[[],["zxresult",6]]],[11,"enable_pio","","Enable PIO.",64,[[],["zxresult",6]]],[11,"enable_master","","Enable bus mastering.",64,[[["bool",15]],["zxresult",6]]],[11,"get_irq_mode_capabilities","","Check whether <code>mode</code> is capable PCI device’s IRQ modes.",64,[[["pcieirqmode",4]],[["pcieirqmodecaps",3],["zxresult",6]]]],[11,"set_irq_mode","","Set IRQ mode.",64,[[["u32",15],["pcieirqmode",4]],["zxresult",6]]],[11,"config_read","","Read the device’s config.",64,[[["usize",15]],[["u32",15],["zxresult",6]]]],[11,"config_write","","Write the device’s config.",64,[[["usize",15],["u32",15]],["zxresult",6]]],[11,"configure_interrupt","zircon_object::dev::pci_init_args","",3,[[],["zxresult",6]]],[11,"encode_addrs","zircon_object::dev","Encode the mapped addresses.",67,[[["bool",15]],[["vec",3],["zxresult",6]]]],[11,"unpin","","Unpin pages and revoke device access to them.",67,[[]]],[18,"EXCLUSIVE","","Exclusive resource.",68,null],[11,"empty","","Returns an empty set of flags",68,[[],["resourceflags",3]]],[11,"all","","Returns the set containing all flags.",68,[[],["resourceflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",68,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",68,[[["u32",15]],[["option",4],["resourceflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",68,[[["u32",15]],["resourceflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",68,[[["u32",15]],["resourceflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",68,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",68,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",68,[[["resourceflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",68,[[["resourceflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",68,[[["resourceflags",3]]]],[11,"remove","","Removes the specified flags in-place.",68,[[["resourceflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",68,[[["resourceflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",68,[[["bool",15],["resourceflags",3]]]],[11,"create","","Create a new <code>Resource</code>.",69,[[["usize",15],["resourcekind",4],["resourceflags",3],["str",15]],["arc",3]]],[11,"validate","","Validate the resource is the given kind or it is the root …",69,[[["resourcekind",4]],["zxresult",6]]],[11,"validate_ranged_resource","","Validate the resource is the given kind or it is the root …",69,[[["usize",15],["resourcekind",4]],["zxresult",6]]],[11,"check_exclusive","","Returns <code>Err(ZxError::INVALID_ARGS)</code> if the resource is not …",69,[[["resourceflags",3]],["zxresult",6]]],[11,"get_info","","Get information of the resource.",69,[[],["resourceinfo",3]]],[11,"new","zircon_object::hypervisor","Create a new Guest.",71,[[],[["arc",3],["zxresult",6]]]],[11,"set_trap","","Sets a trap within a guest, which generates a packet when …",71,[[["u32",15],["usize",15],["option",4],["weak",3],["u64",15]],["zxresult",6]]],[11,"vmar","","Get the VMAR of the Guest.",71,[[],[["vmaddressregion",3],["arc",3]]]],[11,"new","","Create a new VCPU within a guest.",72,[[["arc",3],["guest",3],["u64",15],["arc",3],["thread",3]],[["arc",3],["zxresult",6]]]],[11,"same_thread","","Check whether <code>current_thread</code> is the thread of the VCPU.",72,[[["arc",3]],["bool",15]]],[11,"virtual_interrupt","","Inject a virtual interrupt.",72,[[["u32",15]],["zxresult",6]]],[11,"resume","","Resume execution of the VCPU.",72,[[],[["portpacket",3],["zxresult",6]]]],[11,"read_state","","Read state from the VCPU.",72,[[],[["zxresult",6],["vcpustate",3]]]],[11,"write_state","","Write state to the VCPU.",72,[[["vcpustate",3]],["zxresult",6]]],[11,"write_io_state","","Write IO state to the VCPU.",72,[[["vcpuio",3]],["zxresult",6]]],[11,"create","zircon_object::ipc","Create a channel and return a pair of its endpoints",73,[[]]],[11,"check_and_read","","Read a packet from the channel if check is ok, otherwise …",73,[[],[["messagepacket",3],["zxresult",6]]]],[11,"read","","Read a packet from the channel",73,[[],[["messagepacket",3],["zxresult",6]]]],[11,"write","","Write a packet to the channel",73,[[["messagepacket",3]],["zxresult",6]]],[11,"call","","Send a message to a channel and await a reply.",73,[[["arc",3],["messagepacket",3]]]],[11,"set_txid","","Set txid (the first 4 bytes)",15,[[["u32",15]]]],[11,"get_txid","","Get txid (the first 4 bytes)",15,[[],["u32",15]]],[11,"create","","Create a FIFO.",74,[[["usize",15]]]],[11,"write","","Write data to the FIFO.",74,[[["usize",15]],[["usize",15],["zxresult",6]]]],[11,"read","","Read data from the FIFO.",74,[[["usize",15]],[["usize",15],["zxresult",6]]]],[18,"SHUTDOWN_WRITE","","Via this option to <code>socket_shutdown()</code>, one end of the …",76,null],[18,"SHUTDOWN_READ","","Via this option to <code>socket_shutdown()</code>, one end of the …",76,null],[18,"SHUTDOWN_MASK","","Valid flags of <code>socket_shutdown()</code>.",76,null],[18,"DATAGRAM","","Create a datagram socket. See <code>read</code> and <code>write</code> for details.",76,null],[18,"CREATE_MASK","","Valid flags of <code>socket_create()</code>.",76,null],[18,"SOCKET_PEEK","","Leave the message in the socket.",76,null],[11,"empty","","Returns an empty set of flags",76,[[],["socketflags",3]]],[11,"all","","Returns the set containing all flags.",76,[[],["socketflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",76,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",76,[[["u32",15]],[["option",4],["socketflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",76,[[["u32",15]],["socketflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",76,[[["u32",15]],["socketflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",76,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",76,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",76,[[["socketflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",76,[[["socketflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",76,[[["socketflags",3]]]],[11,"remove","","Removes the specified flags in-place.",76,[[["socketflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",76,[[["socketflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",76,[[["bool",15],["socketflags",3]]]],[11,"create","","Create a socket.",75,[[["u32",15]],["zxresult",6]]],[11,"write","","Write data to the socket. If successful, the number of …",75,[[],[["usize",15],["zxresult",6]]]],[11,"read","","Read data from the socket. If successful, the number of …",75,[[["bool",15]],[["usize",15],["zxresult",6]]]],[11,"get_info","","Get information of the socket.",75,[[],["socketinfo",3]]],[11,"shutdown","","Prevent reading or writing.",75,[[["bool",15]],["zxresult",6]]],[11,"set_read_threshold","","Set the read threshold of the socket.",75,[[["usize",15]],["zxresult",6]]],[11,"set_write_threshold","","Set the write threshold of the socket.",75,[[["usize",15]],["zxresult",6]]],[11,"get_rx_tx_threshold","","Get the read and write thresholds of the socket.",75,[[]]],[11,"new","zircon_object::object","Create a new handle referring to the given object with …",16,[[["arc",3],["kernelobject",8],["rights",3]]]],[11,"get_info","","Get information about the provided handle and the object …",16,[[],["handlebasicinfo",3]]],[11,"get_handle_info","","Get information about the handle itself.",16,[[],["handleinfo",3]]],[18,"DUPLICATE","","Allows handle duplication via <code>zx_handle_duplicate()</code>.",79,null],[18,"TRANSFER","","Allows handle transfer via <code>zx_channel_write()</code>.",79,null],[18,"READ","","Allows reading of data from containers (channels, …",79,null],[18,"WRITE","","Allows writing of data to containers (channels, sockets, …",79,null],[18,"EXECUTE","","Allows mapping as executable if <code>Rights::MAP</code> is also …",79,null],[18,"MAP","","Allows mapping of a VM object into an address space.",79,null],[18,"GET_PROPERTY","","Allows property inspection via <code>zx_object_get_property()</code>.",79,null],[18,"SET_PROPERTY","","Allows property modification via <code>zx_object_set_property()</code>.",79,null],[18,"ENUMERATE","","Allows enumerating child objects via <code>zx_object_get_info()</code> …",79,null],[18,"DESTROY","","Allows termination of task objects via <code>zx_task_kill()</code>.",79,null],[18,"SET_POLICY","","Allows policy modification via <code>zx_job_set_policy()</code>.",79,null],[18,"GET_POLICY","","Allows policy inspection via <code>zx_job_get_policy()</code>.",79,null],[18,"SIGNAL","","Allows use of <code>zx_object_signal()</code>.",79,null],[18,"SIGNAL_PEER","","Allows use of <code>zx_object_signal_peer()</code>.",79,null],[18,"WAIT","","Allows use of <code>zx_object_wait_one()</code>, <code>zx_object_wait_many()</code>…",79,null],[18,"INSPECT","","Allows inspection via <code>zx_object_get_info()</code>.",79,null],[18,"MANAGE_JOB","","Allows creation of processes, subjobs, etc.",79,null],[18,"MANAGE_PROCESS","","Allows creation of threads, etc.",79,null],[18,"MANAGE_THREAD","","Allows suspending/resuming threads, etc.",79,null],[18,"APPLY_PROFILE","","Not used.",79,null],[18,"SAME_RIGHTS","","Used to duplicate a handle with the same rights.",79,null],[18,"BASIC","","TRANSFER | DUPLICATE | WAIT | INSPECT",79,null],[18,"IO","","READ ｜ WRITE",79,null],[18,"PROPERTY","","GET_PROPERTY ｜ SET_PROPERTY",79,null],[18,"POLICY","","GET_POLICY ｜ SET_POLICY",79,null],[18,"DEFAULT_CHANNEL","","BASIC & !Self::DUPLICATE | IO | SIGNAL | SIGNAL_PEER",79,null],[18,"DEFAULT_PROCESS","","BASIC | IO | PROPERTY | ENUMERATE | DESTROY | SIGNAL | …",79,null],[18,"DEFAULT_THREAD","","BASIC | IO | PROPERTY | DESTROY | SIGNAL | MANAGE_THREAD",79,null],[18,"DEFAULT_VMO","","BASIC | IO | PROPERTY | MAP | SIGNAL",79,null],[18,"DEFAULT_VMAR","","BASIC | WAIT",79,null],[18,"DEFAULT_JOB","","BASIC | IO | PROPERTY | POLICY | ENUMERATE | DESTROY | …",79,null],[18,"DEFAULT_RESOURCE","","TRANSFER | DUPLICATE | WRITE | INSPECT",79,null],[18,"DEFAULT_DEBUGLOG","","BASIC | WRITE | SIGNAL",79,null],[18,"DEFAULT_SUSPEND_TOKEN","","TRANSFER | INSPECT",79,null],[18,"DEFAULT_PORT","","(BASIC & !WAIT) | IO",79,null],[18,"DEFAULT_TIMER","","BASIC | WRITE | SIGNAL",79,null],[18,"DEFAULT_EVENT","","BASIC | SIGNAL",79,null],[18,"DEFAULT_EVENTPAIR","","BASIC | SIGNAL ｜ SIGNAL_PEER",79,null],[18,"DEFAULT_FIFO","","BASIC | IO | SIGNAL | SIGNAL_PEER",79,null],[18,"DEFAULT_SOCKET","","BASIC | IO | PROPERTY | SIGNAL | SIGNAL_PEER",79,null],[18,"DEFAULT_STREAM","","BASIC | PROPERTY | SIGNAL",79,null],[18,"DEFAULT_BTI","","(BASIC & !WAIT) | IO | MAP",79,null],[18,"DEFAULT_INTERRUPT","","BASIC | IO | SIGNAL",79,null],[18,"DEFAULT_DEVICE","","BASIC | IO",79,null],[18,"DEFAULT_PCI_INTERRUPT","","BASIC | IO | SIGNAL",79,null],[18,"DEFAULT_EXCEPTION","","TRANSFER | PROPERTY | INSPECT",79,null],[18,"DEFAULT_GUEST","","TRANSFER | DUPLICATE | WRITE | INSPECT | MANAGE_PROCESS",79,null],[18,"DEFAULT_VCPU","","BASIC | IO | EXECUTE | SIGNAL",79,null],[11,"empty","","Returns an empty set of flags",79,[[],["rights",3]]],[11,"all","","Returns the set containing all flags.",79,[[],["rights",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",79,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",79,[[["u32",15]],[["option",4],["rights",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",79,[[["u32",15]],["rights",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",79,[[["u32",15]],["rights",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",79,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",79,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",79,[[["rights",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",79,[[["rights",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",79,[[["rights",3]]]],[11,"remove","","Removes the specified flags in-place.",79,[[["rights",3]]]],[11,"toggle","","Toggles the specified flags in-place.",79,[[["rights",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",79,[[["bool",15],["rights",3]]]],[18,"READABLE","","",80,null],[18,"WRITABLE","","",80,null],[18,"PEER_CLOSED","","",80,null],[18,"SIGNALED","","",80,null],[18,"HANDLE_CLOSED","","",80,null],[18,"KERNEL_ALL","","",80,null],[18,"USER_ALL","","",80,null],[18,"CLOCK_STARTED","","",80,null],[18,"SOCKET_PEER_WRITE_DISABLED","","",80,null],[18,"SOCKET_WRITE_DISABLED","","",80,null],[18,"SOCKET_CONTROL_READABLE","","",80,null],[18,"SOCKET_CONTROL_WRITABLE","","",80,null],[18,"SCOEKT_ACCEPT","","",80,null],[18,"SOCKET_SHARE","","",80,null],[18,"SOCKET_READ_THRESHOLD","","",80,null],[18,"SOCKET_WRITE_THRESHOLD","","",80,null],[18,"TASK_TERMINATED","","",80,null],[18,"JOB_TERMINATED","","",80,null],[18,"JOB_NO_JOBS","","",80,null],[18,"JOB_NO_PROCESSES","","",80,null],[18,"PROCESS_TERMINATED","","",80,null],[18,"THREAD_TERMINATED","","",80,null],[18,"THREAD_RUNNING","","",80,null],[18,"THREAD_SUSPENDED","","",80,null],[18,"VMO_ZERO_CHILDREN","","",80,null],[18,"INTERRUPT_SIGNAL","","",80,null],[18,"SIGCHLD","","",80,null],[18,"USER_SIGNAL_0","","",80,null],[18,"USER_SIGNAL_1","","",80,null],[18,"USER_SIGNAL_2","","",80,null],[18,"USER_SIGNAL_3","","",80,null],[18,"USER_SIGNAL_4","","",80,null],[18,"USER_SIGNAL_5","","",80,null],[18,"USER_SIGNAL_6","","",80,null],[18,"USER_SIGNAL_7","","",80,null],[11,"empty","","Returns an empty set of flags",80,[[],["signal",3]]],[11,"all","","Returns the set containing all flags.",80,[[],["signal",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",80,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",80,[[["u32",15]],[["signal",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",80,[[["u32",15]],["signal",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",80,[[["u32",15]],["signal",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",80,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",80,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",80,[[["signal",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",80,[[["signal",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",80,[[["signal",3]]]],[11,"remove","","Removes the specified flags in-place.",80,[[["signal",3]]]],[11,"toggle","","Toggles the specified flags in-place.",80,[[["signal",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",80,[[["signal",3],["bool",15]]]],[11,"verify_user_signal","","Verify whether <code>number</code> only sets the bits specified in …",80,[[["signal",3],["u32",15]],[["signal",3],["zxresult",6]]]],[11,"new","zircon_object::signal","Create a new <code>Event</code>.",81,[[],["arc",3]]],[11,"create","","Create a pair of event.",82,[[]]],[11,"peer","","Get the peer event.",82,[[],[["arc",3],["zxresult",6]]]],[11,"new","","Create a new Futex.",83,[[["atomici32",3]],["arc",3]]],[11,"wait","","Wait on a futex.",83,[[["arc",3],["i32",15]]]],[11,"wake","","Wake some number of threads waiting on a futex.",83,[[["usize",15]],["usize",15]]],[11,"owner","","Get the owner of the futex.",83,[[],[["option",4],["arc",3]]]],[11,"wait_with_owner","","Wait on a futex.",83,[[["arc",3],["arc",3],["i32",15],["option",4]]]],[11,"wake_single_owner","","Wake exactly one thread from the futex wait queue.",83,[[]]],[11,"requeue","","Requeuing is a generalization of waking.",83,[[["usize",15],["arc",3],["arc",3],["i32",15],["option",4]],["zxresult",6]]],[11,"new","","Create a new <code>Port</code>.",88,[[["u32",15]],[["arc",3],["zxresult",6]]]],[11,"push","","Push a <code>packet</code> into the port.",88,[[]]],[11,"push_user","","Push a <code>User</code> type <code>packet</code> into the port.",88,[[],["zxresult",6]]],[11,"wait","","Asynchronous wait until at least one packet is available, …",88,[[["arc",3]]]],[11,"can_bind_to_interrupt","","Check whether the port can be bound to an interrupt.",88,[[],["bool",15]]],[18,"BIND_TO_INTERUPT","","Allow this port to be bound to an interrupt.",89,null],[11,"empty","","Returns an empty set of flags",89,[[],["portoptions",3]]],[11,"all","","Returns the set containing all flags.",89,[[],["portoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",89,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",89,[[["u32",15]],[["portoptions",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",89,[[["u32",15]],["portoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",89,[[["u32",15]],["portoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",89,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",89,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",89,[[["portoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",89,[[["portoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",89,[[["portoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",89,[[["portoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",89,[[["portoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",89,[[["portoptions",3],["bool",15]]]],[11,"new","","Create a new <code>Timer</code>.",90,[[],["arc",3]]],[11,"with_slack","","Create a new <code>Timer</code> with slack.",90,[[["slack",4]],["arc",3]]],[11,"one_shot","","Create a one-shot timer.",90,[[["duration",3]],["arc",3]]],[11,"set","","Starts a one-shot timer that will fire when <code>deadline</code> …",90,[[["arc",3],["duration",3]]]],[11,"cancel","","Cancel the pending timer started by <code>set</code>.",90,[[]]],[11,"create_channel","zircon_object::task","Create an exception channel endpoint for user.",91,[[["rights",3]],[["arc",3],["zxresult",6]]]],[11,"is_synth","","Is the exception type generated by kernel instead of the …",33,[[],["bool",15]]],[11,"get_thread_handle","","Create a handle for the exception’s thread.",93,[[],["handle",3]]],[11,"get_process_handle","","Create a handle for the exception’s process.",93,[[],[["zxresult",6],["handle",3]]]],[11,"state","","Get whether closing the exception handle will finish …",93,[[],["u32",15]]],[11,"set_state","","Set whether closing the exception handle will finish …",93,[[["u32",15]],["zxresult",6]]],[11,"strategy","","Get whether the debugger gets a ‘second chance’ at …",93,[[],["u32",15]]],[11,"set_strategy","","Set whether the debugger gets a ‘second chance’ at …",93,[[["u32",15]],["zxresult",6]]],[11,"root","","Create the root job.",94,[[],["arc",3]]],[11,"create_child","","Create a new child job object.",94,[[["arc",3]],[["arc",3],["zxresult",6]]]],[11,"policy","","Get the policy of the job.",94,[[],["jobpolicy",3]]],[11,"parent","","Get the parent job.",94,[[],[["arc",3],["option",4]]]],[11,"set_policy_basic","","Sets one or more security and/or resource policies to an …",94,[[["setpolicyoptions",4]],["zxresult",6]]],[11,"set_policy_timer_slack","","Sets timer slack policy to an empty job.",94,[[["timerslackpolicy",3]],["zxresult",6]]],[11,"get_info","","Get information of this job.",94,[[],["jobinfo",3]]],[11,"check_root_job","","Check whether this job is root job.",94,[[],["zxresult",6]]],[11,"process_ids","","Get KoIDs of Processes.",94,[[],[["koid",6],["vec",3]]]],[11,"children_ids","","Get KoIDs of children Jobs.",94,[[],[["koid",6],["vec",3]]]],[11,"is_empty","","Return true if this job has no processes and no child …",94,[[],["bool",15]]],[11,"get_action","","Get the action of a policy <code>condition</code>.",96,[[["policycondition",4]],[["option",4],["policyaction",4]]]],[11,"apply","","Apply a basic policy.",96,[[["basicpolicy",3]]]],[11,"merge","","Merge the policy with <code>parent</code>’s.",96,[[]]],[11,"create","","Create a new process in the <code>job</code>.",98,[[["arc",3],["str",15]],[["arc",3],["zxresult",6]]]],[11,"create_with_ext","","Create a new process with extension info.",98,[[["arc",3],["str",15]],[["arc",3],["zxresult",6]]]],[11,"start","","Start the first thread in the process.",98,[[["usize",15],["handle",3],["threadfn",6],["arc",3],["option",4]],["zxresult",6]]],[11,"exit","","Exit current process with <code>retcode</code>. The process do not …",98,[[["i64",15]]]],[11,"check_policy","","Check whether <code>condition</code> is allowed in the parent job’s …",98,[[["policycondition",4]],["zxresult",6]]],[11,"set_critical_at_job","","Set a process as critical to the job.",98,[[["bool",15],["arc",3]],["zxresult",6]]],[11,"status","","Get process status.",98,[[],["status",4]]],[11,"ext","","Get the extension.",98,[[],["box",3]]],[11,"vmar","","Get the <code>VmAddressRegion</code> of the process.",98,[[],[["vmaddressregion",3],["arc",3]]]],[11,"job","","Get the job of the process.",98,[[],[["job",3],["arc",3]]]],[11,"add_handle","","Add a handle to the process",98,[[["handle",3]],["handlevalue",6]]],[11,"add_handles","","Add all handles to the process",98,[[["handle",3],["vec",3]],[["vec",3],["handlevalue",6]]]],[11,"remove_handle","","Remove a handle from the process",98,[[["handlevalue",6]],[["zxresult",6],["handle",3]]]],[11,"remove_handles","","Remove all handles from the process.",98,[[],[["vec",3],["zxresult",6]]]],[11,"remove_object","","Remove a handle referring to a kernel object of the given …",98,[[["handlevalue",6]],[["arc",3],["zxresult",6]]]],[11,"get_futex","","Get a futex from the process",98,[[["atomici32",3]],[["futex",3],["arc",3]]]],[11,"dup_handle_operating_rights","","Duplicate a handle with new <code>rights</code>, return the new handle …",98,[[["handlevalue",6]],[["zxresult",6],["handlevalue",6]]]],[11,"get_object_with_rights","","Get the kernel object corresponding to this <code>handle_value</code>, …",98,[[["rights",3],["handlevalue",6]],[["arc",3],["zxresult",6]]]],[11,"get_object_and_rights","","Get the kernel object corresponding to this <code>handle_value</code> …",98,[[["handlevalue",6]],["zxresult",6]]],[11,"get_dyn_object_with_rights","","Get the kernel object corresponding to this <code>handle_value</code>, …",98,[[["rights",3],["handlevalue",6]],[["arc",3],["zxresult",6]]]],[11,"get_dyn_object_and_rights","","Get the kernel object corresponding to this <code>handle_value</code> …",98,[[["handlevalue",6]],["zxresult",6]]],[11,"get_object","","Get the kernel object corresponding to this <code>handle_value</code>",98,[[["handlevalue",6]],[["arc",3],["zxresult",6]]]],[11,"get_handle_info","","Get the handle’s information corresponding to …",98,[[["handlevalue",6]],[["zxresult",6],["handlebasicinfo",3]]]],[11,"get_info","","Get information of this process.",98,[[],["processinfo",3]]],[11,"set_debug_addr","","Set the debug address.",98,[[["usize",15]]]],[11,"get_debug_addr","","Get the debug address.",98,[[],["usize",15]]],[11,"set_dyn_break_on_load","","Set the address where the dynamic loader will issue a …",98,[[["usize",15]]]],[11,"get_dyn_break_on_load","","Get the address where the dynamic loader will issue a …",98,[[],["usize",15]]],[11,"get_cancel_token","","Get an one-shot <code>Receiver</code> for receiving cancel message of …",98,[[["handlevalue",6]],[["zxresult",6],["receiver",3]]]],[11,"thread_ids","","Get KoIDs of Threads.",98,[[],[["koid",6],["vec",3]]]],[11,"wait_for_exit","","Wait for process exit and get return code.",98,[[["arc",3]]]],[11,"create","","Create a <code>SuspendToken</code> which can suspend the given task.",99,[[["arc",3]],["arc",3]]],[18,"VCPU","","The thread currently has a VCPU.",101,null],[11,"empty","","Returns an empty set of flags",101,[[],["threadflag",3]]],[11,"all","","Returns the set containing all flags.",101,[[],["threadflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",101,[[],["usize",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",101,[[["usize",15]],[["option",4],["threadflag",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",101,[[["usize",15]],["threadflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",101,[[["usize",15]],["threadflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",101,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",101,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",101,[[["threadflag",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",101,[[["threadflag",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",101,[[["threadflag",3]]]],[11,"remove","","Removes the specified flags in-place.",101,[[["threadflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",101,[[["threadflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",101,[[["bool",15],["threadflag",3]]]],[11,"create","","Create a new thread.",100,[[["arc",3],["str",15]],[["arc",3],["zxresult",6]]]],[11,"create_with_ext","","Create a new thread with extension info.",100,[[["arc",3],["str",15]],[["arc",3],["zxresult",6]]]],[11,"proc","","Get the process.",100,[[],["arc",3]]],[11,"ext","","Get the extension info.",100,[[],["box",3]]],[11,"start","","Start execution on the thread.",100,[[["arc",3],["usize",15],["threadfn",6]],["zxresult",6]]],[11,"start_with_regs","","Start execution with given registers.",100,[[["arc",3],["generalregs",3],["threadfn",6]],["zxresult",6]]],[11,"read_state","","Read one aspect of thread state.",100,[[["threadstatekind",4]],[["usize",15],["zxresult",6]]]],[11,"write_state","","Write one aspect of thread state.",100,[[["threadstatekind",4]],["zxresult",6]]],[11,"get_thread_info","","Get the thread’s information.",100,[[],["threadinfo",3]]],[11,"get_thread_exception_info","","Get the thread’s exception report.",100,[[],[["exceptionreport",3],["zxresult",6]]]],[11,"state","","Get the thread state.",100,[[],["threadstate",4]]],[11,"time_add","","Add the parameter to the time this thread has run on cpu.",100,[[["u128",15]]]],[11,"get_time","","Get the time this thread has run on cpu.",100,[[],["u64",15]]],[11,"is_first_thread","","Whether this thread is the first thread of a process.",100,[[],["bool",15]]],[11,"flags","","Get the thread’s flags.",100,[[],["threadflag",3]]],[11,"update_flags","","Apply <code>f</code> to the thread’s flags.",100,[[]]],[11,"set_fsbase","","Set the thread local fsbase register on x86_64.",100,[[["usize",15]],["zxresult",6]]],[11,"set_gsbase","","Set the thread local gsbase register on x86_64.",100,[[["usize",15]],["zxresult",6]]],[11,"exit","","Exit the current thread.",102,[[]]],[11,"wait_for_run","","Wait until the thread is ready to run (not suspended), …",102,[[]]],[11,"end_running","","The thread ends running and takes back the context.",102,[[["box",3],["usercontext",3]]]],[11,"with_context","","Access saved context of current thread.",102,[[]]],[11,"blocking_run","","Run async future and change state while blocking.",102,[[["duration",3],["option",4],["threadstate",4],["receiver",3]]]],[11,"handle_exception","","Create an exception on this thread and wait for the …",102,[[["exceptiontype",4]]]],[11,"create","zircon_object::vm","Create a stream from a VMO",104,[[["usize",15],["u32",15],["arc",3],["vmobject",3]],["arc",3]]],[11,"read","","Read data from the stream at the current seek offset",104,[[],[["usize",15],["zxresult",6]]]],[11,"read_at","","Read data from the stream at a given offset",104,[[["usize",15]],[["usize",15],["zxresult",6]]]],[11,"write","","write data to the stream at the current seek offset or …",104,[[["bool",15]],[["usize",15],["zxresult",6]]]],[11,"write_at","","Write data to the stream at a given offset",104,[[["usize",15]],[["usize",15],["zxresult",6]]]],[11,"seek","","Modify the current seek offset of the stream",104,[[["isize",15],["seekorigin",4]],[["usize",15],["zxresult",6]]]],[11,"get_info","","Get information of the socket.",104,[[],["streaminfo",3]]],[18,"COMPACT","","When randomly allocating subregions, reduce sprawl by …",106,null],[18,"SPECIFIC","","Request that the new region be at the specified offset in …",106,null],[18,"SPECIFIC_OVERWRITE","","Like SPECIFIC, but permits overwriting existing mappings. …",106,null],[18,"CAN_MAP_SPECIFIC","","Allow VmMappings to be created inside the new region with …",106,null],[18,"CAN_MAP_READ","","Allow VmMappings to be created inside the region with …",106,null],[18,"CAN_MAP_WRITE","","Allow VmMappings to be created inside the region with …",106,null],[18,"CAN_MAP_EXECUTE","","Allow VmMappings to be created inside the region with …",106,null],[18,"REQUIRE_NON_RESIZABLE","","Require that VMO backing the mapping is non-resizable.",106,null],[18,"ALLOW_FAULTS","","Treat the offset as an upper limit when allocating a VMO …",106,null],[18,"CAN_MAP_RXW","","Allow VmMappings to be created inside the region with …",106,null],[18,"ROOT_FLAGS","","Creation flags for root VmAddressRegion",106,null],[11,"empty","","Returns an empty set of flags",106,[[],["vmarflags",3]]],[11,"all","","Returns the set containing all flags.",106,[[],["vmarflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",106,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",106,[[["u32",15]],[["option",4],["vmarflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",106,[[["u32",15]],["vmarflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",106,[[["u32",15]],["vmarflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",106,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",106,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",106,[[["vmarflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",106,[[["vmarflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",106,[[["vmarflags",3]]]],[11,"remove","","Removes the specified flags in-place.",106,[[["vmarflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",106,[[["vmarflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",106,[[["bool",15],["vmarflags",3]]]],[11,"new_root","","Create a new root VMAR.",107,[[],["arc",3]]],[11,"new_kernel","","Create a kernel root VMAR.",107,[[],["arc",3]]],[11,"new_guest","","Create a VMAR for guest physical memory.",107,[[],["arc",3]]],[11,"allocate_at","","Create a child VMAR at the <code>offset</code>.",107,[[["arc",3],["usize",15],["vmarflags",3]],[["arc",3],["zxresult",6]]]],[11,"allocate","","Create a child VMAR with optional <code>offset</code>.",107,[[["arc",3],["usize",15],["vmarflags",3],["option",4]],[["arc",3],["zxresult",6]]]],[11,"map_at","","Map the <code>vmo</code> into this VMAR at given <code>offset</code>.",107,[[["usize",15],["arc",3],["vmobject",3],["mmuflags",3]],[["zxresult",6],["virtaddr",6]]]],[11,"map","","Map the <code>vmo</code> into this VMAR.",107,[[["usize",15],["mmuflags",3],["arc",3],["option",4],["vmobject",3]],[["zxresult",6],["virtaddr",6]]]],[11,"map_ext","","Map the <code>vmo</code> into this VMAR.",107,[[["usize",15],["mmuflags",3],["arc",3],["bool",15],["option",4],["vmobject",3]],[["zxresult",6],["virtaddr",6]]]],[11,"unmap","","Unmaps all VMO mappings and destroys all sub-regions …",107,[[["usize",15],["virtaddr",6]],["zxresult",6]]],[11,"protect","","Change protections on a subset of the region of memory in …",107,[[["usize",15],["mmuflags",3]],["zxresult",6]]],[11,"destroy","","Unmap all mappings within the VMAR, and destroy all …",107,[[["arc",3]],["zxresult",6]]],[11,"clear","","Unmap all mappings and destroy all sub-regions of VMAR.",107,[[],["zxresult",6]]],[11,"table_phys","","Get physical address of the underlying page table.",107,[[],["physaddr",6]]],[11,"addr","","Get start address of this VMAR.",107,[[],["usize",15]]],[11,"is_dead","","Whether this VMAR is dead.",107,[[],["bool",15]]],[11,"is_alive","","Whether this VMAR is alive.",107,[[],["bool",15]]],[11,"get_info","","Get information of this VmAddressRegion",107,[[],["vmarinfo",3]]],[11,"get_flags","","Get VmarFlags of this VMAR.",107,[[],["vmarflags",3]]],[11,"dump","","Dump all mappings recursively.",107,[[]]],[11,"vdso_base_addr","","Get base address of vdso.",107,[[],[["usize",15],["option",4]]]],[11,"handle_page_fault","","Handle page fault happened on this VMAR.",107,[[["virtaddr",6],["mmuflags",3]],["zxresult",6]]],[11,"fork_from","","Clone the entire address space and VMOs from source VMAR. …",107,[[["arc",3]],["zxresult",6]]],[11,"get_task_stats","","Returns statistics about memory used by a task.",107,[[],["taskstatsinfo",3]]],[11,"read_memory","","Read from address space.",107,[[["usize",15]],[["usize",15],["zxresult",6]]]],[11,"write_memory","","Write to address space.",107,[[["usize",15]],[["usize",15],["zxresult",6]]]],[11,"find_mapping","","Find mapping of vaddr",107,[[["usize",15]],[["arc",3],["option",4]]]],[11,"get_flags","","Get MMUFlags of this VmMapping.",109,[[["usize",15]],[["zxresult",6],["mmuflags",3]]]],[11,"append_mapping","","Append a mapping to the VMO’s mapping list.",50,[[["vmmapping",3],["weak",3]]]],[11,"remove_mapping","","Remove a mapping from the VMO’s mapping list.",50,[[["vmmapping",3],["weak",3]]]],[11,"pin","","Pin the given range of the VMO.",50,[[["usize",15]],["zxresult",6]]],[11,"unpin","","Unpin the given range of the VMO.",50,[[["usize",15]],["zxresult",6]]],[11,"is_contiguous","","Returns true if the object is backed by a contiguous …",50,[[],["bool",15]]],[11,"is_paged","","Returns true if the object is backed by RAM.",50,[[],["bool",15]]],[11,"new_paged","","Create a new VMO backing on physical memory allocated in …",111,[[["usize",15]],["arc",3]]],[11,"new_paged_with_resizable","","Create a new VMO, which can be resizable, backing on …",111,[[["bool",15],["usize",15]],["arc",3]]],[11,"new_physical","","Create a new VMO representing a piece of contiguous …",111,[[["usize",15],["physaddr",6]],["arc",3]]],[11,"new_contiguous","","Create a VM object referring to a specific contiguous …",111,[[["usize",15]],[["arc",3],["zxresult",6]]]],[11,"create_child","","Create a child VMO.",111,[[["arc",3],["usize",15],["bool",15]],[["arc",3],["zxresult",6]]]],[11,"create_slice","","Create a child slice as an VMO",111,[[["arc",3],["usize",15]],[["arc",3],["zxresult",6]]]],[11,"set_len","","Set the length of this VMO if resizable.",111,[[["usize",15]],["zxresult",6]]],[11,"set_content_size_and_resize","","Set the size of the content stored in the VMO in bytes, …",111,[[["usize",15]],[["usize",15],["zxresult",6]]]],[11,"content_size","","Get the size of the content stored in the VMO in bytes.",111,[[],["usize",15]]],[11,"set_content_size","","Get the size of the content stored in the VMO in bytes.",111,[[["usize",15]],["zxresult",6]]],[11,"get_info","","Get information of this VMO.",111,[[],["vmoinfo",3]]],[11,"set_cache_policy","","Set the cache policy.",111,[[["cachepolicy",4]],["zxresult",6]]],[11,"append_mapping","","Append a mapping to the VMO’s mapping list.",111,[[["vmmapping",3],["weak",3]]]],[11,"remove_mapping","","Remove a mapping from the VMO’s mapping list.",111,[[["vmmapping",3],["weak",3]]]],[11,"share_count","","Returns an estimate of the number of unique VmAspaces …",111,[[],["usize",15]]],[11,"is_resizable","","Returns true if the object size can be changed.",111,[[],["bool",15]]],[11,"is_contiguous","","Returns true if the object is backed by a contiguous …",111,[[],["bool",15]]],[18,"TYPE_PHYSICAL","","The VMO points to a physical address range, and does not …",112,null],[18,"TYPE_PAGED","","The VMO is backed by RAM, consuming memory. Mutually …",112,null],[18,"RESIZABLE","","The VMO is resizable.",112,null],[18,"IS_COW_CLONE","","The VMO is a child, and is a copy-on-write clone.",112,null],[18,"VIA_HANDLE","","When reading a list of VMOs pointed to by a process, …",112,null],[18,"VIA_MAPPING","","When reading a list of VMOs pointed to by a process, …",112,null],[18,"PAGER_BACKED","","The VMO is a pager owned VMO created by …",112,null],[18,"CONTIGUOUS","","The VMO is contiguous.",112,null],[11,"empty","","Returns an empty set of flags",112,[[],["vmoinfoflags",3]]],[11,"all","","Returns the set containing all flags.",112,[[],["vmoinfoflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",112,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",112,[[["u32",15]],[["option",4],["vmoinfoflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",112,[[["u32",15]],["vmoinfoflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",112,[[["u32",15]],["vmoinfoflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",112,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",112,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",112,[[["vmoinfoflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",112,[[["vmoinfoflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",112,[[["vmoinfoflags",3]]]],[11,"remove","","Removes the specified flags in-place.",112,[[["vmoinfoflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",112,[[["vmoinfoflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",112,[[["bool",15],["vmoinfoflags",3]]]],[18,"CACHE_1","","",113,null],[18,"CACHE_2","","",113,null],[18,"READ","","",113,null],[18,"WRITE","","",113,null],[18,"EXECUTE","","",113,null],[18,"USER","","",113,null],[18,"RXW","","",113,null],[11,"empty","","Returns an empty set of flags",113,[[],["mmuflags",3]]],[11,"all","","Returns the set containing all flags.",113,[[],["mmuflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",113,[[],["usize",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",113,[[["usize",15]],[["mmuflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",113,[[["usize",15]],["mmuflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",113,[[["usize",15]],["mmuflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",113,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",113,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",113,[[["mmuflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",113,[[["mmuflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",113,[[["mmuflags",3]]]],[11,"remove","","Removes the specified flags in-place.",113,[[["mmuflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",113,[[["mmuflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",113,[[["bool",15],["mmuflags",3]]]]],"p":[[3,"DebugLog"],[4,"Severity"],[3,"PciInitArgsIrqs"],[3,"PciInitArgsHeader"],[3,"PciInitArgsAddrWindows"],[3,"PcieDeviceInfo"],[4,"PcieIrqMode"],[4,"PciAddrSpace"],[3,"PciEcamRegion"],[4,"ResourceKind"],[4,"TrapKind"],[3,"VcpuIo"],[4,"VcpuReadWriteKind"],[3,"VcpuState"],[3,"VmmPageTable"],[3,"MessagePacket"],[3,"Handle"],[3,"HandleInfo"],[8,"KernelObject"],[3,"KObjectBase"],[3,"DummyObject"],[3,"PortPacket"],[4,"PacketType"],[3,"PacketSignal"],[3,"PacketGuestBell"],[3,"PacketGuestMem"],[3,"PacketGuestIo"],[4,"PacketGuestVcpuType"],[3,"PacketGuestVcpu"],[3,"PacketInterrupt"],[3,"PortPacketRepr"],[4,"PayloadRepr"],[4,"Slack"],[4,"ExceptionType"],[4,"SetPolicyOptions"],[3,"BasicPolicy"],[4,"PolicyCondition"],[4,"PolicyAction"],[4,"Status"],[3,"ProcessInfo"],[4,"ThreadStateKind"],[8,"IntoResult"],[4,"ThreadState"],[8,"Task"],[8,"VmarExt"],[8,"ElfExt"],[3,"KCounter"],[3,"KCounterDescriptor"],[3,"KCounterDescriptorArray"],[4,"SeekOrigin"],[8,"VMObjectTrait"],[3,"VmoInfo"],[4,"CachePolicy"],[4,"ZxError"],[3,"BusTransactionInitiator"],[3,"BtiInfo"],[3,"Interrupt"],[3,"InterruptFlags"],[3,"InterruptOptions"],[3,"Iommu"],[3,"IommuPerms"],[3,"PCIeBusDriver"],[3,"MmioPcieAddressProvider"],[3,"PioPcieAddressProvider"],[3,"PcieDeviceKObject"],[3,"PciIrqSwizzleLut"],[3,"MappedEcamRegion"],[3,"PinnedMemoryToken"],[3,"ResourceFlags"],[3,"Resource"],[3,"ResourceInfo"],[3,"Guest"],[3,"Vcpu"],[3,"Channel"],[3,"Fifo"],[3,"Socket"],[3,"SocketFlags"],[3,"SocketInfo"],[3,"HandleBasicInfo"],[3,"Rights"],[3,"Signal"],[3,"Event"],[3,"EventPair"],[3,"Futex"],[19,"Payload"],[19,"PacketGuestVcpuData"],[3,"PacketGuestVcpuInterrupt"],[3,"PacketGuestVcpuStartup"],[3,"Port"],[3,"PortOptions"],[3,"Timer"],[3,"Exceptionate"],[3,"ExceptionReport"],[3,"ExceptionObject"],[3,"Job"],[3,"JobInfo"],[3,"JobPolicy"],[3,"TimerSlackPolicy"],[3,"Process"],[3,"SuspendToken"],[3,"Thread"],[3,"ThreadFlag"],[3,"CurrentThread"],[3,"ThreadInfo"],[3,"Stream"],[3,"StreamInfo"],[3,"VmarFlags"],[3,"VmAddressRegion"],[3,"VmarInfo"],[3,"VmMapping"],[3,"TaskStatsInfo"],[3,"VmObject"],[3,"VmoInfoFlags"],[3,"MMUFlags"],[3,"KERNEL_ASPACE"],[6,"ZxResult"]]},\
"zircon_syscall":{"doc":"Zircon syscall implementations","i":[[3,"Syscall","zircon_syscall","",null,null],[12,"thread","","",0,null],[12,"thread_fn","","",0,null],[11,"syscall","","",0,[[["u32",15]]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",0,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",0,[[["global",3],["box",3]],[["global",3],["any",8],["box",3]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"sys_channel_read","","Read/Receive a message from a channel.  ",0,[[["u32",15],["useroutptr",6],["usize",15],["u8",15],["useroutptr",6],["bool",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_channel_write","","Write a message to a channel.  ",0,[[["u32",15],["u8",15],["userinptr",6],["userinptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_channel_create","","Create a new channel.   ",0,[[["u32",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_channel_call_noretry","","",0,[[["u32",15],["deadline",3],["channelcallargs",3],["userinptr",6],["useroutptr",6],["handlevalue",6]]]],[11,"sys_channel_call_finish","","",0,[[["deadline",3],["channelcallargs",3],["useroutptr",6],["userinptr",6],["u32",15]],["zxresult",6]]],[11,"sys_channel_write_etc","","Write a message to a channel.  ",0,[[["u32",15],["u8",15],["userinptr",6],["handledisposition",3],["userinoutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_cprng_draw_once","","Draw random bytes from the kernel CPRNG.",0,[[["usize",15],["useroutptr",6],["u8",15]],["zxresult",6]]],[11,"sys_iommu_create","","Create a new object in the kernel representing an IOMMU …",0,[[["u32",15],["usize",15],["useroutptr",6],["u8",15],["userinptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_bti_create","","Creates a new bus transaction initiator.",0,[[["u32",15],["useroutptr",6],["u64",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_bti_pin","","Pin pages and grant devices access to them.  ",0,[[["u32",15],["usize",15],["devvaddr",6],["useroutptr",6],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_pmt_unpin","","Unpins pages that were previously pinned by <code>zx_bti_pin()</code>. …",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_bti_release_quarantine","","Releases all quarantined PMTs for the given BTI.",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_pc_firmware_tables","","",0,[[["useroutptr",6],["u64",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_interrupt_create","","Creates an interrupt object which represents a physical …",0,[[["usize",15],["u32",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_interrupt_bind","","Binds or unbinds an interrupt object to a port.",0,[[["u64",15],["u32",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_interrupt_trigger","","Triggers a virtual interrupt object.  ",0,[[["u32",15],["i64",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_interrupt_ack","","Acknowledge an interrupt and re-arm it.",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_interrupt_destroy","","Destroys an interrupt object.  ",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_interrupt_wait","","A blocking syscall which causes the caller to wait until …",0,[[["i64",15],["useroutptr",6],["handlevalue",6]]]],[11,"sys_debug_write","","Write debug info to the serial port.  ",0,[[["userinptr",6],["usize",15],["u8",15]],["zxresult",6]]],[11,"sys_debug_read","","Read debug info from the serial port.  ",0,[[["u32",15],["useroutptr",6],["useroutptr",6],["u8",15],["handlevalue",6]]]],[11,"sys_debuglog_create","","Create a kernel managed debuglog reader or writer.    ",0,[[["u32",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_debuglog_write","","Write log entry to debuglog.   ",0,[[["u32",15],["usize",15],["u8",15],["userinptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_debuglog_read","","Read log entries from debuglog.  ",0,[[["u32",15],["useroutptr",6],["usize",15],["u8",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_create_exception_channel","","Creates a channel which will receive exceptions from the …",0,[[["u32",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_exception_get_thread","","Create a handle for the exception’s thread.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_exception_get_process","","Create a handle for the exception’s process.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_fifo_create","","Creates a fifo, which is actually a pair of fifos of …",0,[[["usize",15],["u32",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_fifo_write","","Write data to a fifo.",0,[[["usize",15],["useroutptr",6],["u8",15],["userinptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_fifo_read","","Read data from a fifo.",0,[[["usize",15],["useroutptr",6],["useroutptr",6],["u8",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_futex_wait","","Wait on a futex.",0,[[["handlevalue",6],["deadline",3],["i32",15],["atomici32",3],["userinptr",6]]]],[11,"sys_futex_requeue","","Wake some waiters and requeue other waiters.",0,[[["u32",15],["handlevalue",6],["i32",15],["atomici32",3],["userinptr",6]],["zxresult",6]]],[11,"sys_futex_wake","","Wake some number of threads waiting on a futex.",0,[[["atomici32",3],["u32",15],["userinptr",6]],["zxresult",6]]],[11,"sys_futex_wake_single_owner","","Wake some number of threads waiting on a futex, and move …",0,[[["atomici32",3],["userinptr",6]],["zxresult",6]]],[11,"sys_handle_duplicate","","Creates a duplicate of handle.",0,[[["u32",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_handle_close","","Close a handle and reclaim the underlying object if no …",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_handle_close_many","","Close a number of handles.  ",0,[[["userinptr",6],["usize",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_handle_replace","","Creates a replacement for handle.",0,[[["u32",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_guest_create","","Creates a guest virtual machine.",0,[[["u32",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_guest_set_trap","","Set a trap within a guest.  ",0,[[["u32",15],["u64",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_vcpu_create","","Create a VCPU within a guest.",0,[[["u32",15],["useroutptr",6],["u64",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_vcpu_resume","","Resume execution of a VCPU.  ",0,[[["portpacket",3],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_vcpu_interrupt","","Raise an interrupt on a VCPU and may be called from any …",0,[[["u32",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_vcpu_read_state","","Read the state of a VCPU.  ",0,[[["u32",15],["useroutptr",6],["usize",15],["vcpustate",3],["handlevalue",6]],["zxresult",6]]],[11,"sys_vcpu_write_state","","Write the state of a VCPU.",0,[[["u32",15],["usize",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_object_get_property","","Ask for various properties of various kernel objects.",0,[[["u32",15],["usize",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_object_set_property","","Set various properties of various kernel objects.",0,[[["u32",15],["usize",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_object_wait_one","","A blocking syscall waits for signals on an object.",0,[[["u32",15],["deadline",3],["signal",3],["useroutptr",6],["handlevalue",6]]]],[11,"sys_object_get_info","","Query information about an object.",0,[[["u32",15],["usize",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_object_signal_peer","","Asserts and deasserts the userspace-accessible signal …",0,[[["u32",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_object_wait_async","","A non-blocking syscall subscribes for signals on an …",0,[[["u32",15],["u64",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_object_signal","","Signal an object.",0,[[["u32",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_object_wait_many","","Wait for signals on multiple objects.",0,[[["userinoutptr",6],["u32",15],["deadline",3],["userwaititem",3]]]],[11,"sys_object_get_child","","Find the child of an object by its kid.",0,[[["u32",15],["koid",6],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_add_subtract_io_range","","",0,[[["u64",15],["bool",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_cfg_pio_rw","","",0,[[["u32",15],["userinoutptr",6],["usize",15],["u8",15],["bool",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_init","","",0,[[["usize",15],["u32",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_map_interrupt","","",0,[[["i32",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_get_nth_device","","",0,[[["u32",15],["useroutptr",6],["pciedeviceinfo",3],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_get_bar","","",0,[[["u32",15],["useroutptr",6],["useroutptr",6],["pcibar",3],["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_enable_bus_master","","",0,[[["bool",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_query_irq_mode","","",0,[[["u32",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_set_irq_mode","","",0,[[["u32",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_config_read","","",0,[[["usize",15],["useroutptr",6],["u32",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_config_write","","",0,[[["usize",15],["u32",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_port_create","","Create an IO port.  ",0,[[["u32",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_port_wait","","Wait for a packet arrival in a port.  ",0,[[["deadline",3],["portpacket",3],["useroutptr",6],["handlevalue",6]]]],[11,"sys_port_queue","","Queue a packet to a port.  ",0,[[["portpacket",3],["userinptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_resource_create","","Create a resource object for use with other DDK syscalls. …",0,[[["u32",15],["useroutptr",6],["u64",15],["userinptr",6],["u8",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_timer_create","","Create a timer.",0,[[["u32",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_event_create","","Create an event.  ",0,[[["u32",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_eventpair_create","","Create an event pair.  ",0,[[["u32",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_timer_set","","Start a timer.",0,[[["deadline",3],["i64",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_timer_cancel","","Cancel a timer.  ",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_socket_create","","Create a socket.",0,[[["u32",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_socket_write","","Write data to a socket.",0,[[["u32",15],["usize",15],["useroutptr",6],["u8",15],["userinptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_socket_read","","Read data from a socket.  ",0,[[["u32",15],["useroutptr",6],["usize",15],["u8",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_socket_shutdown","","Prevent future reading or writing on a socket.   ",0,[[["u32",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_stream_create","","Create a stream from a VMO.",0,[[["u32",15],["usize",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_stream_writev","","Write data to a stream at the current seek offset.   ",0,[[["u32",15],["userinptr",6],["iovecin",6],["usize",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_stream_writev_at","","Write data to a stream at the given offset.   ",0,[[["u32",15],["usize",15],["userinptr",6],["iovecin",6],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_stream_readv","","Read data from a stream at the current seek offset.   ",0,[[["u32",15],["iovecout",6],["userinptr",6],["usize",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_stream_readv_at","","Read data from a stream at the given offset.   ",0,[[["u32",15],["usize",15],["iovecout",6],["userinptr",6],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_stream_seek","","Modify the seek offset.",0,[[["usize",15],["isize",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_system_get_event","","Retrieve a handle to a system event.",0,[[["u32",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_process_create","","Create a new process.",0,[[["usize",15],["u32",15],["useroutptr",6],["u8",15],["userinptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_process_exit","","Exits the currently running process.",0,[[["i64",15]],["zxresult",6]]],[11,"sys_thread_create","","Creates a thread within the specified process.",0,[[["usize",15],["u32",15],["useroutptr",6],["u8",15],["userinptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_process_start","","Start execution on a process.",0,[[["usize",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_thread_read_state","","Read one aspect of thread state.",0,[[["u32",15],["useroutptr",6],["usize",15],["u8",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_thread_write_state","","Write one aspect of thread state.",0,[[["u32",15],["usize",15],["u8",15],["userinptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_job_set_critical","","Sets process as critical to job.",0,[[["u32",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_thread_start","","Start execution on a thread.",0,[[["usize",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_thread_exit","","Terminate the current running thread.",0,[[],["zxresult",6]]],[11,"sys_task_suspend_token","","Suspend the given task.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_task_kill","","Kill the provided task (job, process, or thread).",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_job_create","","Create a new child job object given a parent job.",0,[[["u32",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_job_set_policy","","Sets one or more security and/or resource policies to an …",0,[[["u32",15],["usize",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_process_read_memory","","Read from the given process’s address space.",0,[[["usize",15],["useroutptr",6],["useroutptr",6],["u8",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_process_write_memory","","Write into the given process’s address space.",0,[[["usize",15],["useroutptr",6],["u8",15],["userinptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_clock_create","","Create a new clock object.  ",0,[[["useroutptr",6],["u8",15],["userinptr",6],["u64",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_clock_get","","Acquire the current time.",0,[[["u32",15],["useroutptr",6],["u64",15]],["zxresult",6]]],[11,"sys_clock_read","","Perform a basic read of the clock.  ",0,[[["u64",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_clock_adjust","","",0,[[["u32",15],["u64",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_clock_update","","Make adjustments to a clock object.",0,[[["u64",15],["userinptr",6],["u8",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_nanosleep","","Sleep for some number of nanoseconds.",0,[[["deadline",3]]]],[11,"sys_vmar_allocate","","Allocate a new subregion.",0,[[["u32",15],["useroutptr",6],["usize",15],["u64",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmar_map","","Add a memory mapping.",0,[[["u32",15],["usize",15],["useroutptr",6],["virtaddr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmar_destroy","","Destroy a virtual memory address region.",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_vmar_protect","","Set protection of virtual memory pages.",0,[[["u32",15],["u64",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmar_unmap","","Unmap virtual memory pages.",0,[[["usize",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_create","","Create a new virtual memory object(VMO).",0,[[["u32",15],["useroutptr",6],["u64",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_read","","Read bytes from a VMO.",0,[[["usize",15],["useroutptr",6],["u8",15],["u64",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_write","","Write bytes to a VMO.",0,[[["usize",15],["u8",15],["userinptr",6],["u64",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_replace_as_executable","","Add execute rights to a VMO.",0,[[["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_get_size","","Obtain the current size of a VMO object.",0,[[["usize",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_create_child","","Create a child of an existing VMO (new virtual memory …",0,[[["u32",15],["usize",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_create_physical","","Create a VM object referring to a specific contiguous …",0,[[["usize",15],["physaddr",6],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_create_contiguous","","Create a VM object referring to a specific contiguous …",0,[[["usize",15],["u32",15],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_set_size","","Resize a VMO object.",0,[[["usize",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_op_range","","Perform an operation on a range of a VMO.",0,[[["u32",15],["usize",15],["useroutptr",6],["u8",15],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_cache_policy","","Set the caching policy for pages held by a VMO.",0,[[["u32",15],["handlevalue",6]],["zxresult",6]]]],"p":[[3,"Syscall"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);